     1                                      BOOT_LOAD equ 0x7C00 ; ブートプログラムのロード位置
     2                                  
     3                                      ORG BOOT_LOAD ; ロードアドレスをアセンブラに指示
     4                                  
     5                                  ; マクロ
     6                                  %include "../include/macro.s"
     1                              <1> %macro cdecl 1-*.nolist
     2                              <1> 
     3                              <1>     %rep %0 - 1
     4                              <1>         push %{-1:-1}
     5                              <1>         %rotate - 1
     6                              <1>     %endrep
     7                              <1>     %rotate - 1
     8                              <1> 
     9                              <1>         call %1
    10                              <1> 
    11                              <1>     %if 1 < %0
    12                              <1>         add sp, (__BITS__ >> 3) * (%0 - 1)
    13                              <1>     %endif
    14                              <1> 
    15                              <1> %endmacro
     7                                  
     8                                  ; エントリポイント
     9                                  entry:
    10                                      ; BPB(BIOS Parameter Block)
    11 00000000 EB58                        jmp ipl ; IPLへジャンプ
    12 00000002 90<rept>                    times 90 - ($ - $$) db 0x90
    13                                  
    14                                      ; IPL
    15                                  ipl:
    16 0000005A FA                          cli ; 割り込み禁止
    17                                  
    18 0000005B B80000                      mov ax, 0x0000
    19 0000005E 8ED8                        mov ds, ax
    20 00000060 8EC0                        mov es, ax
    21 00000062 8ED0                        mov ss, ax
    22 00000064 BC007C                      mov sp, BOOT_LOAD
    23                                  
    24 00000067 FB                          sti ; 割り込み許可
    25                                  
    26 00000068 8816[8400]                  mov [BOOT.DRIVE], dl ; ブートドライブを保存
    27                                  
    28                                      ; 文字列を表示
    29 0000006C 68[7700]E8140083C4-         cdecl puts, .s0 ; puts(.s0);
    29 00000074 02                 
    30                                  
    31                                      ; 処理を終了
    32 00000075 EBFE                        jmp $ ; while (1); // 無限ループ
    33                                  
    34                                      ; データ
    35 00000077 426F6F74696E672E2E-     .s0 db "Booting...", 0x0A, 0x0D
    35 00000080 2E0A0D             
    36                                  
    37 00000083 00                      ALIGN 2, db 0
    38                                  BOOT:
    39 00000084 0000                    .DRIVE: dw 0
    40                                  
    41                                  ; モジュール
    42                                  %include "../modules/real/puts.s"
     1                              <1> puts:
     2                              <1>     ; スタックフレームの構築
     3 00000086 55                  <1>     push bp
     4 00000087 89E5                <1>     mov bp, sp
     5                              <1>     
     6                              <1>     ; レジスタの保存
     7 00000089 50                  <1>     push ax
     8 0000008A 53                  <1>     push bx
     9 0000008B 56                  <1>     push si
    10                              <1> 
    11                              <1>     ; 引数を取得
    12 0000008C 8B7604              <1>     mov si, [bp + 4] ; SI = 文字列へのアドレス
    13                              <1> 
    14                              <1>     ; 処理の開始
    15 0000008F B40E                <1>     mov ah, 0x0E    ; テレタイプ式1文字出力
    16 00000091 BB0000              <1>     mov bx, 0x0000  ; ページ番号と文字色を0に設定
    17 00000094 FC                  <1>     cld             ; DF = 0; // アドレス加算
    18                              <1> .10L:               ; do
    19                              <1>                     ; {
    20 00000095 AC                  <1>     lodsb           ;   AL = *SI++;
    21                              <1>                     ;
    22 00000096 3C00                <1>     cmp al, 0       ; if (0 == AL)
    23 00000098 7404                <1>     je .10E         ;   break;
    24                              <1>                     ;
    25 0000009A CD10                <1>     int 0x10        ; int 10(0x0E, AL); // 文字出力
    26 0000009C EBF7                <1>     jmp .10L        ;
    27                              <1> .10E:               ; } while (1);
    28                              <1> 
    29                              <1>     ; レジスタの復帰
    30 0000009E 5E                  <1>     pop si
    31 0000009F 5B                  <1>     pop bx
    32 000000A0 58                  <1>     pop ax
    33                              <1> 
    34                              <1>     ; スタックフレームの破棄
    35 000000A1 89EC                <1>     mov sp, bp
    36 000000A3 5D                  <1>     pop bp
    37                              <1> 
    38 000000A4 C3                  <1>     ret
    43                                  
    44                                  ; ブートフラグ（先頭512バイトの終了）
    45 000000A5 00<rept>                    times 510 - ($ - $$) db 0x00
    46 000001FE 55AA                        db 0x55, 0xAA
