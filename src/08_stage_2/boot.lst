     1                                      BOOT_LOAD equ 0x7C00 ; ブートプログラムのロード位置
     2                                  
     3                                      ORG BOOT_LOAD ; ロードアドレスをアセンブラに指示
     4                                  
     5                                  ; マクロ
     6                                  %include "../include/macro.s"
     1                              <1> %macro cdecl 1-*.nolist
     2                              <1> 
     3                              <1>     %rep %0 - 1
     4                              <1>         push %{-1:-1}
     5                              <1>         %rotate - 1
     6                              <1>     %endrep
     7                              <1>     %rotate - 1
     8                              <1> 
     9                              <1>         call %1
    10                              <1> 
    11                              <1>     %if 1 < %0
    12                              <1>         add sp, (__BITS__ >> 3) * (%0 - 1)
    13                              <1>     %endif
    14                              <1> 
    15                              <1> %endmacro
     7                                  
     8                                  ; エントリポイント
     9                                  entry:
    10                                      ; BPB(BIOS Parameter Block)
    11 00000000 EB58                        jmp ipl ; IPLへジャンプ
    12 00000002 90<rept>                    times 90 - ($ - $$) db 0x90
    13                                  
    14                                      ;IPL
    15                                  ipl:
    16 0000005A FA                          cli ; 割り込み禁止
    17                                  
    18 0000005B B80000                      mov ax, 0x0000
    19 0000005E 8ED8                        mov ds, ax
    20 00000060 8EC0                        mov es, ax
    21 00000062 8ED0                        mov ss, ax
    22 00000064 BC007C                      mov sp, BOOT_LOAD
    23                                  
    24 00000067 FB                          sti ; 割り込み許可
    25                                  
    26 00000068 8816[B800]                  mov [BOOT.DRIVE], dl ; ブートドライブを保存
    27                                  
    28                                      ; 文字列を表示
    29 0000006C 68[9800]E8480083C4-         cdecl puts, .s0 ; puts(.s0);
    29 00000074 02                 
    30                                  
    31                                      ; 次の512バイトを読み込む
    32 00000075 B402                        mov ah, 0x02            ; AH = 読み込み命令
    33 00000077 B001                        mov al, 1               ; AL = 読み込みセクた数 
    34 00000079 B90200                      mov cx, 0x0002          ; CX = シリンダ/セクタ
    35 0000007C B600                        mov dh, 0x000           ; DH = ヘッド位置
    36 0000007E 8A16[B800]                  mov dl, [BOOT.DRIVE]    ; DL = ドライブ位置
    37 00000082 BB007E                      mov bx, 0x7C00 + 512    ; BX = オフセット
    38 00000085 CD13                        int 0x13                ; if (CF = BIOS(0x13, 0x02))
    39 00000087 730C                    .10Q: jnc .10E              ; {
    40 00000089 68[A500]E82B0083C4-     .10T: cdecl puts, .e0       ;   puts(.e0);
    40 00000091 02                 
    41 00000092 E84400                      call reboot             ;   reboot();
    42                                  .10E:                       ; }
    43                                  
    44                                      ; 次のステージへ移行
    45 00000095 E96801                      jmp stage_2             ; ブート処理の第2ステージ
    46                                  
    47                                      ; データ
    48 00000098 426F6F74696E672E2E-     .s0 db "Booting...", 0x0A, 0x0D, 0
    48 000000A1 2E0A0D00           
    49 000000A5 4572726F723A736563-     .e0 db "Error:sector read", 0
    49 000000AE 746F72207265616400 
    50                                  
    51 000000B7 00                      ALIGN 2, db 0
    52                                  BOOT:
    53 000000B8 0000                    .DRIVE: dw 0
    54                                  
    55                                  ; モジュール
    56                                  %include "../modules/real/puts.s"
     1                              <1> puts:
     2                              <1>     ; スタックフレームの構築
     3 000000BA 55                  <1>     push bp
     4 000000BB 89E5                <1>     mov bp, sp
     5                              <1>     
     6                              <1>     ; レジスタの保存
     7 000000BD 50                  <1>     push ax
     8 000000BE 53                  <1>     push bx
     9 000000BF 56                  <1>     push si
    10                              <1> 
    11                              <1>     ; 引数を取得
    12 000000C0 8B7604              <1>     mov si, [bp + 4] ; SI = 文字列へのアドレス
    13                              <1> 
    14                              <1>     ; 処理の開始
    15 000000C3 B40E                <1>     mov ah, 0x0E    ; テレタイプ式1文字出力
    16 000000C5 BB0000              <1>     mov bx, 0x0000  ; ページ番号と文字色を0に設定
    17 000000C8 FC                  <1>     cld             ; DF = 0; // アドレス加算
    18                              <1> .10L:               ; do
    19                              <1>                     ; {
    20 000000C9 AC                  <1>     lodsb           ;   AL = *SI++;
    21                              <1>                     ;
    22 000000CA 3C00                <1>     cmp al, 0       ; if (0 == AL)
    23 000000CC 7404                <1>     je .10E         ;   break;
    24                              <1>                     ;
    25 000000CE CD10                <1>     int 0x10        ; int 10(0x0E, AL); // 文字出力
    26 000000D0 EBF7                <1>     jmp .10L        ;
    27                              <1> .10E:               ; } while (1);
    28                              <1> 
    29                              <1>     ; レジスタの復帰
    30 000000D2 5E                  <1>     pop si
    31 000000D3 5B                  <1>     pop bx
    32 000000D4 58                  <1>     pop ax
    33                              <1> 
    34                              <1>     ; スタックフレームの破棄
    35 000000D5 89EC                <1>     mov sp, bp
    36 000000D7 5D                  <1>     pop bp
    37                              <1> 
    38 000000D8 C3                  <1>     ret
    57                                  %include "../modules/real/reboot.s"
     1                              <1> reboot:
     2                              <1>         ; メッセージを表示
     3 000000D9 68[F500]E8DBFF83C4- <1>         cdecl puts, .s0 ; // 再起動メッセージを表示
     3 000000E1 02                  <1>
     4                              <1> 
     5                              <1>         ; キー入力待ち
     6                              <1> .10L:                   ; do
     7                              <1>                         ; {
     8 000000E2 B410                <1>         mov ah, 0x10    ;   // キー入力待ち
     9 000000E4 CD16                <1>         int 0x16        ;   AL = BIOS(0x16, 0x10);
    10                              <1>                         ;
    11 000000E6 3C20                <1>         cmp al, ' '     ;   ZF = AL === ' ';
    12 000000E8 75F8                <1>         jne .10L        ; }
    13                              <1> 
    14                              <1>         ; 改行を出力
    15 000000EA 68[1301]E8CAFF83C4- <1>         cdecl puts, .s1 ; 改行
    15 000000F2 02                  <1>
    16                              <1> 
    17                              <1>         ; 再起動
    18 000000F3 CD19                <1>         int 0x19        ; BIOS(0x19); reboot();
    19                              <1> 
    20                              <1>         ; 文字列データ
    21 000000F5 0A0D50757368205350- <1> .s0 db 0x0A, 0x0D, "Push SPACE key to reboot...", 0
    21 000000FE 414345206B65792074- <1>
    21 00000107 6F207265626F6F742E- <1>
    21 00000110 2E2E00              <1>
    22 00000113 0A0D0A0D00          <1> .s1 db 0x0A, 0x0D, 0x0A, 0x0D, 0
    58                                  
    59                                  ; ブートフラグ（先頭512バイトの終了）
    60 00000118 00<rept>                    times 510 - ($ - $$) db 0x00
    61 000001FE 55AA                        db 0x55, 0xAA
    62                                  
    63                                  ; ブート処理の第2ステージ
    64                                  stage_2:
    65                                      ; 文字列を表示
    66 00000200 68[0B02]E8B4FE83C4-         cdecl puts, .s0
    66 00000208 02                 
    67                                  
    68                                      ; 処理を終了
    69 00000209 EBFE                        jmp $
    70                                  
    71                                      ; データ
    72 0000020B 326E64207374616765-     .s0 db "2nd stage...", 0x0A, 0x0D, 0
    72 00000214 2E2E2E0A0D00       
    73                                  
    74                                  ; バディング（このファイルは8Kバイトとする)
    75 0000021A 00<rept>                    times (1024 * 8) - ($ - $$) db 0 ; 8Kバイト
