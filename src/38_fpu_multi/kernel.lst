     1                                  ;***********************************************************
     2                                  ;  マクロ
     3                                  ;***********************************************************
     4                                  %define USE_SYSTEM_CALL
     5                                  %define USE_TEST_AND_SET
     6                                  
     7                                  %include "../include/define.s"
     1                              <1> BOOT_SIZE           equ (1024 * 8)                      ; ブートコードサイズ
     2                              <1> KERNEL_SIZE         equ (1024 * 8)                      ; カーネルサイズ
     3                              <1> 
     4                              <1> BOOT_LOAD           equ 0x7C00                          ; ブートプログラムのロード位置
     5                              <1> BOOT_END            equ (BOOT_LOAD + BOOT_SIZE)
     6                              <1> 
     7                              <1> SECT_SIZE           equ (512)                           ; セクタサイズ
     8                              <1> 
     9                              <1> BOOT_SECT           equ (BOOT_SIZE / SECT_SIZE)         ; ブートプログラムのセクタ数
    10                              <1> KERNEL_SECT         equ (KERNEL_SIZE / SECT_SIZE)
    11                              <1> 
    12                              <1> E820_RECORD_SIZE    equ 20
    13                              <1> 
    14                              <1> KERNEL_LOAD         equ 0x0010_1000
    15                              <1> 
    16                              <1> VECT_BASE           equ 0x0010_0000
    17                              <1> 
    18                              <1> STACK_BASE          equ 0x0010_3000                     ; タスク用スタックエリア
    19                              <1> STACK_SIZE          equ 1024                            ; スタックサイズ
    20                              <1> 
    21                              <1> SP_TASK_0           equ STACK_BASE + (STACK_SIZE * 1)
    22                              <1> SP_TASK_1           equ STACK_BASE + (STACK_SIZE * 2)
    23                              <1> SP_TASK_2           equ STACK_BASE + (STACK_SIZE * 3)
    24                              <1> SP_TASK_3           equ STACK_BASE + (STACK_SIZE * 4)
     8                                  %include "../include/macro.s"
     1                              <1> %macro cdecl 1-*.nolist
     2                              <1> 
     3                              <1>     %rep %0 - 1
     4                              <1>         push %{-1:-1}
     5                              <1>         %rotate - 1
     6                              <1>     %endrep
     7                              <1>     %rotate - 1
     8                              <1> 
     9                              <1>         call %1
    10                              <1> 
    11                              <1>     %if 1 < %0
    12                              <1>         add sp, (__BITS__ >> 3) * (%0 - 1)
    13                              <1>     %endif
    14                              <1> 
    15                              <1> %endmacro
    16                              <1> 
    17                              <1> %macro set_vect 1-*.nolist
    18                              <1>         push eax
    19                              <1>         push edi
    20                              <1> 
    21                              <1>         mov edi, VECT_BASE + (%1 * 8)
    22                              <1>         mov eax, %2
    23                              <1> 
    24                              <1> 	%if 3 == %0
    25                              <1> 		mov [edi + 4], %3
    26                              <1> 	%endif
    27                              <1> 
    28                              <1>         mov [edi + 0], ax
    29                              <1>         shr eax, 16
    30                              <1>         mov [edi + 6], ax
    31                              <1> 
    32                              <1>         pop edi
    33                              <1>         pop eax
    34                              <1> %endmacro
    35                              <1> 
    36                              <1> %macro outp 2
    37                              <1>         mov al, %2
    38                              <1>         out %1, al
    39                              <1> %endmacro
    40                              <1> 
    41                              <1> %macro set_desc 2-*
    42                              <1>         push eax
    43                              <1>         push edi
    44                              <1> 
    45                              <1>         mov edi, %1             ; ディスクリプタアドレス
    46                              <1>         mov eax, %2             ; ベースアドレス
    47                              <1> 
    48                              <1>     %if 3 == %0
    49                              <1>         mov [edi + 0], %3       ; リミット
    50                              <1>     %endif
    51                              <1> 
    52                              <1>         mov [edi + 2], ax       ; ベース([15: 0])
    53                              <1>         shr eax, 16
    54                              <1>         mov [edi + 4], al       ; ベース([23:16])
    55                              <1>         mov [edi + 7], ah       ; ベース([31:24])
    56                              <1> 
    57                              <1>         pop edi
    58                              <1>         pop eax
    59                              <1> %endmacro
    60                              <1> 
    61                              <1> %macro set_gate 2-*
    62                              <1>         push eax
    63                              <1>         push edi
    64                              <1> 
    65                              <1>         mov edi, %1             ; ディスクリプタアドレス
    66                              <1>         mov eax, %2             ; ベースアドレス
    67                              <1> 
    68                              <1>         mov [edi + 0], ax       ; ベース([15: 0])
    69                              <1>         shr eax, 16
    70                              <1>         mov [edi + 6], ax       ; ベース([31:16])
    71                              <1> 
    72                              <1>         pop edi
    73                              <1>         pop eax
    74                              <1> %endmacro
    75                              <1> 
    76                              <1> struc drive
    77 00000000 <res 00000002>      <1>     .no resw 1      ; ドライブ番号
    78 00000002 <res 00000002>      <1>     .cyln resw 1    ; シリンダ
    79 00000004 <res 00000002>      <1>     .head resw 1    ; ヘッド
    80 00000006 <res 00000002>      <1>     .sect resw 1    ; セクタ
    81                              <1> endstruc
    82                              <1> 
    83                              <1> %define RING_ITEM_SIZE (1 << 4)
    84                              <1> %define RING_INDEX_MASK (RING_ITEM_SIZE - 1)
    85                              <1> 
    86                              <1> struc ring_buff
    87 00000000 <res 00000004>      <1>     .rp resd 1                  ; RP:読み込み位置
    88 00000004 <res 00000004>      <1>     .wp resd 1                  ; WP:書き込み位置　
    89 00000008 <res 00000010>      <1>     .item resb RING_ITEM_SIZE   ; バッファ
    90                              <1> endstruc
     9                                  
    10                                          ORG KERNEL_LOAD
    11                                  
    12                                  [BITS 32]
    13                                  ;***********************************************************
    14                                  ;  エントリポイント
    15                                  ;***********************************************************
    16                                  kernel:
    17                                          ;------------------------------------------
    18                                          ; フォントアドレスを取得
    19                                          ;------------------------------------------
    20 00000000 BE007E0000                      mov esi, BOOT_LOAD + SECT_SIZE
    21 00000005 0FB706                          movzx eax, word[esi + 0]
    22 00000008 0FB75E02                        movzx ebx, word[esi + 2]
    23 0000000C C1E004                          shl eax, 4
    24 0000000F 01D8                            add eax, ebx
    25 00000011 A3[1C020000]                    mov [FONT_ADR], eax
    26                                  
    27                                          ;------------------------------------------
    28                                          ; TSSディスクリプタの設定
    29                                          ;------------------------------------------
    30                                          set_desc GDT.tss_0, TSS_0
    30 00000016 50                  <1>  push eax
    30 00000017 57                  <1>  push edi
    30                              <1> 
    30 00000018 BF[A4050000]        <1>  mov edi, %1
    30 0000001D B8[24020000]        <1>  mov eax, %2
    30                              <1> 
    30                              <1>  %if 3 == %0
    30                              <1>  mov [edi + 0], %3
    30                              <1>  %endif
    30                              <1> 
    30 00000022 66894702            <1>  mov [edi + 2], ax
    30 00000026 C1E810              <1>  shr eax, 16
    30 00000029 884704              <1>  mov [edi + 4], al
    30 0000002C 886707              <1>  mov [edi + 7], ah
    30                              <1> 
    30 0000002F 5F                  <1>  pop edi
    30 00000030 58                  <1>  pop eax
    31                                          set_desc GDT.tss_1, TSS_1
    31 00000031 50                  <1>  push eax
    31 00000032 57                  <1>  push edi
    31                              <1> 
    31 00000033 BF[AC050000]        <1>  mov edi, %1
    31 00000038 B8[FC020000]        <1>  mov eax, %2
    31                              <1> 
    31                              <1>  %if 3 == %0
    31                              <1>  mov [edi + 0], %3
    31                              <1>  %endif
    31                              <1> 
    31 0000003D 66894702            <1>  mov [edi + 2], ax
    31 00000041 C1E810              <1>  shr eax, 16
    31 00000044 884704              <1>  mov [edi + 4], al
    31 00000047 886707              <1>  mov [edi + 7], ah
    31                              <1> 
    31 0000004A 5F                  <1>  pop edi
    31 0000004B 58                  <1>  pop eax
    32                                          set_desc GDT.tss_2, TSS_2
    32 0000004C 50                  <1>  push eax
    32 0000004D 57                  <1>  push edi
    32                              <1> 
    32 0000004E BF[B4050000]        <1>  mov edi, %1
    32 00000053 B8[D4030000]        <1>  mov eax, %2
    32                              <1> 
    32                              <1>  %if 3 == %0
    32                              <1>  mov [edi + 0], %3
    32                              <1>  %endif
    32                              <1> 
    32 00000058 66894702            <1>  mov [edi + 2], ax
    32 0000005C C1E810              <1>  shr eax, 16
    32 0000005F 884704              <1>  mov [edi + 4], al
    32 00000062 886707              <1>  mov [edi + 7], ah
    32                              <1> 
    32 00000065 5F                  <1>  pop edi
    32 00000066 58                  <1>  pop eax
    33                                          set_desc GDT.tss_3, TSS_3
    33 00000067 50                  <1>  push eax
    33 00000068 57                  <1>  push edi
    33                              <1> 
    33 00000069 BF[BC050000]        <1>  mov edi, %1
    33 0000006E B8[AC040000]        <1>  mov eax, %2
    33                              <1> 
    33                              <1>  %if 3 == %0
    33                              <1>  mov [edi + 0], %3
    33                              <1>  %endif
    33                              <1> 
    33 00000073 66894702            <1>  mov [edi + 2], ax
    33 00000077 C1E810              <1>  shr eax, 16
    33 0000007A 884704              <1>  mov [edi + 4], al
    33 0000007D 886707              <1>  mov [edi + 7], ah
    33                              <1> 
    33 00000080 5F                  <1>  pop edi
    33 00000081 58                  <1>  pop eax
    34                                  
    35                                          ;------------------------------------------
    36                                          ; コールゲートの設定
    37                                          ;------------------------------------------
    38                                          set_gate GDT.call_gate, call_gate
    38 00000082 50                  <1>  push eax
    38 00000083 57                  <1>  push edi
    38                              <1> 
    38 00000084 BF[C4050000]        <1>  mov edi, %1
    38 00000089 B8[7C110000]        <1>  mov eax, %2
    38                              <1> 
    38 0000008E 668907              <1>  mov [edi + 0], ax
    38 00000091 C1E810              <1>  shr eax, 16
    38 00000094 66894706            <1>  mov [edi + 6], ax
    38                              <1> 
    38 00000098 5F                  <1>  pop edi
    38 00000099 58                  <1>  pop eax
    39                                  
    40                                          ;------------------------------------------
    41                                          ; LDTの設定
    42                                          ;------------------------------------------
    43                                          set_desc GDT.ldt, LDT, word LDT_LIMIT
    43 0000009A 50                  <1>  push eax
    43 0000009B 57                  <1>  push edi
    43                              <1> 
    43 0000009C BF[9C050000]        <1>  mov edi, %1
    43 000000A1 B8[D2050000]        <1>  mov eax, %2
    43                              <1> 
    43                              <1>  %if 3 == %0
    43 000000A6 66C7074700          <1>  mov [edi + 0], %3
    43                              <1>  %endif
    43                              <1> 
    43 000000AB 66894702            <1>  mov [edi + 2], ax
    43 000000AF C1E810              <1>  shr eax, 16
    43 000000B2 884704              <1>  mov [edi + 4], al
    43 000000B5 886707              <1>  mov [edi + 7], ah
    43                              <1> 
    43 000000B8 5F                  <1>  pop edi
    43 000000B9 58                  <1>  pop eax
    44                                  
    45                                          ;------------------------------------------
    46                                          ; GDTをロード(再設定)
    47                                          ;------------------------------------------
    48 000000BA 0F0115[CC050000]                lgdt [GDTR]
    49                                  
    50                                          ;------------------------------------------
    51                                          ; スタックの設定
    52                                          ;------------------------------------------
    53 000000C1 BC00341000                      mov esp, SP_TASK_0
    54                                  
    55                                          ;------------------------------------------
    56                                          ; タスクレジスタの初期化
    57                                          ;------------------------------------------
    58 000000C6 66B82000                        mov ax, SS_TASK_0
    59 000000CA 0F00D8                          ltr ax
    60                                  
    61                                          ;------------------------------------------
    62                                          ; 初期化
    63                                          ;------------------------------------------
    64 000000CD E8840D0000                      cdecl init_int
    65 000000D2 E8050F0000                      cdecl init_pic
    66                                  
    67 000000D7 5057BF00001000B8-               set_vect 0x00, int_zero_div
    67 000000DF [BE0F0000]668907C1-
    67 000000E7 E810668947065F58   
    68 000000EF 5057BF38001000B8-               set_vect 0x07, int_nm
    68 000000F7 [E7110000]668907C1-
    68 000000FF E810668947065F58   
    69 00000107 5057BF00011000B8-               set_vect 0x20, int_timer
    69 0000010F [1A060000]668907C1-
    69 00000117 E810668947065F58   
    70 0000011F 5057BF08011000B8-               set_vect 0x21, int_keyboard
    70 00000127 [44100000]668907C1-
    70 0000012F E810668947065F58   
    71 00000137 5057BF40011000B8-               set_vect 0x28, int_rtc
    71 0000013F [07100000]668907C1-
    71 00000147 E810668947065F58   
    72 0000014F 5057BF08041000B8-               set_vect 0x81, trap_gate_81, word 0xEF00
    72 00000157 [AC110000]66C74704-
    72 0000015F 00EF668907C1E81066-
    72 00000168 8947065F58         
    73 0000016D 5057BF10041000B8-               set_vect 0x82, trap_gate_82, word 0xEF00
    73 00000175 [BA110000]66C74704-
    73 0000017D 00EF668907C1E81066-
    73 00000186 8947065F58         
    74                                  
    75                                          ;------------------------------------------
    76                                          ; デバイスの割り込み許可
    77                                          ;------------------------------------------
    78 0000018B 6A10E89E0E00006683-             cdecl rtc_int_en, 0x10
    78 00000194 C404               
    79 00000196 E8990F0000                      cdecl int_en_timer0
    80                                  
    81                                          ;------------------------------------------
    82                                          ; IMR(割り込みマスクレジスタ)の設定
    83                                          ;------------------------------------------
    84                                          outp 0x21, 0b_1111_1000
    84 0000019B B0F8                <1>  mov al, %2
    84 0000019D E621                <1>  out %1, al
    85                                          outp 0xA1, 0b_1111_1110
    85 0000019F B0FE                <1>  mov al, %2
    85 000001A1 E6A1                <1>  out %1, al
    86                                  
    87                                          ;------------------------------------------
    88                                          ; CPUの割り込み許可
    89                                          ;------------------------------------------
    90 000001A3 FB                              sti
    91                                  
    92                                          ;------------------------------------------
    93                                          ; フォントの一覧表示
    94                                          ;------------------------------------------
    95 000001A4 6A0D6A3FE83B080000-             cdecl draw_font, 63, 13
    95 000001AD 6683C408           
    96 000001B1 6A046A3FE8B1080000-             cdecl draw_color_bar, 63, 4
    96 000001BA 6683C408           
    97                                  
    98                                          ;------------------------------------------
    99                                          ; 文字列の表示
   100                                          ;------------------------------------------
   101 000001BE 68[06020000]680F01-             cdecl draw_str, 25, 14, 0x010F, .s0
   101 000001C6 00006A0E6A19E85C08-
   101 000001CF 00006683C410       
   102                                  
   103                                  .10L:
   104                                  
   105                                          ;------------------------------------------
   106                                          ; 回転する棒を表示
   107                                          ;------------------------------------------
   108 000001D5 E8690F0000                      cdecl draw_rotation_bar
   109                                  
   110                                          ;------------------------------------------
   111                                          ; キーコードの取得
   112                                          ;------------------------------------------
   113 000001DA 68[18020000]68-                 cdecl ring_rd, _KEY_BUFF, .int_key
   113 000001E0 [68100000]E8970E00-
   113 000001E8 006683C408         
   114 000001ED 83F800                          cmp eax, 0
   115 000001F0 7412                            je .10E
   116                                  
   117                                          ;------------------------------------------
   118                                          ; キーコードの表示
   119                                          ;------------------------------------------
   120 000001F2 68[68100000]6A1D6A-             cdecl draw_key, 2, 29, _KEY_BUFF
   120 000001FA 02E8E10E00006683C4-
   120 00000203 0C                 
   121                                  .10E:
   122 00000204 EBCF                            jmp .10L
   123                                  
   124 00000206 2048656C6C6F2C206B-     .s0:    db " Hello, kernel! ", 0
   124 0000020F 65726E656C212000   
   125                                  
   126 00000217 00                      ALIGN 4, db 0
   127 00000218 00000000                .int_key: dd 0
   128                                  
   129                                  ALIGN 4, db 0
   130 0000021C 00000000                FONT_ADR: dd 0
   131 00000220 00000000                RTC_TIME: dd 0
   132                                  
   133                                  ;***********************************************************
   134                                  ;  タスク
   135                                  ;***********************************************************
   136                                  %include "descriptor.s"
     1                              <1> ;***********************************************************
     2                              <1> ;  TSS
     3                              <1> ;***********************************************************
     4                              <1> TSS_0:
     5 00000224 00000000            <1> .link:    dd 0
     6 00000228 00321000            <1> .esp0:    dd SP_TASK_0 - 512
     7 0000022C 10000000            <1> .ss0:     dd DS_KERNEL
     8 00000230 00000000            <1> .esp1:    dd 0
     9 00000234 00000000            <1> .ss1:     dd 0
    10 00000238 00000000            <1> .esp2:    dd 0
    11 0000023C 00000000            <1> .ss2:     dd 0
    12 00000240 00000000            <1> .cr3:     dd 0
    13 00000244 00000000            <1> .eip:     dd 0
    14 00000248 00000000            <1> .eflags:  dd 0
    15 0000024C 00000000            <1> .eax:     dd 0
    16 00000250 00000000            <1> .ecx:     dd 0
    17 00000254 00000000            <1> .edx:     dd 0
    18 00000258 00000000            <1> .ebx:     dd 0
    19 0000025C 00000000            <1> .esp:     dd 0
    20 00000260 00000000            <1> .ebp:     dd 0
    21 00000264 00000000            <1> .esi:     dd 0
    22 00000268 00000000            <1> .edi:     dd 0
    23 0000026C 00000000            <1> .es:      dd 0
    24 00000270 00000000            <1> .cs:      dd 0
    25 00000274 00000000            <1> .ss:      dd 0
    26 00000278 00000000            <1> .ds:      dd 0
    27 0000027C 00000000            <1> .fs:      dd 0
    28 00000280 00000000            <1> .gs:      dd 0
    29 00000284 00000000            <1> .ldt:     dd 0
    30 00000288 00000000            <1> .io:      dd 0
    31 0000028C 00<rept>            <1> .fp_save: times 108 + 4 db 0
    32                              <1> 
    33                              <1> TSS_1:
    34 000002FC 00000000            <1> .link:    dd 0
    35 00000300 00361000            <1> .esp0:    dd SP_TASK_1 - 512
    36 00000304 10000000            <1> .ss0:     dd DS_KERNEL
    37 00000308 00000000            <1> .esp1:    dd 0
    38 0000030C 00000000            <1> .ss1:     dd 0
    39 00000310 00000000            <1> .esp2:    dd 0
    40 00000314 00000000            <1> .ss2:     dd 0
    41 00000318 00000000            <1> .cr3:     dd 0
    42 0000031C [78060000]          <1> .eip:     dd task_1
    43 00000320 02020000            <1> .eflags:  dd 0x0202
    44 00000324 00000000            <1> .eax:     dd 0
    45 00000328 00000000            <1> .ecx:     dd 0
    46 0000032C 00000000            <1> .edx:     dd 0
    47 00000330 00000000            <1> .ebx:     dd 0
    48 00000334 00381000            <1> .esp:     dd SP_TASK_1
    49 00000338 00000000            <1> .ebp:     dd 0
    50 0000033C 00000000            <1> .esi:     dd 0
    51 00000340 00000000            <1> .edi:     dd 0
    52 00000344 27000000            <1> .es:      dd DS_TASK_1
    53 00000348 1F000000            <1> .cs:      dd CS_TASK_1
    54 0000034C 27000000            <1> .ss:      dd DS_TASK_1
    55 00000350 27000000            <1> .ds:      dd DS_TASK_1
    56 00000354 27000000            <1> .fs:      dd DS_TASK_1
    57 00000358 27000000            <1> .gs:      dd DS_TASK_1
    58 0000035C 18000000            <1> .ldt:     dd SS_LDT
    59 00000360 00000000            <1> .io:      dd 0
    60 00000364 00<rept>            <1> .fp_save: times 108 + 4 db 0
    61                              <1> 
    62                              <1> TSS_2:
    63 000003D4 00000000            <1> .link:    dd 0
    64 000003D8 003A1000            <1> .esp0:    dd SP_TASK_2 - 512
    65 000003DC 10000000            <1> .ss0:     dd DS_KERNEL
    66 000003E0 00000000            <1> .esp1:    dd 0
    67 000003E4 00000000            <1> .ss1:	  dd 0
    68 000003E8 00000000            <1> .esp2:    dd 0
    69 000003EC 00000000            <1> .ss2:     dd 0
    70 000003F0 00000000            <1> .cr3:     dd 0
    71 000003F4 [AD060000]          <1> .eip:     dd task_2
    72 000003F8 02020000            <1> .eflags:  dd 0x0202
    73 000003FC 00000000            <1> .eax:     dd 0
    74 00000400 00000000            <1> .ecx:     dd 0
    75 00000404 00000000            <1> .edx:     dd 0
    76 00000408 00000000            <1> .ebx:     dd 0
    77 0000040C 003C1000            <1> .esp:	  dd SP_TASK_2
    78 00000410 00000000            <1> .ebp:	  dd 0
    79 00000414 00000000            <1> .esi:	  dd 0
    80 00000418 00000000            <1> .edi:	  dd 0
    81 0000041C 37000000            <1> .es:	  dd DS_TASK_2
    82 00000420 2F000000            <1> .cs:	  dd CS_TASK_2
    83 00000424 37000000            <1> .ss:      dd DS_TASK_2
    84 00000428 37000000            <1> .ds:	  dd DS_TASK_2
    85 0000042C 37000000            <1> .fs:      dd DS_TASK_2
    86 00000430 37000000            <1> .gs:	  dd DS_TASK_2
    87 00000434 18000000            <1> .ldt:	  dd SS_LDT
    88 00000438 00000000            <1> .io:	  dd 0
    89 0000043C 00<rept>            <1> .fp_save: times 108 + 4 db 0
    90                              <1> 
    91                              <1> TSS_3:
    92 000004AC 00000000            <1> .link:    dd 0
    93 000004B0 003E1000            <1> .esp0:    dd SP_TASK_3 - 512
    94 000004B4 10000000            <1> .ss0:     dd DS_KERNEL
    95 000004B8 00000000            <1> .esp1:    dd 0
    96 000004BC 00000000            <1> .ss1:	  dd 0
    97 000004C0 00000000            <1> .esp2:    dd 0
    98 000004C4 00000000            <1> .ss2:     dd 0
    99 000004C8 00000000            <1> .cr3:     dd 0
   100 000004CC [80070000]          <1> .eip:     dd task_3
   101 000004D0 02020000            <1> .eflags:  dd 0x0202
   102 000004D4 00000000            <1> .eax:     dd 0
   103 000004D8 00000000            <1> .ecx:     dd 0
   104 000004DC 00000000            <1> .edx:     dd 0
   105 000004E0 00000000            <1> .ebx:	  dd 0
   106 000004E4 00401000            <1> .esp:     dd SP_TASK_3
   107 000004E8 00000000            <1> .ebp:	  dd 0
   108 000004EC 00000000            <1> .esi:	  dd 0
   109 000004F0 00000000            <1> .edi:	  dd 0
   110 000004F4 47000000            <1> .es:	  dd DS_TASK_3
   111 000004F8 3F000000            <1> .cs:	  dd CS_TASK_3
   112 000004FC 47000000            <1> .ss:	  dd DS_TASK_3
   113 00000500 47000000            <1> .ds:	  dd DS_TASK_3
   114 00000504 47000000            <1> .fs:	  dd DS_TASK_3
   115 00000508 47000000            <1> .gs:	  dd DS_TASK_3
   116 0000050C 18000000            <1> .ldt:     dd SS_LDT
   117 00000510 00000000            <1> .io:	  dd 0
   118 00000514 00<rept>            <1> .fp_save: times 108 + 4 db 0
   119                              <1> 
   120                              <1> ;***********************************************************
   121                              <1> ;  グローバルディスクリプタテーブル
   122                              <1> ;***********************************************************
   123 00000584 0000000000000000    <1> GDT:        dq 0x0000000000000000
   124 0000058C FFFF0000009ACF00    <1> .cs_kernel: dq 0x00CF9A000000FFFF
   125 00000594 FFFF00000092CF00    <1> .ds_kernel: dq 0x00CF92000000FFFF
   126 0000059C 0000000000820000    <1> .ldt        dq 0x0000820000000000
   127 000005A4 6700000000890000    <1> .tss_0:     dq 0x0000890000000067
   128 000005AC 6700000000890000    <1> .tss_1:     dq 0x0000890000000067
   129 000005B4 6700000000890000    <1> .tss_2:     dq 0x0000890000000067
   130 000005BC 6700000000890000    <1> .tss_3:     dq 0x0000890000000067
   131 000005C4 0000080004EC0000    <1> .call_gate: dq 0x0000EC0400080000
   132                              <1> .end:
   133                              <1> 
   134                              <1> CS_KERNEL   equ .cs_kernel - GDT
   135                              <1> DS_KERNEL   equ .ds_kernel - GDT
   136                              <1> SS_LDT      equ .ldt - GDT
   137                              <1> SS_TASK_0   equ .tss_0 - GDT
   138                              <1> SS_TASK_1   equ .tss_1 - GDT
   139                              <1> SS_TASK_2   equ .tss_2 - GDT
   140                              <1> SS_TASK_3   equ .tss_3 - GDT
   141                              <1> SS_GATE_0   equ .call_gate - GDT
   142                              <1> 
   143 000005CC 4700                <1> GDTR:   dw GDT.end - GDT - 1
   144 000005CE [84050000]          <1>         dd GDT
   145                              <1> 
   146                              <1> ;***********************************************************
   147                              <1> ;  ローカルディスクリプタテーブル
   148                              <1> ;***********************************************************
   149 000005D2 0000000000000000    <1> LDT:        dq 0x0000000000000000
   150 000005DA FFFF0000009ACF00    <1> .cs_task_0: dq 0x00CF9A000000FFFF
   151 000005E2 FFFF00000092CF00    <1> .ds_task_0: dq 0x00CF92000000FFFF
   152 000005EA FFFF000000FACF00    <1> .cs_task_1: dq 0x00CFFA000000FFFF
   153 000005F2 FFFF000000F2CF00    <1> .ds_task_1: dq 0x00CFF2000000FFFF
   154 000005FA FFFF000000FACF00    <1> .cs_task_2: dq 0x00CFFA000000FFFF
   155 00000602 FFFF000000F2CF00    <1> .ds_task_2: dq 0x00CFF2000000FFFF
   156 0000060A FFFF000000FACF00    <1> .cs_task_3: dq 0x00CFFA000000FFFF
   157 00000612 FFFF000000F2CF00    <1> .ds_task_3: dq 0x00CFF2000000FFFF
   158                              <1> .end:
   159                              <1> 
   160                              <1> CS_TASK_0   equ (.cs_task_0 - LDT) | 4
   161                              <1> DS_TASK_0   equ (.ds_task_0 - LDT) | 4
   162                              <1> CS_TASK_1   equ (.cs_task_1 - LDT) | 4 | 3
   163                              <1> DS_TASK_1   equ (.ds_task_1 - LDT) | 4 | 3
   164                              <1> CS_TASK_2   equ	(.cs_task_2 - LDT) | 4 | 3
   165                              <1> DS_TASK_2   equ (.ds_task_2 - LDT) | 4 | 3
   166                              <1> CS_TASK_3   equ	(.cs_task_3 - LDT) | 4 | 3
   167                              <1> DS_TASK_3   equ (.ds_task_3 - LDT) | 4 | 3
   168                              <1> 
   169                              <1> LDT_LIMIT   equ .end - LDT - 1
   137                                  %include "modules/int_timer.s"
     1                              <1> int_timer:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【レジスタの保存】
     4                              <1>         ;-----------------------------------------
     5 0000061A 60                  <1>         pushad
     6 0000061B 1E                  <1>         push ds
     7 0000061C 06                  <1>         push es
     8                              <1> 
     9                              <1>         ;-----------------------------------------
    10                              <1>         ; データ用セグメントの設定
    11                              <1>         ;-----------------------------------------
    12 0000061D 66B81000            <1>         mov ax, 0x0010
    13 00000621 8ED8                <1>         mov ds, ax
    14 00000623 8EC0                <1>         mov es, ax
    15                              <1> 
    16                              <1>         ;-----------------------------------------
    17                              <1>         ; TICK
    18                              <1>         ;-----------------------------------------
    19 00000625 FF05[70060000]      <1>         inc dword [TIMER_COUNT]
    20                              <1> 
    21                              <1>         ;-----------------------------------------
    22                              <1>         ; 割り込みフラグをクリア(EOI)
    23                              <1>         ;-----------------------------------------
    24                              <1>         outp 0x20, 0x20
    24 0000062B B020                <2>  mov al, %2
    24 0000062D E620                <2>  out %1, al
    25                              <1> 
    26                              <1>         ;-----------------------------------------
    27                              <1>         ; タスクの切り替え
    28                              <1>         ;-----------------------------------------
    29 0000062F 660F00C8            <1>         str ax
    30 00000633 6683F820            <1>         cmp ax, SS_TASK_0
    31 00000637 7415                <1>         je .11L
    32 00000639 6683F828            <1>         cmp ax, SS_TASK_1
    33 0000063D 7418                <1>         je .12L
    34 0000063F 6683F830            <1>         cmp ax, SS_TASK_2
    35 00000643 741B                <1>         je .13L
    36                              <1> 
    37 00000645 EA000000002000      <1>         jmp SS_TASK_0:0
    38 0000064C EB1B                <1>         jmp .10E
    39                              <1> .11L:
    40 0000064E EA000000002800      <1>         jmp SS_TASK_1:0
    41 00000655 EB12                <1>         jmp .10E
    42                              <1> .12L:
    43 00000657 EA000000003000      <1>         jmp SS_TASK_2:0
    44 0000065E EB09                <1>         jmp .10E
    45                              <1> .13L:
    46 00000660 EA000000003800      <1>         jmp SS_TASK_3:0
    47 00000667 EB00                <1>         jmp .10E
    48                              <1> .10E:
    49                              <1> 
    50                              <1>         ;-----------------------------------------
    51                              <1>         ; 【レジスタの復帰】
    52                              <1>         ;-----------------------------------------
    53 00000669 07                  <1>         pop es
    54 0000066A 1F                  <1>         pop ds
    55 0000066B 61                  <1>         popad
    56                              <1> 
    57 0000066C CF                  <1>         iret
    58                              <1> 
    59 0000066D 00<rept>            <1> ALIGN 4, db 0
    60 00000670 0000000000000000    <1> TIMER_COUNT:  dq 0
   138                                  %include "tasks/task_1.s"
     1                              <1> task_1:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 文字列の表示
     4                              <1>         ;-----------------------------------------
     5 00000678 68[A6060000]6A076A- <1>         cdecl draw_str, 63, 0, 0x07, .s0
     5 00000680 006A3FE8A503000066- <1>
     5 00000689 83C410              <1>
     6                              <1> 
     7                              <1> .10L:
     8                              <1> 
     9                              <1>         ;-----------------------------------------
    10                              <1>         ; 時刻の表示
    11                              <1>         ;-----------------------------------------
    12 0000068C A1[20020000]        <1>         mov eax, [RTC_TIME]
    13 00000691 5068000700006A006A- <1>         cdecl draw_time, 72, 0, 0x0700, eax
    13 0000069A 48E8380700006683C4- <1>
    13 000006A3 10                  <1>
    14                              <1> 
    15 000006A4 EBE6                <1>         jmp .10L
    16                              <1> 
    17                              <1>         ;-----------------------------------------
    18                              <1>         ; データ
    19                              <1>         ;-----------------------------------------
    20 000006A6 5461736B2D3100      <1> .s0     db "Task-1", 0
   139                                  %include "tasks/task_2.s"
     1                              <1> task_2:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 文字列の表示
     4                              <1>         ;-----------------------------------------
     5 000006AD 68[72070000]6A076A- <1>         cdecl draw_str, 63, 1, 0x07, .s0
     5 000006B5 016A3FE87003000066- <1>
     5 000006BE 83C410              <1>
     6                              <1> 
     7                              <1>         ;-----------------------------------------
     8                              <1>         ; 初期値の設定
     9                              <1>         ;-----------------------------------------
    10 000006C1 DB05[60070000]      <1>         fild dword [.c1000]
    11 000006C7 D9EB                <1>         fldpi
    12 000006C9 DA35[64070000]      <1>         fidiv dword [.c180]
    13 000006CF D9EB                <1>         fldpi
    14 000006D1 DCC0                <1>         fadd st0, st0
    15 000006D3 D9EE                <1>         fldz
    16                              <1> 
    17                              <1> .10L:
    18                              <1> 
    19                              <1>         ;-----------------------------------------
    20                              <1>         ; sin(θ)
    21                              <1>         ;-----------------------------------------
    22 000006D5 D8C2                <1>         fadd st0, st2
    23 000006D7 D9F8                <1>         fprem
    24 000006D9 D9C0                <1>         fld st0
    25 000006DB D9FE                <1>         fsin
    26 000006DD D8CC                <1>         fmul st0, st4
    27                              <1> 
    28 000006DF DF35[68070000]      <1>         fbstp [.bcd]
    29                              <1> 
    30                              <1>         ;-----------------------------------------
    31                              <1>         ; 値の表示
    32                              <1>         ;-----------------------------------------
    33 000006E5 A1[68070000]        <1>         mov eax, [.bcd]
    34 000006EA 89C3                <1>         mov ebx, eax
    35                              <1> 
    36 000006EC 250F0F0000          <1>         and eax, 0x0F0F
    37 000006F1 0D30300000          <1>         or eax, 0x3030
    38                              <1> 
    39 000006F6 C1EB04              <1>         shr ebx, 4
    40 000006F9 81E30F0F0000        <1>         and ebx, 0x0F0F
    41 000006FF 81CB30300000        <1>         or ebx, 0x3030
    42                              <1> 
    43 00000705 883D[7A070000]      <1>         mov [.s2 + 0], bh
    44 0000070B 8825[7C070000]      <1>         mov [.s3 + 0], ah
    45 00000711 881D[7D070000]      <1>         mov [.s3 + 1], bl
    46 00000717 A2[7E070000]        <1>         mov [.s3 + 2], al
    47                              <1> 
    48 0000071C B807000000          <1>         mov eax, 7
    49 00000721 0FA305[71070000]    <1>         bt [.bcd + 9], eax
    50 00000728 7209                <1>         jc .10F
    51                              <1> 
    52 0000072A C605[79070000]2B    <1>         mov [.s1 + 0], byte '+'
    53 00000731 EB07                <1>         jmp .10E
    54                              <1> .10F:
    55                              <1> 
    56 00000733 C605[79070000]2D    <1>         mov [.s1 + 0], byte '-'
    57                              <1> .10E:
    58                              <1> 
    59 0000073A 68[79070000]6A076A- <1>         cdecl draw_str, 72, 1, 0x07, .s1
    59 00000742 016A48E8E302000066- <1>
    59 0000074B 83C410              <1>
    60                              <1> 
    61                              <1>         ;-----------------------------------------
    62                              <1>         ; ウェイト
    63                              <1>         ;-----------------------------------------
    64 0000074E 6A0AE8210B00006683- <1>         cdecl wait_tick, 10
    64 00000757 C404                <1>
    65                              <1> 
    66 00000759 E977FFFFFF          <1>         jmp .10L
    67                              <1> 
    68                              <1>         ;-----------------------------------------
    69                              <1>         ; データ
    70                              <1>         ;-----------------------------------------
    71 0000075E 00<rept>            <1> ALIGN 4, db 0
    72 00000760 E8030000            <1> .c1000: dd 1000
    73 00000764 B4000000            <1> .c180:  dd 180
    74                              <1> 
    75 00000768 00<rept>            <1> .bcd:   times 10 db 0x00
    76                              <1> 
    77 00000772 5461736B2D3200      <1> .s0     db "Task-2", 0
    78 00000779 2D                  <1> .s1:    db "-"
    79 0000077A 302E                <1> .s2:    db "0."
    80 0000077C 30303000            <1> .s3:    db "000", 0
   140                                  %include "tasks/task_3.s"
     1                              <1> task_3:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 文字列の表示
     4                              <1>         ;-----------------------------------------
     5 00000780 68[46080000]6A076A- <1>         cdecl draw_str, 63, 2, 0x07, .s0
     5 00000788 026A3FE89D02000066- <1>
     5 00000791 83C410              <1>
     6                              <1> 
     7                              <1>         ;-----------------------------------------
     8                              <1>         ; 初期値の設定
     9                              <1>         ;-----------------------------------------
    10 00000794 DB05[34080000]      <1>         fild dword [.c1000]
    11 0000079A D9EB                <1>         fldpi
    12 0000079C DA35[38080000]      <1>         fidiv dword [.c180]
    13 000007A2 D9EB                <1>         fldpi
    14 000007A4 DCC0                <1>         fadd st0, st0
    15 000007A6 D9EE                <1>         fldz
    16                              <1> 
    17                              <1> .10L:
    18                              <1> 
    19                              <1>         ;-----------------------------------------
    20                              <1>         ; cos(θ)
    21                              <1>         ;-----------------------------------------
    22 000007A8 D8C2                <1>         fadd st0, st2
    23 000007AA D9F8                <1>         fprem
    24 000007AC D9C0                <1>         fld st0
    25 000007AE D9FF                <1>         fcos
    26 000007B0 D8CC                <1>         fmul st0, st4
    27                              <1> 
    28 000007B2 DF35[3C080000]      <1>         fbstp [.bcd]
    29                              <1> 
    30                              <1>         ;-----------------------------------------
    31                              <1>         ; 値の表示
    32                              <1>         ;-----------------------------------------
    33 000007B8 A1[3C080000]        <1>         mov eax, [.bcd]
    34 000007BD 89C3                <1>         mov ebx, eax
    35                              <1> 
    36 000007BF 250F0F0000          <1>         and eax, 0x0F0F
    37 000007C4 0D30300000          <1>         or eax, 0x3030
    38                              <1> 
    39 000007C9 C1EB04              <1>         shr ebx, 4
    40 000007CC 81E30F0F0000        <1>         and ebx, 0x0F0F
    41 000007D2 81CB30300000        <1>         or ebx, 0x3030
    42                              <1> 
    43 000007D8 883D[4E080000]      <1>         mov [.s2 + 0], bh
    44 000007DE 8825[50080000]      <1>         mov [.s3 + 0], ah
    45 000007E4 881D[51080000]      <1>         mov [.s3 + 1], bl
    46 000007EA A2[52080000]        <1>         mov [.s3 + 2], al
    47                              <1> 
    48 000007EF B807000000          <1>         mov eax, 7
    49 000007F4 0FA305[45080000]    <1>         bt [.bcd + 9], eax
    50 000007FB 7209                <1>         jc .10F
    51                              <1> 
    52 000007FD C605[4D080000]2B    <1>         mov [.s1 + 0], byte '+'
    53 00000804 EB07                <1>         jmp .10E
    54                              <1> .10F:
    55                              <1> 
    56 00000806 C605[4D080000]2D    <1>         mov [.s1 + 0], byte '-'
    57                              <1> .10E:
    58                              <1> 
    59 0000080D 68[4D080000]6A076A- <1>         cdecl draw_str, 72, 2, 0x07, .s1
    59 00000815 026A48E81002000066- <1>
    59 0000081E 83C410              <1>
    60                              <1> 
    61                              <1>         ;-----------------------------------------
    62                              <1>         ; ウェイト
    63                              <1>         ;-----------------------------------------
    64 00000821 6A0AE84E0A00006683- <1>         cdecl wait_tick, 10
    64 0000082A C404                <1>
    65                              <1> 
    66 0000082C E977FFFFFF          <1>         jmp .10L
    67                              <1> 
    68                              <1>         ;-----------------------------------------
    69                              <1>         ; データ
    70                              <1>         ;-----------------------------------------
    71 00000831 00<rept>            <1> ALIGN 4, db 0
    72 00000834 E8030000            <1> .c1000: dd 1000
    73 00000838 B4000000            <1> .c180:  dd 180
    74                              <1> 
    75 0000083C 00<rept>            <1> .bcd:   times 10 db 0x00
    76                              <1> 
    77 00000846 5461736B2D3300      <1> .s0     db "Task-3", 0
    78 0000084D 2D                  <1> .s1:    db "-"
    79 0000084E 302E                <1> .s2:    db "0."
    80 00000850 30303000            <1> .s3:    db "000", 0
   141                                  
   142                                  ;***********************************************************
   143                                  ;  モジュール
   144                                  ;***********************************************************
   145                                  %include "../modules/protect/vga.s"
     1                              <1> vga_set_read_plane:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 00000854 55                  <1>         push ebp
     6 00000855 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;-----------------------------------------
     9                              <1>         ; 【レジスタの保存】
    10                              <1>         ;-----------------------------------------
    11 00000857 50                  <1>         push eax
    12 00000858 52                  <1>         push edx
    13                              <1> 
    14                              <1>         ;-----------------------------------------
    15                              <1>         ; 読み込みプレーンの選択
    16                              <1>         ;-----------------------------------------
    17 00000859 8A6508              <1>         mov ah, [ebp + 8]
    18 0000085C 80E403              <1>         and ah, 0x03
    19 0000085F B004                <1>         mov al, 0x04
    20 00000861 66BACE03            <1>         mov dx, 0x03CE
    21 00000865 66EF                <1>         out dx, ax
    22                              <1> 
    23                              <1>         ;-----------------------------------------
    24                              <1>         ; 【レジスタの復帰】
    25                              <1>         ;-----------------------------------------
    26 00000867 5A                  <1>         pop edx
    27 00000868 58                  <1>         pop eax
    28                              <1> 
    29                              <1>         ;-----------------------------------------
    30                              <1>         ; 【スタックフレームの破棄】
    31                              <1>         ;-----------------------------------------
    32 00000869 89EC                <1>         mov esp, ebp
    33 0000086B 5D                  <1>         pop ebp
    34                              <1> 
    35 0000086C C3                  <1>         ret
    36                              <1> 
    37                              <1> vga_set_write_plane:
    38                              <1>         ;-----------------------------------------
    39                              <1>         ; 【スタックフレームの構築】
    40                              <1>         ;-----------------------------------------
    41 0000086D 55                  <1>         push ebp
    42 0000086E 89E5                <1>         mov ebp, esp
    43                              <1> 
    44                              <1>         ;-----------------------------------------
    45                              <1>         ; 【レジスタの保存】
    46                              <1>         ;-----------------------------------------
    47 00000870 50                  <1>         push eax
    48 00000871 52                  <1>         push edx
    49                              <1> 
    50                              <1>         ;-----------------------------------------
    51                              <1>         ; 書き込みプレーンの選択
    52                              <1>         ;-----------------------------------------
    53 00000872 8A6508              <1>         mov ah, [ebp + 8]
    54 00000875 80E40F              <1>         and ah, 0x0F
    55 00000878 B002                <1>         mov al, 0x02
    56 0000087A 66BAC403            <1>         mov dx, 0x03C4
    57 0000087E 66EF                <1>         out dx, ax
    58                              <1> 
    59                              <1>         ;-----------------------------------------
    60                              <1>         ; 【レジスタの復帰】
    61                              <1>         ;-----------------------------------------
    62 00000880 5A                  <1>         pop edx
    63 00000881 58                  <1>         pop eax
    64                              <1> 
    65                              <1>         ;-----------------------------------------
    66                              <1>         ; 【スタックフレームの破棄】
    67                              <1>         ;-----------------------------------------
    68 00000882 89EC                <1>         mov esp, ebp
    69 00000884 5D                  <1>         pop ebp
    70                              <1> 
    71 00000885 C3                  <1>         ret
    72                              <1> 
    73                              <1> vram_font_copy:
    74                              <1>         ;-----------------------------------------
    75                              <1>         ; 【スタックフレームの構築】
    76                              <1>         ;-----------------------------------------
    77 00000886 55                  <1>         push ebp
    78 00000887 89E5                <1>         mov ebp, esp
    79                              <1> 
    80                              <1>         ;-----------------------------------------
    81                              <1>         ; 【レジスタの保存】
    82                              <1>         ;-----------------------------------------
    83 00000889 50                  <1>         push eax
    84 0000088A 53                  <1>         push ebx
    85 0000088B 51                  <1>         push ecx
    86 0000088C 52                  <1>         push edx
    87 0000088D 56                  <1>         push esi
    88 0000088E 57                  <1>         push edi
    89                              <1> 
    90                              <1>         ;-----------------------------------------
    91                              <1>         ; マスクデータの作成
    92                              <1>         ;-----------------------------------------
    93 0000088F 8B7508              <1>         mov esi, [ebp + 8]
    94 00000892 8B7D0C              <1>         mov edi, [ebp + 12]
    95 00000895 0FB64510            <1>         movzx eax, byte [ebp + 16]
    96 00000899 0FB75D14            <1>         movzx ebx, word [ebp + 20]
    97                              <1> 
    98 0000089D 84C7                <1>         test bh, al
    99 0000089F 0F94C6              <1>         setz dh
   100 000008A2 FECE                <1>         dec dh
   101                              <1> 
   102 000008A4 84C3                <1>         test bl, al
   103 000008A6 0F94C2              <1>         setz dl
   104 000008A9 FECA                <1>         dec dl
   105                              <1> 
   106                              <1>         ;-----------------------------------------
   107                              <1>         ; 16ドットフォントのコピー
   108                              <1>         ;-----------------------------------------
   109 000008AB FC                  <1>         cld
   110                              <1> 
   111 000008AC B910000000          <1>         mov ecx, 16
   112                              <1> .10L:
   113                              <1> 
   114                              <1>         ;-----------------------------------------
   115                              <1>         ; フォントマスクの作成
   116                              <1>         ;-----------------------------------------
   117 000008B1 AC                  <1>         lodsb
   118 000008B2 88C4                <1>         mov ah, al
   119 000008B4 F6D4                <1>         not ah
   120                              <1> 
   121                              <1>         ;-----------------------------------------
   122                              <1>         ; 前景色
   123                              <1>         ;-----------------------------------------
   124 000008B6 20D0                <1>         and al, dl
   125                              <1> 
   126                              <1>         ;-----------------------------------------
   127                              <1>         ; 背景色
   128                              <1>         ;-----------------------------------------
   129 000008B8 F7C310000000        <1>         test ebx, 0x0010
   130 000008BE 7404                <1>         jz .11F
   131 000008C0 2227                <1>         and ah, [edi]
   132 000008C2 EB02                <1>         jmp .11E
   133                              <1> .11F:
   134 000008C4 20F4                <1>         and ah, dh
   135                              <1> .11E:
   136                              <1> 
   137                              <1>         ;-----------------------------------------
   138                              <1>         ; 前景色と背景色をコピー
   139                              <1>         ;-----------------------------------------
   140 000008C6 08E0                <1>         or al, ah
   141                              <1> 
   142                              <1>         ;-----------------------------------------
   143                              <1>         ; 新しい値を出力
   144                              <1>         ;-----------------------------------------
   145 000008C8 8807                <1>         mov [edi], al
   146                              <1> 
   147 000008CA 83C750              <1>         add edi, 80
   148 000008CD E2E2                <1>         loop .10L
   149                              <1> .10E:
   150                              <1> 
   151                              <1>         ;-----------------------------------------
   152                              <1>         ; 【レジスタの復帰】
   153                              <1>         ;-----------------------------------------
   154 000008CF 5F                  <1>         pop edi
   155 000008D0 5E                  <1>         pop esi
   156 000008D1 5A                  <1>         pop edx
   157 000008D2 59                  <1>         pop ecx
   158 000008D3 5B                  <1>         pop ebx
   159 000008D4 58                  <1>         pop eax
   160                              <1> 
   161                              <1>         ;-----------------------------------------
   162                              <1>         ; 【スタックフレームの破棄】
   163                              <1>         ;-----------------------------------------
   164 000008D5 89EC                <1>         mov esp, ebp
   165 000008D7 5D                  <1>         pop ebp
   166                              <1> 
   167 000008D8 C3                  <1>         ret
   168                              <1> 
   169                              <1> vram_bit_copy:
   170                              <1>         ;-----------------------------------------
   171                              <1>         ; 【スタックフレームの構築】
   172                              <1>         ;-----------------------------------------
   173 000008D9 55                  <1>         push ebp
   174 000008DA 89E5                <1>         mov ebp, esp
   175                              <1> 
   176                              <1>         ;-----------------------------------------
   177                              <1>         ; 【レジスタの保存】
   178                              <1>         ;-----------------------------------------
   179 000008DC 50                  <1>         push eax
   180 000008DD 53                  <1>         push ebx
   181 000008DE 57                  <1>         push edi
   182                              <1> 
   183                              <1>         ;-----------------------------------------
   184                              <1>         ; ビットのコピー
   185                              <1>         ;-----------------------------------------
   186 000008DF 8B7D0C              <1>         mov edi, [ebp + 12]
   187 000008E2 0FB64510            <1>         movzx eax, byte [ebp + 16]
   188 000008E6 0FB75D14            <1>         movzx ebx, word [ebp + 20]
   189                              <1> 
   190 000008EA 84C3                <1>         test bl, al
   191 000008EC 0F94C3              <1>         setz bl
   192 000008EF FECB                <1>         dec bl
   193                              <1> 
   194                              <1>         ;-----------------------------------------
   195                              <1>         ; 反転処理
   196                              <1>         ;-----------------------------------------
   197 000008F1 8A4508              <1>         mov al, [ebp + 8]
   198 000008F4 88C4                <1>         mov ah, al
   199 000008F6 F6D4                <1>         not ah
   200                              <1> 
   201                              <1>         ;-----------------------------------------
   202                              <1>         ; 描画処理
   203                              <1>         ;-----------------------------------------
   204 000008F8 2227                <1>         and ah, [edi]
   205 000008FA 20D8                <1>         and al, bl
   206 000008FC 08E0                <1>         or al, ah
   207 000008FE 8807                <1>         mov [edi], al
   208                              <1> 
   209                              <1>         ;-----------------------------------------
   210                              <1>         ; 【レジスタの復帰】
   211                              <1>         ;-----------------------------------------
   212 00000900 5F                  <1>         pop edi
   213 00000901 5B                  <1>         pop ebx
   214 00000902 58                  <1>         pop eax
   215                              <1> 
   216                              <1>         ;-----------------------------------------
   217                              <1>         ; 【スタックフレームの破棄】
   218                              <1>         ;-----------------------------------------
   219 00000903 89EC                <1>         mov esp, ebp
   220 00000905 5D                  <1>         pop ebp
   221                              <1> 
   222 00000906 C3                  <1>         ret
   146                                  %include "../modules/protect/draw_char.s"
     1                              <1> draw_char:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 00000907 55                  <1>         push ebp
     6 00000908 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;-----------------------------------------
     9                              <1>         ; 【レジスタの保存】
    10                              <1>         ;-----------------------------------------
    11 0000090A 50                  <1>         push eax
    12 0000090B 53                  <1>         push ebx
    13 0000090C 51                  <1>         push ecx
    14 0000090D 52                  <1>         push edx
    15 0000090E 56                  <1>         push esi
    16 0000090F 57                  <1>         push edi
    17                              <1> 
    18                              <1>         ;-----------------------------------------
    19                              <1>         ; テストアンドセット
    20                              <1>         ;-----------------------------------------
    21                              <1> %ifdef	USE_TEST_AND_SET
    22 00000910 68[E4090000]E8AD08- <1>         cdecl test_and_set, IN_USE
    22 00000918 00006683C404        <1>
    23                              <1> %endif
    24                              <1> 
    25                              <1>         ;-----------------------------------------
    26                              <1>         ; コピー元フォントアドレスを設定
    27                              <1>         ;-----------------------------------------
    28 0000091E 0FB67514            <1>         movzx esi, byte [ebp + 20]
    29 00000922 C1E604              <1>         shl esi, 4
    30 00000925 0335[1C020000]      <1>         add esi, [FONT_ADR]
    31                              <1> 
    32                              <1>         ;-----------------------------------------
    33                              <1>         ; コピー先アドレスを取得
    34                              <1>         ; Adr = 0xA0000 + (640 / 8 * 16) * y + x
    35                              <1>         ;-----------------------------------------
    36 0000092B 8B7D0C              <1>         mov edi, [ebp + 12]
    37 0000092E C1E708              <1>         shl edi, 8
    38 00000931 8DBCBF00000A00      <1>         lea edi, [edi * 4 + edi + 0xA0000]
    39 00000938 037D08              <1>         add edi, [ebp + 8]
    40                              <1> 
    41                              <1>         ;-----------------------------------------
    42                              <1>         ; 1文字分のフォントを出力
    43                              <1>         ;-----------------------------------------
    44 0000093B 0FB75D10            <1>         movzx ebx, word[ebp + 16]
    45                              <1> 
    46 0000093F 6A03E80EFFFFFF6683- <1>         cdecl vga_set_read_plane, 0x03
    46 00000948 C404                <1>
    47 0000094A 6A08E81CFFFFFF6683- <1>         cdecl vga_set_write_plane, 0x08
    47 00000953 C404                <1>
    48 00000955 536A085756E827FFFF- <1>         cdecl vram_font_copy, esi, edi, 0x08, ebx
    48 0000095E FF6683C410          <1>
    49                              <1> 
    50 00000963 6A02E8EAFEFFFF6683- <1>         cdecl vga_set_read_plane, 0x02
    50 0000096C C404                <1>
    51 0000096E 6A04E8F8FEFFFF6683- <1>         cdecl vga_set_write_plane, 0x04
    51 00000977 C404                <1>
    52 00000979 536A045756E803FFFF- <1>         cdecl vram_font_copy, esi, edi, 0x04, ebx
    52 00000982 FF6683C410          <1>
    53                              <1> 
    54 00000987 6A01E8C6FEFFFF6683- <1>         cdecl vga_set_read_plane, 0x01
    54 00000990 C404                <1>
    55 00000992 6A02E8D4FEFFFF6683- <1>         cdecl vga_set_write_plane, 0x02
    55 0000099B C404                <1>
    56 0000099D 536A025756E8DFFEFF- <1>         cdecl vram_font_copy, esi, edi, 0x02, ebx
    56 000009A6 FF6683C410          <1>
    57                              <1> 
    58 000009AB 6A00E8A2FEFFFF6683- <1>         cdecl vga_set_read_plane, 0x00
    58 000009B4 C404                <1>
    59 000009B6 6A01E8B0FEFFFF6683- <1>         cdecl vga_set_write_plane, 0x01
    59 000009BF C404                <1>
    60 000009C1 536A015756E8BBFEFF- <1>         cdecl vram_font_copy, esi, edi, 0x01, ebx
    60 000009CA FF6683C410          <1>
    61                              <1> 
    62                              <1>         ;-----------------------------------------
    63                              <1>         ; 変数のクリア
    64                              <1>         ;-----------------------------------------
    65                              <1> %ifdef	USE_TEST_AND_SET
    66 000009CF C705[E4090000]0000- <1>         mov [IN_USE], dword 0
    66 000009D7 0000                <1>
    67                              <1> %endif
    68                              <1> 
    69                              <1>         ;-----------------------------------------
    70                              <1>         ; 【レジスタの復帰】
    71                              <1>         ;-----------------------------------------
    72 000009D9 5F                  <1>         pop edi
    73 000009DA 5E                  <1>         pop esi
    74 000009DB 5A                  <1>         pop edx
    75 000009DC 59                  <1>         pop ecx
    76 000009DD 5B                  <1>         pop ebx
    77 000009DE 58                  <1>         pop eax
    78                              <1> 
    79                              <1>         ;-----------------------------------------
    80                              <1>         ; 【スタックフレームの破棄】
    81                              <1>         ;-----------------------------------------
    82 000009DF 89EC                <1>         mov esp, ebp
    83 000009E1 5D                  <1>         pop ebp
    84                              <1> 
    85 000009E2 C3                  <1>         ret
    86                              <1> 
    87 000009E3 00                  <1> ALIGN 4, db 0
    88 000009E4 00000000            <1> IN_USE:	dd 0
   147                                  %include "../modules/protect/draw_font.s"
     1                              <1> draw_font:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 000009E8 55                  <1>         push ebp
     6 000009E9 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;-----------------------------------------
     9                              <1>         ; 【レジスタの保存】
    10                              <1>         ;-----------------------------------------
    11 000009EB 50                  <1>         push eax
    12 000009EC 53                  <1>         push ebx
    13 000009ED 51                  <1>         push ecx
    14 000009EE 52                  <1>         push edx
    15 000009EF 56                  <1>         push esi
    16 000009F0 57                  <1>         push edi
    17                              <1> 
    18                              <1>         ;-----------------------------------------
    19                              <1>         ; 基準となる位置をレジスタに保存
    20                              <1>         ;-----------------------------------------
    21 000009F1 8B7508              <1>         mov esi, [ebp + 8]
    22 000009F4 8B7D0C              <1>         mov edi, [ebp + 12]
    23                              <1> 
    24                              <1>         ;-----------------------------------------
    25                              <1>         ; フォントを一覧表示する
    26                              <1>         ;-----------------------------------------
    27 000009F7 B900000000          <1>         mov ecx, 0
    28                              <1> .10L:
    29 000009FC 81F900010000        <1>         cmp ecx, 256
    30 00000A02 731F                <1>         jae .10E
    31                              <1> 
    32 00000A04 89C8                <1>         mov eax, ecx
    33 00000A06 83E00F              <1>         and eax, 0x0F
    34 00000A09 01F0                <1>         add eax, esi
    35                              <1> 
    36 00000A0B 89CB                <1>         mov ebx, ecx
    37 00000A0D C1EB04              <1>         shr ebx, 4
    38 00000A10 01FB                <1>         add ebx, edi
    39                              <1> 
    40 00000A12 516A075350E8EBFEFF- <1>         cdecl draw_char, eax, ebx, 0x07, ecx
    40 00000A1B FF6683C410          <1>
    41                              <1> 
    42 00000A20 41                  <1>         inc ecx
    43 00000A21 EBD9                <1>         jmp .10L
    44                              <1> .10E:
    45                              <1> 
    46                              <1>         ;-----------------------------------------
    47                              <1>         ; 【レジスタの復帰】
    48                              <1>         ;-----------------------------------------
    49 00000A23 5F                  <1>         pop edi
    50 00000A24 5E                  <1>         pop esi
    51 00000A25 5A                  <1>         pop edx
    52 00000A26 59                  <1>         pop ecx
    53 00000A27 5B                  <1>         pop ebx
    54 00000A28 58                  <1>         pop eax
    55                              <1> 
    56                              <1>         ;-----------------------------------------
    57                              <1>         ; 【スタックフレームの破棄】
    58                              <1>         ;-----------------------------------------
    59 00000A29 89EC                <1>         mov esp, ebp
    60 00000A2B 5D                  <1>         pop ebp
    61                              <1> 
    62 00000A2C C3                  <1>         ret
   148                                  %include "../modules/protect/draw_str.s"
     1                              <1> draw_str:
     2                              <1>     ;---------------------------
     3                              <1>     ; スタックフレーム構築
     4                              <1>     ;---------------------------
     5 00000A2D 55                  <1>     push ebp
     6 00000A2E 89E5                <1>     mov ebp, esp
     7                              <1> 
     8                              <1>     ;---------------------------
     9                              <1>     ; レジスタの保存
    10                              <1>     ;---------------------------
    11 00000A30 50                  <1>     push eax
    12 00000A31 53                  <1>     push ebx
    13 00000A32 51                  <1>     push ecx
    14 00000A33 52                  <1>     push edx
    15 00000A34 56                  <1>     push esi
    16                              <1> 
    17                              <1>     ;---------------------------
    18                              <1>     ; 文字列を描画する
    19                              <1>     ;---------------------------
    20 00000A35 8B4D08              <1>     mov ecx, [ebp + 8]              ; ECX = 列;
    21 00000A38 8B550C              <1>     mov edx, [ebp + 12]             ; EDX = 行;
    22 00000A3B 0FB75D10            <1>     movzx ebx, word [ebp + 16]      ; EBX = 表示色;
    23 00000A3F 8B7514              <1>     mov esi, [ebp + 20]             ; ESI = 文字列へのアドレス;
    24                              <1> 
    25 00000A42 FC                  <1>     cld                             ; DF = 0; // アドレス加算
    26                              <1> .10L:                               ; do
    27                              <1>                                     ; {
    28 00000A43 AC                  <1>     lodsb                           ;   AL = *ESI++; // 文字を取得
    29 00000A44 3C00                <1>     cmp al, 0                       ;   if (0 == AL)
    30 00000A46 741A                <1>     je .10E                         ;       break;
    31                              <1> 
    32                              <1> %ifdef USE_SYSTEM_CALL
    33 00000A48 CD81                <1>     int 0x81                            ; sys_call(1, X, Y, 色, 文字)
    34                              <1> %else
    35                              <1>     cdecl draw_char, ecx, edx, ebx, eax ; draw_char();
    36                              <1> %endif
    37                              <1> 
    38 00000A4A 41                  <1>     inc ecx                         ;   ECX = 0; // 列を加算
    39 00000A4B 83F950              <1>     cmp ecx, 80                     ;   if (80 <= ECX) // 80文字以上?
    40 00000A4E 7C10                <1>     jl .12E                         ;   {
    41 00000A50 B900000000          <1>     mov ecx, 0                      ;       ECX = 0; // 列を初期化
    42 00000A55 42                  <1>     inc edx                         ;       EDX++; // 行を加算
    43 00000A56 83FA1E              <1>     cmp edx, 30                     ;       if (30 <= EDX) // 30行以上?
    44 00000A59 7C05                <1>     jl .12E                         ;       {
    45 00000A5B BA00000000          <1>     mov edx, 0                      ;           EDX = 0; // 行を初期化
    46                              <1>                                     ;       }
    47                              <1> .12E:                               ;   }
    48 00000A60 EBE1                <1>     jmp .10L
    49                              <1> .10E:                               ; } while (1);
    50                              <1> 
    51                              <1>     ;-----------------------------------------
    52                              <1>     ; 【レジスタの復帰】
    53                              <1>     ;-----------------------------------------
    54 00000A62 5E                  <1>     pop esi
    55 00000A63 5A                  <1>     pop edx
    56 00000A64 59                  <1>     pop ecx
    57 00000A65 5B                  <1>     pop ebx
    58 00000A66 58                  <1>     pop eax
    59                              <1> 
    60                              <1>     ;-----------------------------------------
    61                              <1>     ; 【スタックフレームの破棄】
    62                              <1>     ;-----------------------------------------
    63 00000A67 89EC                <1>     mov esp, ebp
    64 00000A69 5D                  <1>     pop ebp
    65                              <1> 
    66 00000A6A C3                  <1>     ret
   149                                  %include "../modules/protect/draw_color_bar.s"
     1                              <1> draw_color_bar:
     2                              <1>     ;---------------------------
     3                              <1>     ; スタックフレーム構築
     4                              <1>     ;---------------------------
     5 00000A6B 55                  <1>     push ebp
     6 00000A6C 89E5                <1>     mov ebp, esp
     7                              <1> 
     8                              <1>     ;---------------------------
     9                              <1>     ; レジスタの保存
    10                              <1>     ;---------------------------
    11 00000A6E 50                  <1>     push eax
    12 00000A6F 53                  <1>     push ebx
    13 00000A70 51                  <1>     push ecx
    14 00000A71 52                  <1>     push edx
    15 00000A72 56                  <1>     push esi
    16                              <1> 
    17                              <1>     ;-----------------------------------------
    18                              <1>     ; 基準となる位置をレジスタに保存
    19                              <1>     ;-----------------------------------------
    20 00000A73 8B7508              <1>     mov esi, [ebp + 8]
    21 00000A76 8B7D0C              <1>     mov edi, [ebp + 12]
    22                              <1> 
    23                              <1>     ;---------------------------
    24                              <1>     ; カラーバーを表示
    25                              <1>     ;---------------------------
    26 00000A79 B900000000          <1>     mov ecx, 0                      ; for (ECX = 0;
    27                              <1> .10L:
    28 00000A7E 83F910              <1>     cmp ecx, 16                     ;      ECX < 16;
    29 00000A81 732E                <1>     jae .10E                        ;
    30                              <1>                                     ;      ECX++)
    31                              <1>                                     ; {
    32 00000A83 89C8                <1>     mov eax, ecx                    ;   EAX = ECX;
    33 00000A85 83E001              <1>     and eax, 0x01                   ;   EAX &= 0x01;
    34 00000A88 C1E003              <1>     shl eax, 3                      ;   EAX *= 8; // 8文字分乗算
    35 00000A8B 01F0                <1>     add eax, esi                    ;   EAX += X;
    36                              <1> 
    37 00000A8D 89CB                <1>     mov ebx, ecx                    ;   EBX = ECX;
    38 00000A8F D1EB                <1>     shr ebx, 1                      ;   EBX /= 2
    39 00000A91 01FB                <1>     add ebx, edi                    ;   EBX += Y;
    40                              <1> 
    41 00000A93 89CA                <1>     mov edx, ecx                    ;   EDX = ECX;
    42 00000A95 D1E2                <1>     shl edx, 1                      ;   EDX /= 2;
    43 00000A97 8B92[C40A0000]      <1>     mov edx, [.t0 + edx]            ;   EDX += Y;
    44                              <1> 
    45 00000A9D 68[BB0A0000]525350- <1>     cdecl draw_str, eax, ebx, edx, .s0 ; draw_str();
    45 00000AA5 E883FFFFFF6683C410  <1>
    46                              <1> 
    47 00000AAE 41                  <1>     inc ecx                         ; // for (...ECX++)
    48 00000AAF EBCD                <1>     jmp .10L
    49                              <1> .10E:                               ; }
    50                              <1> 
    51                              <1>     ;-----------------------------------------
    52                              <1>     ; 【レジスタの復帰】
    53                              <1>     ;-----------------------------------------
    54 00000AB1 5F                  <1>     pop edi
    55 00000AB2 5E                  <1>     pop esi
    56 00000AB3 5A                  <1>     pop edx
    57 00000AB4 59                  <1>     pop ecx
    58 00000AB5 5B                  <1>     pop ebx
    59 00000AB6 58                  <1>     pop eax
    60                              <1> 
    61                              <1>     ;-----------------------------------------
    62                              <1>     ; 【スタックフレームの破棄】
    63                              <1>     ;-----------------------------------------
    64 00000AB7 89EC                <1>     mov esp, ebp
    65 00000AB9 5D                  <1>     pop ebp
    66                              <1> 
    67 00000ABA C3                  <1>     ret
    68                              <1> 
    69 00000ABB 202020202020202000  <1> .s0:    db '        ', 0
    70 00000AC4 00000008            <1> .t0:    dw 0x0000, 0x0800
    71 00000AC8 00010009            <1>         dw 0x0100, 0x0900
    72 00000ACC 0002000A            <1>         dw 0x0200, 0x0A00
    73 00000AD0 0003000B            <1>         dw 0x0300, 0x0B00
    74 00000AD4 0004000C            <1>         dw 0x0400, 0x0C00
    75 00000AD8 0005000D            <1>         dw 0x0500, 0x0D00
    76 00000ADC 0006000E            <1>         dw 0x0600, 0x0E00
    77 00000AE0 0007000F            <1>         dw 0x0700, 0x0F00
   150                                  %include "../modules/protect/draw_pixel.s"
     1                              <1> draw_pixel:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 00000AE4 55                  <1>         push ebp
     6 00000AE5 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;-----------------------------------------
     9                              <1>         ; 【レジスタの保存】
    10                              <1>         ;-----------------------------------------
    11 00000AE7 50                  <1>         push eax
    12 00000AE8 53                  <1>         push ebx
    13 00000AE9 51                  <1>         push ecx
    14 00000AEA 57                  <1>         push edi
    15                              <1> 
    16                              <1>         ;-----------------------------------------
    17                              <1>         ; Y座標を80倍する(640/8)
    18                              <1>         ;-----------------------------------------
    19 00000AEB 8B7D0C              <1>         mov edi, [ebp + 12]
    20 00000AEE C1E704              <1>         shl edi, 4
    21 00000AF1 8DBCBF00000A00      <1>         lea edi, [edi * 4 + edi + 0xA_0000]
    22                              <1> 
    23                              <1>         ;-----------------------------------------
    24                              <1>         ; X座標を1/8して加算
    25                              <1>         ;-----------------------------------------
    26 00000AF8 8B5D08              <1>         mov ebx, [ebp + 8]
    27 00000AFB 89D9                <1>         mov ecx, ebx
    28 00000AFD C1EB03              <1>         shr ebx, 3
    29 00000B00 01DF                <1>         add edi, ebx
    30                              <1> 
    31                              <1>         ;-----------------------------------------
    32                              <1>         ; X座標を8で割った余りからビット位置を計算
    33                              <1>         ; (0=0x80, 1=0x40, ..., 7=0x01)
    34                              <1>         ;-----------------------------------------
    35 00000B02 83E107              <1>         and ecx, 0x07
    36 00000B05 BB80000000          <1>         mov ebx, 0x80
    37 00000B0A D3EB                <1>         shr ebx, cl
    38                              <1> 
    39                              <1>         ;-----------------------------------------
    40                              <1>         ; 色指定
    41                              <1>         ;-----------------------------------------
    42 00000B0C 8B4D10              <1>         mov ecx, [ebp + 16]
    43                              <1> 
    44                              <1>         ;-----------------------------------------
    45                              <1>         ; プレーンごとに出力
    46                              <1>         ;-----------------------------------------
    47 00000B0F 6A03E83EFDFFFF6683- <1>         cdecl vga_set_read_plane, 0x03
    47 00000B18 C404                <1>
    48 00000B1A 6A08E84CFDFFFF6683- <1>         cdecl vga_set_write_plane, 0x08
    48 00000B23 C404                <1>
    49 00000B25 516A085753E8AAFDFF- <1>         cdecl vram_bit_copy, ebx, edi, 0x08, ecx
    49 00000B2E FF6683C410          <1>
    50                              <1> 
    51 00000B33 6A02E81AFDFFFF6683- <1>         cdecl vga_set_read_plane, 0x02
    51 00000B3C C404                <1>
    52 00000B3E 6A04E828FDFFFF6683- <1>         cdecl vga_set_write_plane, 0x04
    52 00000B47 C404                <1>
    53 00000B49 516A045753E886FDFF- <1>         cdecl vram_bit_copy, ebx, edi, 0x04, ecx
    53 00000B52 FF6683C410          <1>
    54                              <1> 
    55 00000B57 6A01E8F6FCFFFF6683- <1>         cdecl vga_set_read_plane, 0x01
    55 00000B60 C404                <1>
    56 00000B62 6A02E804FDFFFF6683- <1>         cdecl vga_set_write_plane, 0x02
    56 00000B6B C404                <1>
    57 00000B6D 516A025753E862FDFF- <1>         cdecl vram_bit_copy, ebx, edi, 0x02, ecx
    57 00000B76 FF6683C410          <1>
    58                              <1> 
    59 00000B7B 6A00E8D2FCFFFF6683- <1>         cdecl vga_set_read_plane, 0x00
    59 00000B84 C404                <1>
    60 00000B86 6A01E8E0FCFFFF6683- <1>         cdecl vga_set_write_plane, 0x01
    60 00000B8F C404                <1>
    61 00000B91 516A015753E83EFDFF- <1>         cdecl vram_bit_copy, ebx, edi, 0x01, ecx
    61 00000B9A FF6683C410          <1>
    62                              <1> 
    63                              <1>         ;-----------------------------------------
    64                              <1>         ; 【レジスタの復帰】
    65                              <1>         ;-----------------------------------------
    66 00000B9F 5F                  <1>         pop edi
    67 00000BA0 59                  <1>         pop ecx
    68 00000BA1 5B                  <1>         pop ebx
    69 00000BA2 58                  <1>         pop eax
    70                              <1> 
    71                              <1>         ;-----------------------------------------
    72                              <1>         ; 【スタックフレームの破棄】
    73                              <1>         ;-----------------------------------------
    74 00000BA3 89EC                <1>         mov esp, ebp
    75 00000BA5 5D                  <1>         pop ebp
    76                              <1> 
    77 00000BA6 C3                  <1>         ret
    78                              <1> 
    79 00000BA7 202020202020202000  <1> .s0:    db '        ', 0
    80 00000BB0 00000008            <1> .t0:    dw 0x0000, 0x0800
    81 00000BB4 00010009            <1>         dw 0x0100, 0x0900
    82 00000BB8 0002000A            <1>         dw 0x0200, 0x0A00
    83 00000BBC 0003000B            <1>         dw 0x0300, 0x0B00
    84 00000BC0 0004000C            <1>         dw 0x0400, 0x0C00
    85 00000BC4 0005000D            <1>         dw 0x0500, 0x0D00
    86 00000BC8 0006000E            <1>         dw 0x0600, 0x0E00
    87 00000BCC 0007000F            <1>         dw 0x0700, 0x0F00
   151                                  %include "../modules/protect/draw_line.s"
     1                              <1> draw_line:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 00000BD0 55                  <1>         push ebp
     6 00000BD1 89E5                <1>         mov ebp, esp
     7                              <1> 
     8 00000BD3 6A00                <1>         push dword 0
     9 00000BD5 6A00                <1>         push dword 0
    10 00000BD7 6A00                <1>         push dword 0
    11 00000BD9 6A00                <1>         push dword 0
    12 00000BDB 6A00                <1>         push dword 0
    13 00000BDD 6A00                <1>         push dword 0
    14 00000BDF 6A00                <1>         push dword 0
    15                              <1> 
    16                              <1>         ;-----------------------------------------
    17                              <1>         ; 【レジスタの保存】
    18                              <1>         ;-----------------------------------------
    19 00000BE1 50                  <1>         push eax
    20 00000BE2 53                  <1>         push ebx
    21 00000BE3 51                  <1>         push ecx
    22 00000BE4 52                  <1>         push edx
    23 00000BE5 56                  <1>         push esi
    24 00000BE6 57                  <1>         push edi
    25                              <1> 
    26                              <1>         ;-----------------------------------------
    27                              <1>         ; 幅を計算(X軸)
    28                              <1>         ;-----------------------------------------
    29 00000BE7 8B4508              <1>         mov eax, [ebp + 8]
    30 00000BEA 8B5D10              <1>         mov ebx, [ebp + 16]
    31 00000BED 29C3                <1>         sub ebx, eax
    32 00000BEF 7D09                <1>         jge .10F
    33                              <1> 
    34 00000BF1 F7DB                <1>         neg ebx
    35 00000BF3 BEFFFFFFFF          <1>         mov esi, -1
    36 00000BF8 EB05                <1>         jmp .10E
    37                              <1> .10F:
    38 00000BFA BE01000000          <1>         mov esi, 1
    39                              <1> .10E:
    40                              <1> 
    41                              <1>         ;-----------------------------------------
    42                              <1>         ; 高さを計算(Y軸)
    43                              <1>         ;-----------------------------------------
    44 00000BFF 8B4D0C              <1>         mov ecx, [ebp + 12]
    45 00000C02 8B5514              <1>         mov edx, [ebp + 20]
    46 00000C05 29CA                <1>         sub edx, ecx
    47 00000C07 7D09                <1>         jge .20F
    48                              <1> 
    49 00000C09 F7DA                <1>         neg edx
    50 00000C0B BFFFFFFFFF          <1>         mov edi, -1
    51 00000C10 EB05                <1>         jmp .20E
    52                              <1> .20F:
    53 00000C12 BF01000000          <1>         mov edi, 1
    54                              <1> .20E:
    55                              <1> 
    56                              <1>         ;-----------------------------------------
    57                              <1>         ; X軸
    58                              <1>         ;-----------------------------------------
    59 00000C17 8945F8              <1>         mov [ebp - 8], eax
    60 00000C1A 895DF4              <1>         mov [ebp - 12], ebx
    61 00000C1D 8975F0              <1>         mov [ebp - 16], esi
    62                              <1> 
    63                              <1>         ;-----------------------------------------
    64                              <1>         ; Y軸
    65                              <1>         ;-----------------------------------------
    66 00000C20 894DEC              <1>         mov [ebp - 20], ecx
    67 00000C23 8955E8              <1>         mov [ebp - 24], edx
    68 00000C26 897DE4              <1>         mov [ebp - 28], edi
    69                              <1> 
    70                              <1>         ;-----------------------------------------
    71                              <1>         ; 基準軸を決める
    72                              <1>         ;-----------------------------------------
    73 00000C29 39D3                <1>         cmp ebx, edx
    74 00000C2B 7F08                <1>         jg .22F
    75                              <1> 
    76 00000C2D 8D75EC              <1>         lea esi, [ebp - 20]
    77 00000C30 8D7DF8              <1>         lea edi, [ebp - 8]
    78                              <1> 
    79 00000C33 EB06                <1>         jmp .22E
    80                              <1> .22F:
    81 00000C35 8D75F8              <1>         lea esi, [ebp - 8]
    82 00000C38 8D7DEC              <1>         lea edi, [ebp - 20]
    83                              <1> .22E:
    84                              <1> 
    85                              <1>         ;-----------------------------------------
    86                              <1>         ; 繰り返し回数(基準軸のドット数)
    87                              <1>         ;-----------------------------------------
    88 00000C3B 8B4EFC              <1>         mov ecx, [esi - 4]
    89 00000C3E 83F900              <1>         cmp ecx, 0
    90 00000C41 7505                <1>         jnz .30E
    91 00000C43 B901000000          <1>         mov ecx, 1
    92                              <1> .30E:
    93                              <1> 
    94                              <1>         ;-----------------------------------------
    95                              <1>         ; 線を描画
    96                              <1>         ;-----------------------------------------
    97                              <1> .50L:
    98                              <1> 
    99                              <1> %ifdef  USE_SYSTEM_CALL
   100 00000C48 89C8                <1>         mov eax, ecx
   101                              <1> 
   102 00000C4A 8B5D18              <1>         mov ebx, [ebp + 24]
   103 00000C4D 8B4DF8              <1>         mov ecx, [ebp - 8]
   104 00000C50 8B55EC              <1>         mov edx, [ebp - 20]
   105 00000C53 CD82                <1>         int 0x82
   106                              <1> 
   107 00000C55 89C1                <1>         mov ecx, eax
   108                              <1> %else
   109                              <1>         cdecl draw_pixel, dword [ebp - 8], dword [ebp - 20], dword [ebp + 24]
   110                              <1> %endif
   111                              <1> 
   112 00000C57 8B46F8              <1>         mov eax, [esi - 8]
   113 00000C5A 0106                <1>         add [esi - 0], eax
   114                              <1> 
   115 00000C5C 8B45FC              <1>         mov eax, [ebp - 4]
   116 00000C5F 0347FC              <1>         add eax, [edi - 4]
   117 00000C62 8B5EFC              <1>         mov ebx, [esi - 4]
   118                              <1> 
   119 00000C65 39D8                <1>         cmp eax, ebx
   120 00000C67 7C07                <1>         jl .52E
   121 00000C69 29D8                <1>         sub eax, ebx
   122                              <1> 
   123 00000C6B 8B5FF8              <1>         mov ebx, [edi - 8]
   124 00000C6E 011F                <1>         add [edi - 0], ebx
   125                              <1> .52E:
   126 00000C70 8945FC              <1>         mov [ebp - 4], eax
   127                              <1> 
   128 00000C73 E2D3                <1>         loop .50L
   129                              <1> .50E:
   130                              <1> 
   131                              <1>         ;-----------------------------------------
   132                              <1>         ; 【レジスタの復帰】
   133                              <1>         ;-----------------------------------------
   134 00000C75 5F                  <1>         pop edi
   135 00000C76 5E                  <1>         pop esi
   136 00000C77 5A                  <1>         pop edx
   137 00000C78 59                  <1>         pop ecx
   138 00000C79 5B                  <1>         pop ebx
   139 00000C7A 58                  <1>         pop eax
   140                              <1> 
   141                              <1>         ;-----------------------------------------
   142                              <1>         ; 【スタックフレームの破棄】
   143                              <1>         ;-----------------------------------------
   144 00000C7B 89EC                <1>         mov esp, ebp
   145 00000C7D 5D                  <1>         pop ebp
   146                              <1> 
   147 00000C7E C3                  <1>         ret
   148                              <1> 
   149 00000C7F 202020202020202000  <1> .s0:    db '        ', 0
   150 00000C88 00000008            <1> .t0:    dw 0x0000, 0x0800
   151 00000C8C 00010009            <1>         dw 0x0100, 0x0900
   152 00000C90 0002000A            <1>         dw 0x0200, 0x0A00
   153 00000C94 0003000B            <1>         dw 0x0300, 0x0B00
   154 00000C98 0004000C            <1>         dw 0x0400, 0x0C00
   155 00000C9C 0005000D            <1>         dw 0x0500, 0x0D00
   156 00000CA0 0006000E            <1>         dw 0x0600, 0x0E00
   157 00000CA4 0007000F            <1>         dw 0x0700, 0x0F00
   152                                  %include "../modules/protect/draw_rect.s"
     1                              <1> draw_rect:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 00000CA8 55                  <1>         push ebp
     6 00000CA9 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;-----------------------------------------
     9                              <1>         ; 【レジスタの保存】
    10                              <1>         ;-----------------------------------------
    11 00000CAB 50                  <1>         push eax
    12 00000CAC 53                  <1>         push ebx
    13 00000CAD 51                  <1>         push ecx
    14 00000CAE 52                  <1>         push edx
    15 00000CAF 56                  <1>         push esi
    16                              <1> 
    17                              <1>         ;-----------------------------------------
    18                              <1>         ; 引数の取得
    19                              <1>         ;-----------------------------------------
    20 00000CB0 8B4508              <1>         mov eax, [ebp + 8]
    21 00000CB3 8B5D0C              <1>         mov ebx, [ebp + 12]
    22 00000CB6 8B4D10              <1>         mov ecx, [ebp + 16]
    23 00000CB9 8B5514              <1>         mov edx, [ebp + 20]
    24 00000CBC 8B7518              <1>         mov esi, [ebp + 24]
    25                              <1> 
    26                              <1>         ;-----------------------------------------
    27                              <1>         ; 座標軸の大小を確定
    28                              <1>         ;-----------------------------------------
    29 00000CBF 39C8                <1>         cmp eax, ecx
    30 00000CC1 7C01                <1>         jl .10E
    31 00000CC3 91                  <1>         xchg eax, ecx
    32                              <1> .10E:
    33 00000CC4 39D3                <1>         cmp ebx, edx
    34 00000CC6 7C02                <1>         jl .20E
    35 00000CC8 87DA                <1>         xchg ebx, edx
    36                              <1> .20E:
    37                              <1> 
    38                              <1>         ;-----------------------------------------
    39                              <1>         ; 矩形を描画
    40                              <1>         ;-----------------------------------------
    41 00000CCA 5653515350E8FCFEFF- <1>         cdecl draw_line, eax, ebx, ecx, ebx, esi
    41 00000CD3 FF6683C414          <1>
    42 00000CD8 5652505350E8EEFEFF- <1>         cdecl draw_line, eax, ebx, eax, edx, esi
    42 00000CE1 FF6683C414          <1>
    43                              <1> 
    44 00000CE6 4A                  <1>         dec edx
    45 00000CE7 5652515250E8DFFEFF- <1>         cdecl draw_line, eax, edx, ecx, edx, esi
    45 00000CF0 FF6683C414          <1>
    46 00000CF5 42                  <1>         inc edx
    47                              <1> 
    48 00000CF6 49                  <1>         dec ecx
    49 00000CF7 5652515351E8CFFEFF- <1>         cdecl draw_line, ecx, ebx, ecx, edx, esi
    49 00000D00 FF6683C414          <1>
    50                              <1> 
    51                              <1>         ;-----------------------------------------
    52                              <1>         ; 【レジスタの復帰】
    53                              <1>         ;-----------------------------------------
    54 00000D05 5E                  <1>         pop esi
    55 00000D06 5A                  <1>         pop edx
    56 00000D07 59                  <1>         pop ecx
    57 00000D08 5B                  <1>         pop ebx
    58 00000D09 58                  <1>         pop eax
    59                              <1> 
    60                              <1>         ;-----------------------------------------
    61                              <1>         ; 【スタックフレームの破棄】
    62                              <1>         ;-----------------------------------------
    63 00000D0A 89EC                <1>         mov esp, ebp
    64 00000D0C 5D                  <1>         pop ebp
    65                              <1> 
    66 00000D0D C3                  <1>         ret
   153                                  %include "../modules/protect/itoa.s"
     1                              <1> itoa:
     2                              <1>         ;---------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;---------------------------------------
     5 00000D0E 55                  <1>         push ebp
     6 00000D0F 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;---------------------------------------
     9                              <1>         ; 【レジスタの保存】
    10                              <1>         ;---------------------------------------
    11 00000D11 50                  <1>         push eax
    12 00000D12 53                  <1>         push ebx
    13 00000D13 51                  <1>         push ecx
    14 00000D14 52                  <1>         push edx
    15 00000D15 56                  <1>         push esi
    16 00000D16 57                  <1>         push edi
    17                              <1> 
    18                              <1>         ;---------------------------------------
    19                              <1>         ; 引数を取得
    20                              <1>         ;---------------------------------------
    21 00000D17 8B4508              <1>         mov eax, [ebp + 8]
    22 00000D1A 8B750C              <1>         mov esi, [ebp + 12]
    23 00000D1D 8B4D10              <1>         mov ecx, [ebp + 16]
    24                              <1> 
    25 00000D20 89F7                <1>         mov edi, esi
    26 00000D22 01CF                <1>         add edi, ecx
    27 00000D24 4F                  <1>         dec edi
    28                              <1> 
    29 00000D25 8B5D18              <1>         mov ebx, [ebp + 24]
    30                              <1> 
    31                              <1>         ;---------------------------------------
    32                              <1>         ; 符号付き判定
    33                              <1>         ;---------------------------------------
    34 00000D28 F7C301000000        <1>         test ebx, 0b0001
    35                              <1> .10Q:
    36 00000D2E 7408                <1>         je .10E
    37 00000D30 83F800              <1>         cmp eax, 0
    38                              <1> .12Q:
    39 00000D33 7D03                <1>         jge .12E
    40 00000D35 83CB02              <1>         or ebx, 0b0010
    41                              <1> .12E:
    42                              <1> .10E:
    43                              <1> 
    44                              <1>         ;---------------------------------------
    45                              <1>         ; 符号出力判定
    46                              <1>         ;---------------------------------------
    47 00000D38 F7C302000000        <1>         test ebx, 0b0010
    48                              <1> .20Q:
    49 00000D3E 7410                <1>         je .20E
    50 00000D40 83F800              <1>         cmp eax, 0
    51                              <1> .22Q:
    52 00000D43 7D07                <1>         jge .22F
    53 00000D45 F7D8                <1>         neg eax
    54 00000D47 C6062D              <1>         mov [esi], byte '-'
    55 00000D4A EB03                <1>         jmp .22E
    56                              <1> .22F:
    57 00000D4C C6062B              <1>         mov [esi], byte '+'
    58                              <1> .22E:
    59 00000D4F 49                  <1>         dec ecx
    60                              <1> .20E:
    61                              <1> 
    62                              <1>         ;---------------------------------------
    63                              <1>         ; ASCII 変換
    64                              <1>         ;---------------------------------------
    65 00000D50 8B5D14              <1>         mov ebx, [ebp + 20]
    66                              <1> .30L:
    67 00000D53 BA00000000          <1>         mov edx, 0
    68 00000D58 F7F3                <1>         div ebx
    69                              <1> 
    70 00000D5A 89D6                <1>         mov esi, edx
    71 00000D5C 8A96[870D0000]      <1>         mov dl, byte [.ascii + esi]
    72                              <1> 
    73 00000D62 8817                <1>         mov [edi], dl
    74 00000D64 4F                  <1>         dec edi
    75                              <1> 
    76 00000D65 83F800              <1>         cmp eax, 0
    77 00000D68 E0E9                <1>         loopnz .30L
    78                              <1> .30E:
    79                              <1> 
    80                              <1>         ;---------------------------------------
    81                              <1>         ; 空欄を埋める
    82                              <1>         ;---------------------------------------
    83 00000D6A 83F900              <1>         cmp ecx, 0
    84                              <1> .40Q:
    85 00000D6D 740E                <1>         je .40E
    86 00000D6F B020                <1>         mov al, ' '
    87 00000D71 66837D1804          <1>         cmp [ebp + 24], word 0b0100
    88                              <1> .42Q:
    89 00000D76 7502                <1>         jne .42E
    90 00000D78 B030                <1>         mov al, '0'
    91                              <1> .42E:
    92 00000D7A FD                  <1>         std
    93 00000D7B F3AA                <1>         rep stosb
    94                              <1> .40E:
    95                              <1> 
    96                              <1>         ;---------------------------------------
    97                              <1>         ; 【レジスタの復帰】
    98                              <1>         ;---------------------------------------
    99 00000D7D 5F                  <1>         pop edi
   100 00000D7E 5E                  <1>         pop esi
   101 00000D7F 5A                  <1>         pop edx
   102 00000D80 59                  <1>         pop ecx
   103 00000D81 5B                  <1>         pop ebx
   104 00000D82 58                  <1>         pop eax
   105                              <1> 
   106                              <1>         ;---------------------------------------
   107                              <1>         ; 【スタックフレームの破棄】
   108                              <1>         ;---------------------------------------
   109 00000D83 89EC                <1>         mov esp, ebp
   110 00000D85 5D                  <1>         pop ebp
   111                              <1> 
   112 00000D86 C3                  <1>         ret
   113                              <1> 
   114 00000D87 303132333435363738- <1> .ascii db "0123456789ABCDEF"
   114 00000D90 39414243444546      <1>
   154                                  %include "../modules/protect/rtc.s"
     1                              <1> rtc_get_time:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 00000D97 55                  <1>         push ebp
     6 00000D98 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;-----------------------------------------
     9                              <1>         ; 【レジスタの保存】
    10                              <1>         ;-----------------------------------------
    11 00000D9A 53                  <1>         push ebx
    12                              <1> 
    13                              <1>         ;-----------------------------------------
    14                              <1>         ; RTCの読み込み
    15                              <1>         ;-----------------------------------------
    16 00000D9B B00A                <1>         mov al, 0x0A
    17 00000D9D E670                <1>         out 0x70, al
    18 00000D9F E471                <1>         in al, 0x71
    19 00000DA1 A880                <1>         test al, 0x80
    20 00000DA3 7407                <1>         je .10F
    21 00000DA5 B801000000          <1>         mov eax, 1
    22 00000DAA EB27                <1>         jmp .10E
    23                              <1> .10F:
    24 00000DAC B004                <1>         mov al, 0x04
    25 00000DAE E670                <1>         out 0x70, al
    26 00000DB0 E471                <1>         in al, 0x71
    27                              <1> 
    28 00000DB2 C1E008              <1>         shl eax, 8
    29                              <1> 
    30 00000DB5 B002                <1>         mov al, 0x02
    31 00000DB7 E670                <1>         out 0x70, al
    32 00000DB9 E471                <1>         in al, 0x71
    33                              <1> 
    34 00000DBB C1E008              <1>         shl eax, 8
    35                              <1> 
    36 00000DBE B000                <1>         mov al, 0x00
    37 00000DC0 E670                <1>         out 0x70, al
    38 00000DC2 E471                <1>         in al, 0x71
    39                              <1> 
    40 00000DC4 25FFFFFF00          <1>         and eax, 0x00_FF_FF_FF
    41                              <1> 
    42 00000DC9 8B5D08              <1>         mov ebx, [ebp + 8]
    43 00000DCC 8903                <1>         mov [ebx], eax
    44                              <1> 
    45 00000DCE B800000000          <1>         mov eax, 0
    46                              <1> .10E:
    47                              <1> 
    48                              <1>         ;-----------------------------------------
    49                              <1>         ; 【レジスタの復帰】
    50                              <1>         ;-----------------------------------------
    51 00000DD3 5B                  <1>         pop ebx
    52                              <1> 
    53                              <1>         ;-----------------------------------------
    54                              <1>         ; 【スタックフレームの破棄】
    55                              <1>         ;-----------------------------------------
    56 00000DD4 89EC                <1>         mov esp, ebp
    57 00000DD6 5D                  <1>         pop ebp
    58                              <1> 
    59 00000DD7 C3                  <1>         ret
   155                                  %include "../modules/protect/draw_time.s"
     1                              <1> draw_time:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 00000DD8 55                  <1>         push ebp
     6 00000DD9 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;-----------------------------------------
     9                              <1>         ; 【レジスタの保存】
    10                              <1>         ;-----------------------------------------
    11 00000DDB 50                  <1>         push eax
    12 00000DDC 53                  <1>         push ebx
    13                              <1> 
    14                              <1>         ;-----------------------------------------
    15                              <1>         ; 時刻の表示
    16                              <1>         ;-----------------------------------------
    17 00000DDD 8B4514              <1>         mov eax, [ebp + 20]
    18                              <1> 
    19 00000DE0 0FB6D8              <1>         movzx ebx, al
    20 00000DE3 6A046A106A0268-     <1>         cdecl itoa, ebx, .sec, 2, 16, 0b0100
    20 00000DEA [4A0E0000]53E81AFF- <1>
    20 00000DF2 FFFF6683C414        <1>
    21                              <1> 
    22 00000DF8 88E3                <1>         mov bl, ah
    23 00000DFA 6A046A106A0268-     <1>         cdecl itoa, ebx, .min, 2, 16, 0b0100
    23 00000E01 [470E0000]53E803FF- <1>
    23 00000E09 FFFF6683C414        <1>
    24                              <1> 
    25 00000E0F C1E810              <1>         shr eax, 16
    26 00000E12 6A046A106A0268-     <1>         cdecl itoa, eax, .hour, 2, 16, 0b0100
    26 00000E19 [440E0000]50E8EBFE- <1>
    26 00000E21 FFFF6683C414        <1>
    27                              <1> 
    28 00000E27 68[440E0000]FF7510- <1>         cdecl draw_str, dword[ebp + 8], dword[ebp + 12], dword[ebp + 16], .hour
    28 00000E2F FF750CFF7508E8F3FB- <1>
    28 00000E38 FFFF6683C410        <1>
    29                              <1> 
    30                              <1>         ;-----------------------------------------
    31                              <1>         ; 【レジスタの復帰】
    32                              <1>         ;-----------------------------------------
    33 00000E3E 5B                  <1>         pop ebx
    34 00000E3F 58                  <1>         pop eax
    35                              <1> 
    36                              <1>         ;-----------------------------------------
    37                              <1>         ; 【スタックフレームの破棄】
    38                              <1>         ;-----------------------------------------
    39 00000E40 89EC                <1>         mov esp, ebp
    40 00000E42 5D                  <1>         pop ebp
    41                              <1> 
    42 00000E43 C3                  <1>         ret
    43                              <1> 
    44 00000E44 5A5A3A              <1> .hour:  db "ZZ:"
    45 00000E47 5A5A3A              <1> .min:   db "ZZ:"
    46 00000E4A 5A5A00              <1> .sec:   db "ZZ", 0
   156                                  %include "../modules/protect/interrupt.s"
     1                              <1> ;***********************************************************
     2                              <1> ;  割り込みベクタの初期化
     3                              <1> ;***********************************************************
     4 00000E4D 90<rept>            <1> ALIGN 4
     5 00000E50 FF07                <1> IDTR:   dw 8 * 256 - 1
     6 00000E52 00001000            <1>         dd VECT_BASE
     7                              <1> 
     8                              <1> ;***********************************************************
     9                              <1> ;  割り込みテーブルを初期化
    10                              <1> ;***********************************************************
    11                              <1> init_int:
    12                              <1>         ;-----------------------------------------
    13                              <1>         ; 【レジスタの保存】
    14                              <1>         ;-----------------------------------------
    15 00000E56 50                  <1>         push eax
    16 00000E57 53                  <1>         push ebx
    17 00000E58 51                  <1>         push ecx
    18 00000E59 57                  <1>         push edi
    19                              <1> 
    20                              <1>         ;-----------------------------------------
    21                              <1>         ; すべての割り込みにデフォルト処理を設定
    22                              <1>         ;-----------------------------------------
    23 00000E5A 8D05[870E0000]      <1>         lea eax, [int_default]
    24 00000E60 BB008E0800          <1>         mov ebx, 0x0008_8E00
    25 00000E65 6693                <1>         xchg ax, bx
    26                              <1> 
    27 00000E67 B900010000          <1>         mov ecx, 256
    28 00000E6C BF00001000          <1>         mov edi, VECT_BASE
    29                              <1> 
    30                              <1> .10L:
    31 00000E71 891F                <1>         mov [edi + 0], ebx
    32 00000E73 894704              <1>         mov [edi + 4], eax
    33 00000E76 83C708              <1>         add edi, 8
    34 00000E79 E2F6                <1>         loop .10L
    35                              <1> 
    36                              <1>         ;-----------------------------------------
    37                              <1>         ; 割り込みディスクリプタの設定
    38                              <1>         ;-----------------------------------------
    39 00000E7B 0F011D[500E0000]    <1>         lidt [IDTR]
    40                              <1> 
    41                              <1>         ;-----------------------------------------
    42                              <1>         ; 【レジスタの復帰】
    43                              <1>         ;-----------------------------------------
    44 00000E82 5F                  <1>         pop edi
    45 00000E83 59                  <1>         pop ecx
    46 00000E84 5B                  <1>         pop ebx
    47 00000E85 58                  <1>         pop eax
    48                              <1> 
    49 00000E86 C3                  <1>         ret
    50                              <1> 
    51                              <1> int_default:
    52 00000E87 9C                  <1>         pushf                                           ; // EFLAGS(IF == 0)
    53 00000E88 0E                  <1>         push cs
    54 00000E89 68[A50E0000]        <1>         push int_stop
    55                              <1> 
    56 00000E8E B8[940E0000]        <1>         mov eax, .s0
    57 00000E93 CF                  <1>         iret
    58                              <1> 
    59 00000E94 203C2020202053544F- <1> .s0:    db " <    STOP    > ", 0
    59 00000E9D 50202020203E2000    <1>
    60                              <1> 
    61                              <1> int_stop:
    62 00000EA5 FB                  <1>         sti
    63                              <1>         
    64                              <1>         ;-----------------------------------------
    65                              <1>         ; EAXで示される文字列を表示
    66                              <1>         ;-----------------------------------------
    67 00000EA6 50680F0600006A0F6A- <1>         cdecl draw_str, 25, 15, 0x060F, eax
    67 00000EAF 19E878FBFFFF6683C4- <1>
    67 00000EB8 10                  <1>
    68                              <1> 
    69                              <1>         ;-----------------------------------------
    70                              <1>         ; スタックのデータを文字列に変換
    71                              <1>         ;-----------------------------------------
    72 00000EB9 8B0424              <1>         mov eax, [esp + 0]
    73 00000EBC 6A046A106A0868-     <1>         cdecl itoa, eax, .p1, 8, 16, 0b0100
    73 00000EC3 [810F0000]50E841FE- <1>
    73 00000ECB FFFF6683C414        <1>
    74                              <1> 
    75 00000ED1 8B442404            <1>         mov eax, [esp + 4]
    76 00000ED5 6A046A106A0868-     <1>         cdecl itoa, eax, .p2, 8, 16, 0b0100
    76 00000EDC [920F0000]50E828FE- <1>
    76 00000EE4 FFFF6683C414        <1>
    77                              <1> 
    78 00000EEA 8B442408            <1>         mov eax, [esp + 8]
    79 00000EEE 6A046A106A0868-     <1>         cdecl itoa, eax, .p3, 8, 16, 0b0100
    79 00000EF5 [A30F0000]50E80FFE- <1>
    79 00000EFD FFFF6683C414        <1>
    80                              <1> 
    81 00000F03 8B44240C            <1>         mov eax, [esp +12]
    82 00000F07 6A046A106A0868-     <1>         cdecl itoa, eax, .p4, 8, 16, 0b0100
    82 00000F0E [B40F0000]50E8F6FD- <1>
    82 00000F16 FFFF6683C414        <1>
    83                              <1> 
    84                              <1>         ;-----------------------------------------
    85                              <1>         ; 文字列の表示
    86                              <1>         ;-----------------------------------------
    87 00000F1C 68[7A0F0000]68040F- <1>         cdecl draw_str, 25, 16, 0x0F04, .s1
    87 00000F24 00006A106A19E8FEFA- <1>
    87 00000F2D FFFF6683C410        <1>
    88 00000F33 68[8B0F0000]68040F- <1>         cdecl draw_str, 25, 17, 0x0F04, .s2
    88 00000F3B 00006A116A19E8E7FA- <1>
    88 00000F44 FFFF6683C410        <1>
    89 00000F4A 68[9C0F0000]68040F- <1>         cdecl draw_str, 25, 18, 0x0F04, .s3
    89 00000F52 00006A126A19E8D0FA- <1>
    89 00000F5B FFFF6683C410        <1>
    90 00000F61 68[AD0F0000]68040F- <1>         cdecl draw_str, 25, 19, 0x0F04, .s4
    90 00000F69 00006A136A19E8B9FA- <1>
    90 00000F72 FFFF6683C410        <1>
    91                              <1> 
    92                              <1>         ;-----------------------------------------
    93                              <1>         ; 無限ループ
    94                              <1>         ;-----------------------------------------
    95 00000F78 EBFE                <1>         jmp $
    96                              <1> 
    97 00000F7A 4553502B20303A      <1> .s1:    db "ESP+ 0:"
    98 00000F81 5F5F5F5F5F5F5F5F20- <1> .p1:    db "________ ", 0
    98 00000F8A 00                  <1>
    99 00000F8B 2020202B20343A      <1> .s2:    db "   + 4:"
   100 00000F92 5F5F5F5F5F5F5F5F20- <1> .p2:    db "________ ", 0
   100 00000F9B 00                  <1>
   101 00000F9C 2020202B20383A      <1> .s3:    db "   + 8:"
   102 00000FA3 5F5F5F5F5F5F5F5F20- <1> .p3:    db "________ ", 0
   102 00000FAC 00                  <1>
   103 00000FAD 2020202B31323A      <1> .s4:    db "   +12:"
   104 00000FB4 5F5F5F5F5F5F5F5F20- <1> .p4:    db "________ ", 0
   104 00000FBD 00                  <1>
   105                              <1> 
   106                              <1> int_zero_div:
   107 00000FBE 9C                  <1>         pushf
   108 00000FBF 0E                  <1>         push cs
   109 00000FC0 68[A50E0000]        <1>         push int_stop
   110                              <1> 
   111 00000FC5 B8[CB0F0000]        <1>         mov eax, .s0
   112 00000FCA CF                  <1>         iret
   113                              <1> 
   114 00000FCB 203C20205A45524F20- <1> .s0:    db " <  ZERO DIV  > ", 0
   114 00000FD4 44495620203E2000    <1>
   157                                  %include "../modules/protect/pic.s"
     1                              <1> init_pic:
     2                              <1>         ;------------------------------
     3                              <1>         ; レジスタの保存
     4                              <1>         ;------------------------------
     5 00000FDC 50                  <1>         push eax
     6                              <1> 
     7                              <1>         ;------------------------------
     8                              <1>         ; マスタの設定
     9                              <1>         ;------------------------------
    10                              <1>         outp 0x20, 0x11                     ; // MASTER.ICW1 = 0x11;
    10 00000FDD B011                <2>  mov al, %2
    10 00000FDF E620                <2>  out %1, al
    11                              <1>         outp 0x21, 0x20                     ; // MASTER.ICW2 = 0x20;
    11 00000FE1 B020                <2>  mov al, %2
    11 00000FE3 E621                <2>  out %1, al
    12                              <1>         outp 0x21, 0x04                     ; // MASTER.ICW3 = 0x04;
    12 00000FE5 B004                <2>  mov al, %2
    12 00000FE7 E621                <2>  out %1, al
    13                              <1>         outp 0x21, 0x05                     ; // MASTER.ICW4 = 0x05;
    13 00000FE9 B005                <2>  mov al, %2
    13 00000FEB E621                <2>  out %1, al
    14                              <1>         outp 0x21, 0xFF                     ; // マスタ割り込みマスク
    14 00000FED B0FF                <2>  mov al, %2
    14 00000FEF E621                <2>  out %1, al
    15                              <1> 
    16                              <1>         ;------------------------------
    17                              <1>         ; スレーブの設定
    18                              <1>         ;------------------------------
    19                              <1>         outp 0xA0, 0x11                     ; // SLAVE.ICW1 = 0x11;
    19 00000FF1 B011                <2>  mov al, %2
    19 00000FF3 E6A0                <2>  out %1, al
    20                              <1>         outp 0xA1, 0x28                     ; // SLAVE.ICW1 = 0x28;
    20 00000FF5 B028                <2>  mov al, %2
    20 00000FF7 E6A1                <2>  out %1, al
    21                              <1>         outp 0xA1, 0x02                     ; // SLAVE.ICW1 = 0x02;
    21 00000FF9 B002                <2>  mov al, %2
    21 00000FFB E6A1                <2>  out %1, al
    22                              <1>         outp 0xA1, 0x01                     ; // SLAVE.ICW1 = 0x01;
    22 00000FFD B001                <2>  mov al, %2
    22 00000FFF E6A1                <2>  out %1, al
    23                              <1>         outp 0xA1, 0xFF                     ; // スレーブ割り込みマスク
    23 00001001 B0FF                <2>  mov al, %2
    23 00001003 E6A1                <2>  out %1, al
    24                              <1> 
    25                              <1>         ;------------------------------
    26                              <1>         ; レジスタの復帰
    27                              <1>         ;------------------------------
    28 00001005 58                  <1>         pop eax
    29                              <1> 
    30 00001006 C3                  <1>         ret
   158                                  %include "../modules/protect/int_rtc.s"
     1                              <1> int_rtc:
     2                              <1>         ;-----------------------------
     3                              <1>         ; レジスタの保存
     4                              <1>         ;-----------------------------
     5 00001007 60                  <1>         pusha
     6 00001008 1E                  <1>         push ds
     7 00001009 06                  <1>         push es
     8                              <1> 
     9                              <1>         ;-----------------------------
    10                              <1>         ; データ用セグメントセレクタの設定
    11                              <1>         ;-----------------------------
    12 0000100A 66B81000            <1>         mov ax, 0x0010
    13 0000100E 8ED8                <1>         mov ds, ax
    14 00001010 8EC0                <1>         mov es, ax
    15                              <1> 
    16                              <1>         ;-----------------------------
    17                              <1>         ; RTCから時刻を取得
    18                              <1>         ;-----------------------------
    19 00001012 68[20020000]E87BFD- <1>         cdecl rtc_get_time, RTC_TIME        ; EAX = get_time(&RTC_TIME);
    19 0000101A FFFF6683C404        <1>
    20                              <1> 
    21                              <1>         ;-----------------------------
    22                              <1>         ; RTCの割り込み要因を取得
    23                              <1>         ;-----------------------------
    24                              <1>         outp 0x70, 0x0C                     ; outp(0x70, 0x0C); // レジスタCを選択
    24 00001020 B00C                <2>  mov al, %2
    24 00001022 E670                <2>  out %1, al
    25 00001024 E471                <1>         in al, 0x71                         ; AL = port(0x71);
    26                              <1> 
    27                              <1>         ;-----------------------------
    28                              <1>         ; 割り込みフラグをクリア(EOI)
    29                              <1>         ;-----------------------------
    30 00001026 B020                <1>         mov al, 0x20                        ; AL = EOIコマンド;
    31 00001028 E6A0                <1>         out 0xA0, al                        ; outp(0xA0, AL); // スレーブPIC
    32 0000102A E620                <1>         out 0x20, al                        ; outp(0x20, AL); // マスタPIC
    33                              <1> 
    34                              <1>         ;-----------------------------
    35                              <1>         ; レジスタの復帰
    36                              <1>         ;-----------------------------
    37 0000102C 07                  <1>         pop es
    38 0000102D 1F                  <1>         pop ds
    39 0000102E 61                  <1>         popa
    40                              <1> 
    41 0000102F CF                  <1>         iret                                ; 割り込み処理の終了
    42                              <1> 
    43                              <1> rtc_int_en:
    44                              <1>         ;-----------------------------
    45                              <1>         ; スタックフレームの構築
    46                              <1>         ;-----------------------------
    47 00001030 55                  <1>         push ebp
    48 00001031 89E5                <1>         mov ebp, esp
    49                              <1> 
    50                              <1>         ;-----------------------------
    51                              <1>         ; レジスタの保存
    52                              <1>         ;-----------------------------
    53 00001033 50                  <1>         push eax
    54                              <1> 
    55                              <1>         ;-----------------------------
    56                              <1>         ; 割り込み許可設定
    57                              <1>         ;-----------------------------
    58                              <1>         outp 0x70, 0x0B                     ; outp(0x70, AL); // レジスタBを選択
    58 00001034 B00B                <2>  mov al, %2
    58 00001036 E670                <2>  out %1, al
    59                              <1> 
    60 00001038 E471                <1>         in al, 0x71                         ; AL = port(0x71); // レジスタBの
    61 0000103A 0A4508              <1>         or al, [ebp + 8]                    ; AL |= ビット; // 指定されたビットをセット
    62                              <1> 
    63 0000103D E671                <1>         out 0x71, al                        ; outp(0x71, AL); // レジスタBに書き込み
    64                              <1> 
    65                              <1>         ;-----------------------------
    66                              <1>         ; レジスタの復帰
    67                              <1>         ;-----------------------------
    68 0000103F 58                  <1>         pop eax
    69                              <1> 
    70                              <1>         ;-----------------------------
    71                              <1>         ; スタックフレームの破棄
    72                              <1>         ;-----------------------------
    73 00001040 89EC                <1>         mov esp, ebp
    74 00001042 5D                  <1>         pop ebp
    75                              <1> 
    76 00001043 C3                  <1>         ret
   159                                  %include "../modules/protect/int_keyboard.s"
     1                              <1> int_keyboard:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【レジスタの保存】
     4                              <1>         ;-----------------------------------------
     5 00001044 60                  <1>         pusha
     6 00001045 1E                  <1>         push ds
     7 00001046 06                  <1>         push es
     8                              <1> 
     9                              <1>         ;-----------------------------------------
    10                              <1>         ; データ用セグメントの設定
    11                              <1>         ;-----------------------------------------
    12 00001047 66B81000            <1>         mov ax, 0x0010
    13 0000104B 8ED8                <1>         mov ds, ax
    14 0000104D 8EC0                <1>         mov es, ax
    15                              <1> 
    16                              <1>         ;-----------------------------------------
    17                              <1>         ; KBCのバッファ読み取り
    18                              <1>         ;-----------------------------------------
    19 0000104F E460                <1>         in al, 0x60
    20                              <1> 
    21                              <1>         ;-----------------------------------------
    22                              <1>         ; キーコードの保存
    23                              <1>         ;-----------------------------------------
    24 00001051 5068[68100000]E854- <1>         cdecl ring_wr, _KEY_BUFF, eax
    24 00001059 0000006683C408      <1>
    25                              <1> 
    26                              <1>         ;-----------------------------------------
    27                              <1>         ; 割り込み終了コマンド送信
    28                              <1>         ;-----------------------------------------
    29                              <1>         outp 0x20, 0x20
    29 00001060 B020                <2>  mov al, %2
    29 00001062 E620                <2>  out %1, al
    30                              <1> 
    31                              <1>         ;-----------------------------------------
    32                              <1>         ; 【レジスタの復帰】
    33                              <1>         ;-----------------------------------------
    34 00001064 07                  <1>         pop es
    35 00001065 1F                  <1>         pop ds
    36 00001066 61                  <1>         popa
    37                              <1> 
    38 00001067 CF                  <1>         iret
    39                              <1> 
    40                              <1> ALIGN 4, db 0
    41 00001068 00<rept>            <1> _KEY_BUFF: times ring_buff_size db 0
   160                                  %include "../modules/protect/ring_buff.s"
     1                              <1> ring_rd:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 00001080 55                  <1>         push ebp
     6 00001081 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;-----------------------------------------
     9                              <1>         ; 【レジスタの保存】
    10                              <1>         ;-----------------------------------------
    11 00001083 53                  <1>         push ebx
    12 00001084 56                  <1>         push esi
    13 00001085 57                  <1>         push edi
    14                              <1> 
    15                              <1>         ;-----------------------------------------
    16                              <1>         ; 引数を取得
    17                              <1>         ;-----------------------------------------
    18 00001086 8B7508              <1>         mov esi, [ebp + 8]
    19 00001089 8B7D0C              <1>         mov edi, [ebp + 12]
    20                              <1> 
    21                              <1>         ;-----------------------------------------
    22                              <1>         ; 読み込み位置を確認
    23                              <1>         ;-----------------------------------------
    24 0000108C B800000000          <1>         mov eax, 0
    25 00001091 8B1E                <1>         mov ebx, [esi + ring_buff.rp]
    26 00001093 3B5E04              <1>         cmp ebx, [esi + ring_buff.wp]
    27 00001096 7411                <1>         je .10E
    28                              <1> 
    29 00001098 8A441E08            <1>         mov al, [esi + ring_buff.item + ebx]
    30                              <1> 
    31 0000109C 8807                <1>         mov [edi], al
    32                              <1> 
    33 0000109E 43                  <1>         inc ebx
    34 0000109F 83E30F              <1>         and ebx, RING_INDEX_MASK
    35 000010A2 891E                <1>         mov [esi + ring_buff.rp], ebx
    36                              <1> 
    37 000010A4 B801000000          <1>         mov eax, 1
    38                              <1> .10E:
    39                              <1> 
    40                              <1>         ;-----------------------------------------
    41                              <1>         ; 【レジスタの復帰】
    42                              <1>         ;-----------------------------------------
    43 000010A9 5F                  <1>         pop edi
    44 000010AA 5E                  <1>         pop esi
    45 000010AB 5B                  <1>         pop ebx
    46                              <1> 
    47                              <1>         ;-----------------------------------------
    48                              <1>         ; 【スタックフレームの破棄】
    49                              <1>         ;-----------------------------------------
    50 000010AC 89EC                <1>         mov esp, ebp
    51 000010AE 5D                  <1>         pop ebp
    52                              <1> 
    53 000010AF C3                  <1>         ret
    54                              <1> 
    55                              <1> ring_wr:
    56                              <1>         ;-----------------------------------------
    57                              <1>         ; 【スタックフレームの構築】
    58                              <1>         ;-----------------------------------------
    59 000010B0 55                  <1>         push ebp
    60 000010B1 89E5                <1>         mov ebp, esp
    61                              <1> 
    62                              <1>         ;-----------------------------------------
    63                              <1>         ; 【レジスタの保存】
    64                              <1>         ;-----------------------------------------
    65 000010B3 53                  <1>         push ebx
    66 000010B4 51                  <1>         push ecx
    67 000010B5 56                  <1>         push esi
    68                              <1> 
    69                              <1>         ;-----------------------------------------
    70                              <1>         ; 引数を取得
    71                              <1>         ;-----------------------------------------
    72 000010B6 8B7508              <1>         mov esi, [ebp + 8]
    73                              <1> 
    74                              <1>         ;-----------------------------------------
    75                              <1>         ; 書き込み位置を確認
    76                              <1>         ;-----------------------------------------
    77 000010B9 B800000000          <1>         mov eax, 0
    78 000010BE 8B5E04              <1>         mov ebx, [esi + ring_buff.wp]
    79 000010C1 89D9                <1>         mov ecx, ebx
    80 000010C3 41                  <1>         inc ecx
    81 000010C4 83E10F              <1>         and ecx, RING_INDEX_MASK
    82                              <1> 
    83 000010C7 3B0E                <1>         cmp ecx, [esi + ring_buff.rp]
    84 000010C9 740F                <1>         je .10E
    85                              <1> 
    86 000010CB 8A450C              <1>         mov al, [ebp +12]
    87                              <1> 
    88 000010CE 88441E08            <1>         mov [esi + ring_buff.item + ebx], al
    89 000010D2 894E04              <1>         mov [esi + ring_buff.wp], ecx
    90 000010D5 B801000000          <1>         mov eax, 1
    91                              <1> .10E:
    92                              <1> 
    93                              <1>         ;-----------------------------------------
    94                              <1>         ; 【レジスタの復帰】
    95                              <1>         ;-----------------------------------------
    96 000010DA 5E                  <1>         pop esi
    97 000010DB 59                  <1>         pop ecx
    98 000010DC 5B                  <1>         pop ebx
    99                              <1> 
   100                              <1>         ;-----------------------------------------
   101                              <1>         ; 【スタックフレームの破棄】
   102                              <1>         ;-----------------------------------------
   103 000010DD 89EC                <1>         mov esp, ebp
   104 000010DF 5D                  <1>         pop ebp
   105                              <1> 
   106 000010E0 C3                  <1>         ret
   107                              <1> 
   108                              <1> draw_key:
   109                              <1>         ;-----------------------------------------
   110                              <1>         ; 【スタックフレームの構築】
   111                              <1>         ;-----------------------------------------
   112 000010E1 55                  <1>         push ebp
   113 000010E2 89E5                <1>         mov ebp, esp
   114                              <1> 
   115                              <1>         ;-----------------------------------------
   116                              <1>         ; 【レジスタの保存】
   117                              <1>         ;-----------------------------------------
   118 000010E4 60                  <1>         pusha
   119                              <1> 
   120                              <1>         ;-----------------------------------------
   121                              <1>         ; 引数を取得
   122                              <1>         ;-----------------------------------------
   123 000010E5 8B5508              <1>         mov edx, [ebp + 8]
   124 000010E8 8B7D0C              <1>         mov edi, [ebp + 12]
   125 000010EB 8B7510              <1>         mov esi, [ebp + 16]
   126                              <1> 
   127                              <1>         ;-----------------------------------------
   128                              <1>         ; リングバッファの情報を取得
   129                              <1>         ;-----------------------------------------
   130 000010EE 8B1E                <1>         mov ebx, [esi + ring_buff.rp]
   131 000010F0 8D7608              <1>         lea esi, [esi + ring_buff.item]
   132 000010F3 B910000000          <1>         mov ecx, RING_ITEM_SIZE
   133                              <1> 
   134                              <1>         ;-----------------------------------------
   135                              <1>         ; 表示
   136                              <1>         ;-----------------------------------------
   137                              <1> .10L:
   138 000010F8 4B                  <1>         dec ebx
   139 000010F9 83E30F              <1>         and ebx, RING_INDEX_MASK
   140 000010FC 8A041E              <1>         mov al, [esi + ebx]
   141                              <1> 
   142 000010FF 6A046A106A0268-     <1>         cdecl itoa, eax, .tmp, 2, 16, 0b0100
   142 00001106 [30110000]50E8FEFB- <1>
   142 0000110E FFFF6683C414        <1>
   143 00001114 68[30110000]6A0257- <1>         cdecl draw_str, edx, edi, 0x02, .tmp
   143 0000111C 52E80BF9FFFF6683C4- <1>
   143 00001125 10                  <1>
   144                              <1> 
   145 00001126 83C203              <1>         add edx, 3
   146                              <1> 
   147 00001129 E2CD                <1>         loop .10L
   148                              <1> .10E:
   149                              <1> 
   150                              <1>         ;-----------------------------------------
   151                              <1>         ; 【レジスタの復帰】
   152                              <1>         ;-----------------------------------------
   153 0000112B 61                  <1>         popa
   154                              <1> 
   155                              <1>         ;-----------------------------------------
   156                              <1>         ; 【スタックフレームの破棄】
   157                              <1>         ;-----------------------------------------
   158 0000112C 89EC                <1>         mov esp, ebp
   159 0000112E 5D                  <1>         pop ebp
   160                              <1> 
   161 0000112F C3                  <1>         ret
   162                              <1> 
   163 00001130 2D2D2000            <1> .tmp:   db "-- ", 0
   161                                  %include "../modules/protect/timer.s"
     1                              <1> int_en_timer0:
     2                              <1>         ;-------------------------
     3                              <1>         ; レジスタの保存
     4                              <1>         ;-------------------------
     5 00001134 50                  <1>         push eax
     6                              <1> 
     7                              <1>         ;-------------------------
     8                              <1>         ; タイマー
     9                              <1>         ;-------------------------
    10                              <1>         outp 0x43, 0b_00_11_010_0
    10 00001135 B034                <2>  mov al, %2
    10 00001137 E643                <2>  out %1, al
    11                              <1>         outp 0x40, 0x9C
    11 00001139 B09C                <2>  mov al, %2
    11 0000113B E640                <2>  out %1, al
    12                              <1>         outp 0x40, 0x2E
    12 0000113D B02E                <2>  mov al, %2
    12 0000113F E640                <2>  out %1, al
    13                              <1> 
    14                              <1>         ;-------------------------
    15                              <1>         ; レジスタの復帰
    16                              <1>         ;-------------------------
    17 00001141 58                  <1>         pop eax
    18                              <1> 
    19 00001142 C3                  <1>         ret
   162                                  %include "../modules/protect/draw_rotation_bar.s"
     1                              <1> draw_rotation_bar:
     2                              <1>         ;-----------------------------
     3                              <1>         ; レジスタの保存
     4                              <1>         ;-----------------------------
     5 00001143 50                  <1>         push eax
     6                              <1> 
     7                              <1>         ;-----------------------------
     8                              <1>         ; 周期動作
     9                              <1>         ;-----------------------------
    10 00001144 A1[70060000]        <1>         mov eax, [TIMER_COUNT]
    11 00001149 C1E804              <1>         shr eax, 4
    12 0000114C 3B05[74110000]      <1>         cmp eax, [.index]
    13 00001152 741E                <1>         je .10E
    14                              <1> 
    15 00001154 A3[74110000]        <1>         mov [.index], eax
    16 00001159 83E003              <1>         and eax, 0x03
    17                              <1> 
    18 0000115C 8A80[78110000]      <1>         mov al, [.table + eax]
    19 00001162 506A0F6A1D6A00E899- <1>         cdecl draw_char, 0, 29, 0x000F, eax
    19 0000116B F7FFFF6683C410      <1>
    20                              <1> .10E:
    21                              <1> 
    22                              <1>         ;-----------------------------
    23                              <1>         ; レジスタの復帰
    24                              <1>         ;-----------------------------
    25 00001172 58                  <1>         pop eax
    26                              <1> 
    27 00001173 C3                  <1>         ret
    28                              <1> 
    29                              <1> ALIGN 4, db 0
    30 00001174 00000000            <1> .index: dd 0
    31 00001178 7C2F2D5C            <1> .table: db "|/-\"
   163                                  %include "../modules/protect/call_gate.s"
     1                              <1> call_gate:
     2                              <1>         ;-------------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;-------------------------------------
     5                              <1>                                                     ; ---------|-----
     6                              <1>                                                     ; EBP + 12 | X
     7                              <1>                                                     ; EBP + 16 | Y
     8                              <1>                                                     ; EBP + 20 | 色
     9                              <1>                                                     ; EBP + 24 | 文字
    10                              <1>                                                     ;----------------
    11                              <1>                                                     ; EBP +  8 | CS  コードセグメント
    12 0000117C 55                  <1>         push ebp                                    ; EBP +  4 | EIP 戻り値
    13 0000117D 89E5                <1>         mov ebp, esp                                ; EBP +  0 | EBP 元の値
    14                              <1>                                                     ;----------------
    15                              <1>         ;-------------------------------------
    16                              <1>         ; レジスタの保存
    17                              <1>         ;-------------------------------------
    18 0000117F 60                  <1>         pusha
    19 00001180 1E                  <1>         push ds
    20 00001181 06                  <1>         push es
    21                              <1> 
    22                              <1>         ;-------------------------------------
    23                              <1>         ; データ用セグメントの設定
    24                              <1>         ;-------------------------------------
    25 00001182 66B81000            <1>         mov ax, 0x0010
    26 00001186 8ED8                <1>         mov ds, ax
    27 00001188 8EC0                <1>         mov es, ax
    28                              <1> 
    29                              <1>         ;-------------------------------------
    30                              <1>         ; 文字を表示
    31                              <1>         ;-------------------------------------
    32 0000118A 8B450C              <1>         mov eax, dword [ebp + 12]                   ; EAX = X
    33 0000118D 8B5D10              <1>         mov ebx, dword [ebp + 16]                   ; EBX = Y
    34 00001190 8B4D14              <1>         mov ecx, dword [ebp + 20]                   ; ECX = 色
    35 00001193 8B5518              <1>         mov edx, dword [ebp + 24]                   ; EDX = 文字
    36 00001196 52515350E88EF8FFFF- <1>         cdecl draw_str, eax, ebx, ecx, edx          ; draw_str()
    36 0000119F 6683C410            <1>
    37                              <1> 
    38                              <1>         ;-------------------------------------
    39                              <1>         ; レジスタの復帰
    40                              <1>         ;-------------------------------------
    41 000011A3 07                  <1>         pop es
    42 000011A4 1F                  <1>         pop ds
    43 000011A5 61                  <1>         popa
    44                              <1> 
    45                              <1>         ;-------------------------------------
    46                              <1>         ; スタックフレームの破棄
    47                              <1>         ;-------------------------------------
    48 000011A6 89EC                <1>         mov esp, ebp
    49 000011A8 5D                  <1>         pop ebp
    50                              <1> 
    51 000011A9 CA1000              <1>         retf 4 * 4
   164                                  %include "../modules/protect/trap_gate.s"
     1                              <1> trap_gate_81:
     2                              <1>         ;--------------------------------
     3                              <1>         ; 1文字出力
     4                              <1>         ;--------------------------------
     5 000011AC 50535251E852F7FFFF- <1>         cdecl draw_char, ecx, edx, ebx, eax     ; // 1文字出力
     5 000011B5 6683C410            <1>
     6                              <1> 
     7 000011B9 CF                  <1>         iret
     8                              <1> 
     9                              <1> trap_gate_82:
    10                              <1>         ;--------------------------------
    11                              <1>         ; 点を描画
    12                              <1>         ;--------------------------------
    13 000011BA 535251E822F9FFFF66- <1>         cdecl draw_pixel, ecx, edx, ebx         ; // 点の描画
    13 000011C3 83C40C              <1>
    14                              <1> 
    15 000011C6 CF                  <1>         iret
   165                                  %include "../modules/protect/test_and_set.s"
     1                              <1> test_and_set:
     2                              <1>         ;-------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;-------------------------------
     5                              <1>                                             ; EBP + 8 | ローカル変数のアドレス
     6                              <1>                                             ;---------|--------------------
     7 000011C7 55                  <1>         push ebp                            ; EBP + 4 | EIP
     8 000011C8 89E5                <1>         mov ebp, esp                        ; EBP + 0 | EBP
     9                              <1>                                             ;---------| EBP
    10                              <1>         ;-------------------------------
    11                              <1>         ; レジスタの保存
    12                              <1>         ;-------------------------------
    13 000011CA 50                  <1>         push eax
    14 000011CB 53                  <1>         push ebx
    15                              <1> 
    16                              <1>         ;-------------------------------
    17                              <1>         ; テストアンドセット
    18                              <1>         ;-------------------------------
    19 000011CC B800000000          <1>         mov eax, 0                          ; local = 0;
    20 000011D1 8B5D08              <1>         mov ebx, [ebp + 8]                  ; global = アドレス;
    21                              <1> 
    22                              <1> .10L:                                       ; for (;;)
    23                              <1>                                             ; {
    24 000011D4 F00FAB03            <1>         lock bts [ebx], eax                 ;   CF = TEST_AND_SET(IN_USE, 1);
    25 000011D8 7307                <1>         jnc .10E                            ;   if (0 == CF)
    26                              <1>                                             ;       break;
    27                              <1>                                             ;
    28                              <1> .12L:                                       ;   for (;;)
    29                              <1>                                             ;   {
    30 000011DA 0FA303              <1>         bt [ebx], eax                       ;       CF = TEST(IN_USE, 1);
    31 000011DD 72FB                <1>         jc .12L                             ;       if (0 == CF)
    32                              <1>                                             ;           break;
    33 000011DF EBF3                <1>         jmp .10L                            ;   }
    34                              <1> .10E:                                       ; }
    35                              <1> 
    36                              <1>         ;--------------------------------
    37                              <1>         ; レジスタの復帰
    38                              <1>         ;--------------------------------
    39 000011E1 5B                  <1>         pop ebx
    40 000011E2 58                  <1>         pop eax
    41                              <1> 
    42                              <1>         ;--------------------------------
    43                              <1>         ; スタックフレームの破棄
    44                              <1>         ;--------------------------------
    45 000011E3 89EC                <1>         mov esp, ebp
    46 000011E5 5D                  <1>         pop ebp
    47                              <1> 
    48 000011E6 C3                  <1>         ret
   166                                  %include "../modules/protect/int_nm.s"
     1                              <1> int_nm:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【レジスタの保存】
     4                              <1>         ;-----------------------------------------
     5 000011E7 60                  <1>         pusha
     6 000011E8 1E                  <1>         push ds
     7 000011E9 06                  <1>         push es
     8                              <1> 
     9                              <1>         ;-----------------------------------------
    10                              <1>         ; カーネル用セレクタを設定
    11                              <1>         ;-----------------------------------------
    12 000011EA 66B81000            <1>         mov ax, DS_KERNEL
    13 000011EE 8ED8                <1>         mov ds, ax
    14 000011F0 8EC0                <1>         mov es, ax
    15                              <1> 
    16                              <1>         ;-----------------------------------------
    17                              <1>         ; タスクスイッチフラグをクリア
    18                              <1>         ;-----------------------------------------
    19 000011F2 0F06                <1>         clts
    20                              <1> 
    21                              <1>         ;-----------------------------------------
    22                              <1>         ; 前回/今回FPUを使用するタスク
    23                              <1>         ;-----------------------------------------
    24 000011F4 8B3D[40120000]      <1>         mov edi, [.last_tss]
    25 000011FA 0F00CE              <1>         str esi
    26 000011FD 83E6F8              <1>         and esi, ~0x0007
    27                              <1> 
    28                              <1>         ;-----------------------------------------
    29                              <1>         ; FPUの初回利用をチェック
    30                              <1>         ;-----------------------------------------
    31 00001200 83FF00              <1>         cmp edi, 0
    32 00001203 7420                <1>         je .10F
    33                              <1> 
    34 00001205 39FE                <1>         cmp esi, edi
    35 00001207 741A                <1>         je .12E
    36                              <1> 
    37 00001209 FA                  <1>         cli
    38                              <1> 
    39                              <1>         ;-----------------------------------------
    40                              <1>         ; 前回のFPUコンテキストを保存
    41                              <1>         ;-----------------------------------------
    42 0000120A 89FB                <1>         mov ebx, edi
    43 0000120C E833000000          <1>         call get_tss_base
    44 00001211 E841000000          <1>         call save_fpu_context
    45                              <1> 
    46                              <1>         ;-----------------------------------------
    47                              <1>         ; 今回のFPUコンテキストを復帰
    48                              <1>         ;-----------------------------------------
    49 00001216 89F3                <1>         mov ebx, esi
    50 00001218 E827000000          <1>         call get_tss_base
    51 0000121D E843000000          <1>         call load_fpu_context
    52                              <1> 
    53 00001222 FB                  <1>         sti
    54                              <1> .12E:
    55 00001223 EB0E                <1>         jmp .10E
    56                              <1> .10F:
    57 00001225 FA                  <1>         cli
    58                              <1> 
    59                              <1>         ;-----------------------------------------
    60                              <1>         ; 今回のFPUコンテキストを復帰
    61                              <1>         ;-----------------------------------------
    62 00001226 89F3                <1>         mov ebx, esi
    63 00001228 E817000000          <1>         call get_tss_base
    64 0000122D E833000000          <1>         call load_fpu_context
    65                              <1> 
    66 00001232 FB                  <1>         sti
    67                              <1> .10E:
    68 00001233 8935[40120000]      <1>         mov [.last_tss], esi
    69                              <1> 
    70                              <1>         ;-----------------------------------------
    71                              <1>         ; 【レジスタの復帰】
    72                              <1>         ;-----------------------------------------
    73 00001239 07                  <1>         pop es
    74 0000123A 1F                  <1>         pop ds
    75 0000123B 61                  <1>         popa
    76                              <1> 
    77 0000123C CF                  <1>         iret
    78                              <1> 
    79 0000123D 00<rept>            <1> ALIGN 4, db 0
    80 00001240 00000000            <1> .last_tss: dd 0
    81                              <1> 
    82                              <1> get_tss_base:
    83 00001244 8B83[86050000]      <1>         mov eax, [GDT + ebx + 2]
    84 0000124A C1E008              <1>         shl eax, 8
    85 0000124D 8A83[8B050000]      <1>         mov al,  [GDT + ebx + 7]
    86 00001253 C1C808              <1>         ror eax, 8
    87                              <1> 
    88 00001256 C3                  <1>         ret
    89                              <1> 
    90                              <1> save_fpu_context:
    91 00001257 DD7068              <1>         fnsave [eax + 104]
    92 0000125A C780D4000000010000- <1>         mov [eax + 104 + 108], dword 1
    92 00001263 00                  <1>
    93                              <1> 
    94 00001264 C3                  <1>         ret
    95                              <1> 
    96                              <1> load_fpu_context:
    97 00001265 83B8D400000000      <1>         cmp [eax + 104 + 108], dword 0
    98 0000126C 7504                <1>         jne .10F
    99 0000126E DBE3                <1>         fninit
   100 00001270 EB03                <1>         jmp .10E
   101                              <1> .10F:
   102 00001272 DD6068              <1>         frstor [eax + 104]
   103                              <1> .10E:
   104 00001275 C3                  <1>         ret
   167                                  %include "../modules/protect/wait_tick.s"
     1                              <1> wait_tick:
     2                              <1>         ;------------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;------------------------------------
     5                              <1>                                                 ;-----------
     6                              <1>                                                 ; EBP + 8 | ウェイト
     7                              <1>                                                 ;-----------
     8 00001276 55                  <1>         push EBP                                ; EBP + 4 | EIP(戻り番地)
     9 00001277 89E5                <1>         mov ebp, esp                            ; EBP + 0 | EBP(元の値)
    10                              <1>                                                 ;---------|----------
    11                              <1> 
    12                              <1>         ;-----------------------------------
    13                              <1>         ; レジスタの保存
    14                              <1>         ;-----------------------------------
    15 00001279 50                  <1>         push eax
    16 0000127A 51                  <1>         push ecx
    17                              <1> 
    18                              <1>         ;-----------------------------------
    19                              <1>         ; ウェイト
    20                              <1>         ;-----------------------------------
    21 0000127B 8B4D08              <1>         mov ecx, [ebp + 8]                      ; ECX = ウェイト回数
    22 0000127E A1[70060000]        <1>         mov eax, [TIMER_COUNT]                  ; EAX = TIMER;
    23                              <1>                                                 ; do
    24                              <1>                                                 ; {
    25 00001283 3905[70060000]      <1> .10L:   cmp [TIMER_COUNT], eax                  ;   while(TIMER != EAX)
    26 00001289 74F8                <1>         je .10L
    27 0000128B 40                  <1>         inc eax                                 ;       EAX++;
    28 0000128C E2F5                <1>         loop .10L                               ; } while (--ECX);
    29                              <1> 
    30                              <1>         ;-----------------------------------
    31                              <1>         ; レジスタの復帰
    32                              <1>         ;-----------------------------------
    33 0000128E 59                  <1>         pop ecx
    34 0000128F 58                  <1>         pop eax
    35                              <1> 
    36                              <1>         ;-----------------------------------
    37                              <1>         ; スタックフレーム
    38                              <1>         ;-----------------------------------
    39 00001290 89EC                <1>         mov esp, ebp
    40 00001292 5D                  <1>         pop ebp
    41                              <1> 
    42 00001293 C3                  <1>         ret
   168                                  
   169                                  ;***********************************************************
   170                                  ;  パディング
   171                                  ;***********************************************************
   172 00001294 00<rept>                        times KERNEL_SIZE - ($ - $$) db 0
