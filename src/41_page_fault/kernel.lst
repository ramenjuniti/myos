     1                                  ;***********************************************************
     2                                  ;  マクロ
     3                                  ;***********************************************************
     4                                  %define USE_SYSTEM_CALL
     5                                  %define USE_TEST_AND_SET
     6                                  
     7                                  %include "../include/define.s"
     1                              <1> BOOT_SIZE           equ (1024 * 8)                      ; ブートコードサイズ
     2                              <1> KERNEL_SIZE         equ (1024 * 8)                      ; カーネルサイズ
     3                              <1> 
     4                              <1> BOOT_LOAD           equ 0x7C00                          ; ブートプログラムのロード位置
     5                              <1> BOOT_END            equ (BOOT_LOAD + BOOT_SIZE)
     6                              <1> 
     7                              <1> SECT_SIZE           equ (512)                           ; セクタサイズ
     8                              <1> 
     9                              <1> BOOT_SECT           equ (BOOT_SIZE / SECT_SIZE)         ; ブートプログラムのセクタ数
    10                              <1> KERNEL_SECT         equ (KERNEL_SIZE / SECT_SIZE)
    11                              <1> 
    12                              <1> E820_RECORD_SIZE    equ 20
    13                              <1> 
    14                              <1> KERNEL_LOAD         equ 0x0010_1000
    15                              <1> 
    16                              <1> VECT_BASE           equ 0x0010_0000
    17                              <1> 
    18                              <1> STACK_BASE          equ 0x0010_3000                     ; タスク用スタックエリア
    19                              <1> STACK_SIZE          equ 1024                            ; スタックサイズ
    20                              <1> 
    21                              <1> SP_TASK_0           equ STACK_BASE + (STACK_SIZE * 1)
    22                              <1> SP_TASK_1           equ STACK_BASE + (STACK_SIZE * 2)
    23                              <1> SP_TASK_2           equ STACK_BASE + (STACK_SIZE * 3)
    24                              <1> SP_TASK_3           equ STACK_BASE + (STACK_SIZE * 4)
    25                              <1> 
    26                              <1> CR3_BASE            equ 0x0010_5000                     ; ページ変換テーブル：タスク３用
     8                                  %include "../include/macro.s"
     1                              <1> %macro cdecl 1-*.nolist
     2                              <1> 
     3                              <1>     %rep %0 - 1
     4                              <1>         push %{-1:-1}
     5                              <1>         %rotate - 1
     6                              <1>     %endrep
     7                              <1>     %rotate - 1
     8                              <1> 
     9                              <1>         call %1
    10                              <1> 
    11                              <1>     %if 1 < %0
    12                              <1>         add sp, (__BITS__ >> 3) * (%0 - 1)
    13                              <1>     %endif
    14                              <1> 
    15                              <1> %endmacro
    16                              <1> 
    17                              <1> %macro set_vect 1-*.nolist
    18                              <1>         push eax
    19                              <1>         push edi
    20                              <1> 
    21                              <1>         mov edi, VECT_BASE + (%1 * 8)
    22                              <1>         mov eax, %2
    23                              <1> 
    24                              <1> 	%if 3 == %0
    25                              <1> 		mov [edi + 4], %3
    26                              <1> 	%endif
    27                              <1> 
    28                              <1>         mov [edi + 0], ax
    29                              <1>         shr eax, 16
    30                              <1>         mov [edi + 6], ax
    31                              <1> 
    32                              <1>         pop edi
    33                              <1>         pop eax
    34                              <1> %endmacro
    35                              <1> 
    36                              <1> %macro outp 2
    37                              <1>         mov al, %2
    38                              <1>         out %1, al
    39                              <1> %endmacro
    40                              <1> 
    41                              <1> %macro set_desc 2-*
    42                              <1>         push eax
    43                              <1>         push edi
    44                              <1> 
    45                              <1>         mov edi, %1             ; ディスクリプタアドレス
    46                              <1>         mov eax, %2             ; ベースアドレス
    47                              <1> 
    48                              <1>     %if 3 == %0
    49                              <1>         mov [edi + 0], %3       ; リミット
    50                              <1>     %endif
    51                              <1> 
    52                              <1>         mov [edi + 2], ax       ; ベース([15: 0])
    53                              <1>         shr eax, 16
    54                              <1>         mov [edi + 4], al       ; ベース([23:16])
    55                              <1>         mov [edi + 7], ah       ; ベース([31:24])
    56                              <1> 
    57                              <1>         pop edi
    58                              <1>         pop eax
    59                              <1> %endmacro
    60                              <1> 
    61                              <1> %macro set_gate 2-*
    62                              <1>         push eax
    63                              <1>         push edi
    64                              <1> 
    65                              <1>         mov edi, %1             ; ディスクリプタアドレス
    66                              <1>         mov eax, %2             ; ベースアドレス
    67                              <1> 
    68                              <1>         mov [edi + 0], ax       ; ベース([15: 0])
    69                              <1>         shr eax, 16
    70                              <1>         mov [edi + 6], ax       ; ベース([31:16])
    71                              <1> 
    72                              <1>         pop edi
    73                              <1>         pop eax
    74                              <1> %endmacro
    75                              <1> 
    76                              <1> struc drive
    77 00000000 <res 00000002>      <1>     .no resw 1      ; ドライブ番号
    78 00000002 <res 00000002>      <1>     .cyln resw 1    ; シリンダ
    79 00000004 <res 00000002>      <1>     .head resw 1    ; ヘッド
    80 00000006 <res 00000002>      <1>     .sect resw 1    ; セクタ
    81                              <1> endstruc
    82                              <1> 
    83                              <1> %define RING_ITEM_SIZE (1 << 4)
    84                              <1> %define RING_INDEX_MASK (RING_ITEM_SIZE - 1)
    85                              <1> 
    86                              <1> struc ring_buff
    87 00000000 <res 00000004>      <1>     .rp resd 1                  ; RP:読み込み位置
    88 00000004 <res 00000004>      <1>     .wp resd 1                  ; WP:書き込み位置　
    89 00000008 <res 00000010>      <1>     .item resb RING_ITEM_SIZE   ; バッファ
    90                              <1> endstruc
    91                              <1> 
    92                              <1> struc rose
    93 00000000 <res 00000004>      <1>     .x0 resd 1
    94 00000004 <res 00000004>      <1>     .y0 resd 1
    95 00000008 <res 00000004>      <1>     .x1 resd 1
    96 0000000C <res 00000004>      <1>     .y1 resd 1
    97                              <1> 
    98 00000010 <res 00000004>      <1>     .n resd 1
    99 00000014 <res 00000004>      <1>     .d resd 1
   100                              <1> 
   101 00000018 <res 00000004>      <1>     .color_x resd 1
   102 0000001C <res 00000004>      <1>     .color_y resd 1
   103 00000020 <res 00000004>      <1>     .color_z resd 1
   104 00000024 <res 00000004>      <1>     .color_s resd 1
   105 00000028 <res 00000004>      <1>     .color_f resd 1
   106 0000002C <res 00000004>      <1>     .color_b resd 1
   107                              <1> 
   108 00000030 <res 00000010>      <1>     .title resb 16
   109                              <1> endstruc
     9                                  
    10                                          ORG KERNEL_LOAD
    11                                  
    12                                  [BITS 32]
    13                                  ;***********************************************************
    14                                  ;  エントリポイント
    15                                  ;***********************************************************
    16                                  kernel:
    17                                          ;------------------------------------------
    18                                          ; フォントアドレスを取得
    19                                          ;------------------------------------------
    20 00000000 BE007E0000                      mov esi, BOOT_LOAD + SECT_SIZE
    21 00000005 0FB706                          movzx eax, word[esi + 0]
    22 00000008 0FB75E02                        movzx ebx, word[esi + 2]
    23 0000000C C1E004                          shl eax, 4
    24 0000000F 01D8                            add eax, ebx
    25 00000011 A3[50020000]                    mov [FONT_ADR], eax
    26                                  
    27                                          ;------------------------------------------
    28                                          ; TSSディスクリプタの設定
    29                                          ;------------------------------------------
    30                                          set_desc GDT.tss_0, TSS_0
    30 00000016 50                  <1>  push eax
    30 00000017 57                  <1>  push edi
    30                              <1> 
    30 00000018 BF[D8050000]        <1>  mov edi, %1
    30 0000001D B8[58020000]        <1>  mov eax, %2
    30                              <1> 
    30                              <1>  %if 3 == %0
    30                              <1>  mov [edi + 0], %3
    30                              <1>  %endif
    30                              <1> 
    30 00000022 66894702            <1>  mov [edi + 2], ax
    30 00000026 C1E810              <1>  shr eax, 16
    30 00000029 884704              <1>  mov [edi + 4], al
    30 0000002C 886707              <1>  mov [edi + 7], ah
    30                              <1> 
    30 0000002F 5F                  <1>  pop edi
    30 00000030 58                  <1>  pop eax
    31                                          set_desc GDT.tss_1, TSS_1
    31 00000031 50                  <1>  push eax
    31 00000032 57                  <1>  push edi
    31                              <1> 
    31 00000033 BF[E0050000]        <1>  mov edi, %1
    31 00000038 B8[30030000]        <1>  mov eax, %2
    31                              <1> 
    31                              <1>  %if 3 == %0
    31                              <1>  mov [edi + 0], %3
    31                              <1>  %endif
    31                              <1> 
    31 0000003D 66894702            <1>  mov [edi + 2], ax
    31 00000041 C1E810              <1>  shr eax, 16
    31 00000044 884704              <1>  mov [edi + 4], al
    31 00000047 886707              <1>  mov [edi + 7], ah
    31                              <1> 
    31 0000004A 5F                  <1>  pop edi
    31 0000004B 58                  <1>  pop eax
    32                                          set_desc GDT.tss_2, TSS_2
    32 0000004C 50                  <1>  push eax
    32 0000004D 57                  <1>  push edi
    32                              <1> 
    32 0000004E BF[E8050000]        <1>  mov edi, %1
    32 00000053 B8[08040000]        <1>  mov eax, %2
    32                              <1> 
    32                              <1>  %if 3 == %0
    32                              <1>  mov [edi + 0], %3
    32                              <1>  %endif
    32                              <1> 
    32 00000058 66894702            <1>  mov [edi + 2], ax
    32 0000005C C1E810              <1>  shr eax, 16
    32 0000005F 884704              <1>  mov [edi + 4], al
    32 00000062 886707              <1>  mov [edi + 7], ah
    32                              <1> 
    32 00000065 5F                  <1>  pop edi
    32 00000066 58                  <1>  pop eax
    33                                          set_desc GDT.tss_3, TSS_3
    33 00000067 50                  <1>  push eax
    33 00000068 57                  <1>  push edi
    33                              <1> 
    33 00000069 BF[F0050000]        <1>  mov edi, %1
    33 0000006E B8[E0040000]        <1>  mov eax, %2
    33                              <1> 
    33                              <1>  %if 3 == %0
    33                              <1>  mov [edi + 0], %3
    33                              <1>  %endif
    33                              <1> 
    33 00000073 66894702            <1>  mov [edi + 2], ax
    33 00000077 C1E810              <1>  shr eax, 16
    33 0000007A 884704              <1>  mov [edi + 4], al
    33 0000007D 886707              <1>  mov [edi + 7], ah
    33                              <1> 
    33 00000080 5F                  <1>  pop edi
    33 00000081 58                  <1>  pop eax
    34                                  
    35                                          ;------------------------------------------
    36                                          ; コールゲートの設定
    37                                          ;------------------------------------------
    38                                          set_gate GDT.call_gate, call_gate
    38 00000082 50                  <1>  push eax
    38 00000083 57                  <1>  push edi
    38                              <1> 
    38 00000084 BF[F8050000]        <1>  mov edi, %1
    38 00000089 B8[1C130000]        <1>  mov eax, %2
    38                              <1> 
    38 0000008E 668907              <1>  mov [edi + 0], ax
    38 00000091 C1E810              <1>  shr eax, 16
    38 00000094 66894706            <1>  mov [edi + 6], ax
    38                              <1> 
    38 00000098 5F                  <1>  pop edi
    38 00000099 58                  <1>  pop eax
    39                                  
    40                                          ;------------------------------------------
    41                                          ; LDTの設定
    42                                          ;------------------------------------------
    43                                          set_desc GDT.ldt, LDT, word LDT_LIMIT
    43 0000009A 50                  <1>  push eax
    43 0000009B 57                  <1>  push edi
    43                              <1> 
    43 0000009C BF[D0050000]        <1>  mov edi, %1
    43 000000A1 B8[06060000]        <1>  mov eax, %2
    43                              <1> 
    43                              <1>  %if 3 == %0
    43 000000A6 66C7074700          <1>  mov [edi + 0], %3
    43                              <1>  %endif
    43                              <1> 
    43 000000AB 66894702            <1>  mov [edi + 2], ax
    43 000000AF C1E810              <1>  shr eax, 16
    43 000000B2 884704              <1>  mov [edi + 4], al
    43 000000B5 886707              <1>  mov [edi + 7], ah
    43                              <1> 
    43 000000B8 5F                  <1>  pop edi
    43 000000B9 58                  <1>  pop eax
    44                                  
    45                                          ;------------------------------------------
    46                                          ; GDTをロード(再設定)
    47                                          ;------------------------------------------
    48 000000BA 0F0115[00060000]                lgdt [GDTR]
    49                                  
    50                                          ;------------------------------------------
    51                                          ; スタックの設定
    52                                          ;------------------------------------------
    53 000000C1 BC00341000                      mov esp, SP_TASK_0
    54                                  
    55                                          ;------------------------------------------
    56                                          ; タスクレジスタの初期化
    57                                          ;------------------------------------------
    58 000000C6 66B82000                        mov ax, SS_TASK_0
    59 000000CA 0F00D8                          ltr ax
    60                                  
    61                                          ;------------------------------------------
    62                                          ; 初期化
    63                                          ;------------------------------------------
    64 000000CD E8240F0000                      cdecl init_int
    65 000000D2 E8A5100000                      cdecl init_pic
    66 000000D7 E8AD050000                      cdecl init_page
    67                                  
    68 000000DC 5057BF00001000B8-               set_vect 0x00, int_zero_div
    68 000000E4 [5E110000]668907C1-
    68 000000EC E810668947065F58   
    69 000000F4 5057BF38001000B8-               set_vect 0x07, int_nm
    69 000000FC [87130000]668907C1-
    69 00000104 E810668947065F58   
    70 0000010C 5057BF70001000B8-               set_vect 0x0E, int_pf
    70 00000114 [00070000]668907C1-
    70 0000011C E810668947065F58   
    71 00000124 5057BF00011000B8-               set_vect 0x20, int_timer
    71 0000012C [A4060000]668907C1-
    71 00000134 E810668947065F58   
    72 0000013C 5057BF08011000B8-               set_vect 0x21, int_keyboard
    72 00000144 [E4110000]668907C1-
    72 0000014C E810668947065F58   
    73 00000154 5057BF40011000B8-               set_vect 0x28, int_rtc
    73 0000015C [A7110000]668907C1-
    73 00000164 E810668947065F58   
    74 0000016C 5057BF08041000B8-               set_vect 0x81, trap_gate_81, word 0xEF00
    74 00000174 [4C130000]66C74704-
    74 0000017C 00EF668907C1E81066-
    74 00000185 8947065F58         
    75 0000018A 5057BF10041000B8-               set_vect 0x82, trap_gate_82, word 0xEF00
    75 00000192 [5A130000]66C74704-
    75 0000019A 00EF668907C1E81066-
    75 000001A3 8947065F58         
    76                                  
    77                                          ;------------------------------------------
    78                                          ; デバイスの割り込み許可
    79                                          ;------------------------------------------
    80 000001A8 6A10E8211000006683-             cdecl rtc_int_en, 0x10
    80 000001B1 C404               
    81 000001B3 E81C110000                      cdecl int_en_timer0
    82                                  
    83                                          ;------------------------------------------
    84                                          ; IMR(割り込みマスクレジスタ)の設定
    85                                          ;------------------------------------------
    86                                          outp 0x21, 0b_1111_1000
    86 000001B8 B0F8                <1>  mov al, %2
    86 000001BA E621                <1>  out %1, al
    87                                          outp 0xA1, 0b_1111_1110
    87 000001BC B0FE                <1>  mov al, %2
    87 000001BE E6A1                <1>  out %1, al
    88                                  
    89                                          ;------------------------------------------
    90                                          ; ページングの有効化
    91                                          ;------------------------------------------
    92 000001C0 B800501000                      mov eax, CR3_BASE
    93 000001C5 0F22D8                          mov cr3, eax
    94                                  
    95 000001C8 0F20C0                          mov eax, cr0
    96 000001CB 0D00000080                      or eax, (1 << 31)
    97 000001D0 0F22C0                          mov cr0, eax
    98 000001D3 EB00                            jmp $ + 2
    99                                  
   100                                          ;------------------------------------------
   101                                          ; CPUの割り込み許可
   102                                          ;------------------------------------------
   103 000001D5 FB                              sti
   104                                  
   105                                          ;------------------------------------------
   106                                          ; フォントの一覧表示
   107                                          ;------------------------------------------
   108 000001D6 6A0D6A3FE8A9090000-             cdecl draw_font, 63, 13
   108 000001DF 6683C408           
   109 000001E3 6A046A3FE81F0A0000-             cdecl draw_color_bar, 63, 4
   109 000001EC 6683C408           
   110                                  
   111                                          ;------------------------------------------
   112                                          ; 文字列の表示
   113                                          ;------------------------------------------
   114 000001F0 68[38020000]680F01-             cdecl draw_str, 25, 14, 0x010F, .s0
   114 000001F8 00006A0E6A19E8CA09-
   114 00000201 00006683C410       
   115                                  
   116                                  .10L:
   117                                  
   118                                          ;------------------------------------------
   119                                          ; 回転する棒を表示
   120                                          ;------------------------------------------
   121 00000207 E8D7100000                      cdecl draw_rotation_bar
   122                                  
   123                                          ;------------------------------------------
   124                                          ; キーコードの取得
   125                                          ;------------------------------------------
   126 0000020C 68[4C020000]68-                 cdecl ring_rd, _KEY_BUFF, .int_key
   126 00000212 [08120000]E8051000-
   126 0000021A 006683C408         
   127 0000021F 83F800                          cmp eax, 0
   128 00000222 7412                            je .10E
   129                                  
   130                                          ;------------------------------------------
   131                                          ; キーコードの表示
   132                                          ;------------------------------------------
   133 00000224 68[08120000]6A1D6A-             cdecl draw_key, 2, 29, _KEY_BUFF
   133 0000022C 02E84F1000006683C4-
   133 00000235 0C                 
   134                                  .10E:
   135 00000236 EBCF                            jmp .10L
   136                                  
   137 00000238 2048656C6C6F2C206B-     .s0:    db " Hello, kernel! ", 0
   137 00000241 65726E656C212000   
   138                                  
   139 00000249 00<rept>                ALIGN 4, db 0
   140 0000024C 00000000                .int_key: dd 0
   141                                  
   142                                  ALIGN 4, db 0
   143 00000250 00000000                FONT_ADR: dd 0
   144 00000254 00000000                RTC_TIME: dd 0
   145                                  
   146                                  ;***********************************************************
   147                                  ;  タスク
   148                                  ;***********************************************************
   149                                  %include "descriptor.s"
     1                              <1> ;***********************************************************
     2                              <1> ;  TSS
     3                              <1> ;***********************************************************
     4                              <1> TSS_0:
     5 00000258 00000000            <1> .link:    dd 0
     6 0000025C 00321000            <1> .esp0:    dd SP_TASK_0 - 512
     7 00000260 10000000            <1> .ss0:     dd DS_KERNEL
     8 00000264 00000000            <1> .esp1:    dd 0
     9 00000268 00000000            <1> .ss1:     dd 0
    10 0000026C 00000000            <1> .esp2:    dd 0
    11 00000270 00000000            <1> .ss2:     dd 0
    12 00000274 00501000            <1> .cr3:     dd CR3_BASE
    13 00000278 00000000            <1> .eip:     dd 0
    14 0000027C 00000000            <1> .eflags:  dd 0
    15 00000280 00000000            <1> .eax:     dd 0
    16 00000284 00000000            <1> .ecx:     dd 0
    17 00000288 00000000            <1> .edx:     dd 0
    18 0000028C 00000000            <1> .ebx:     dd 0
    19 00000290 00000000            <1> .esp:     dd 0
    20 00000294 00000000            <1> .ebp:     dd 0
    21 00000298 00000000            <1> .esi:     dd 0
    22 0000029C 00000000            <1> .edi:     dd 0
    23 000002A0 00000000            <1> .es:      dd 0
    24 000002A4 00000000            <1> .cs:      dd 0
    25 000002A8 00000000            <1> .ss:      dd 0
    26 000002AC 00000000            <1> .ds:      dd 0
    27 000002B0 00000000            <1> .fs:      dd 0
    28 000002B4 00000000            <1> .gs:      dd 0
    29 000002B8 00000000            <1> .ldt:     dd 0
    30 000002BC 00000000            <1> .io:      dd 0
    31 000002C0 00<rept>            <1> .fp_save: times 108 + 4 db 0
    32                              <1> 
    33                              <1> TSS_1:
    34 00000330 00000000            <1> .link:    dd 0
    35 00000334 00361000            <1> .esp0:    dd SP_TASK_1 - 512
    36 00000338 10000000            <1> .ss0:     dd DS_KERNEL
    37 0000033C 00000000            <1> .esp1:    dd 0
    38 00000340 00000000            <1> .ss1:     dd 0
    39 00000344 00000000            <1> .esp2:    dd 0
    40 00000348 00000000            <1> .ss2:     dd 0
    41 0000034C 00501000            <1> .cr3:     dd CR3_BASE
    42 00000350 [66070000]          <1> .eip:     dd task_1
    43 00000354 02020000            <1> .eflags:  dd 0x0202
    44 00000358 00000000            <1> .eax:     dd 0
    45 0000035C 00000000            <1> .ecx:     dd 0
    46 00000360 00000000            <1> .edx:     dd 0
    47 00000364 00000000            <1> .ebx:     dd 0
    48 00000368 00381000            <1> .esp:     dd SP_TASK_1
    49 0000036C 00000000            <1> .ebp:     dd 0
    50 00000370 00000000            <1> .esi:     dd 0
    51 00000374 00000000            <1> .edi:     dd 0
    52 00000378 27000000            <1> .es:      dd DS_TASK_1
    53 0000037C 1F000000            <1> .cs:      dd CS_TASK_1
    54 00000380 27000000            <1> .ss:      dd DS_TASK_1
    55 00000384 27000000            <1> .ds:      dd DS_TASK_1
    56 00000388 27000000            <1> .fs:      dd DS_TASK_1
    57 0000038C 27000000            <1> .gs:      dd DS_TASK_1
    58 00000390 18000000            <1> .ldt:     dd SS_LDT
    59 00000394 00000000            <1> .io:      dd 0
    60 00000398 00<rept>            <1> .fp_save: times 108 + 4 db 0
    61                              <1> 
    62                              <1> TSS_2:
    63 00000408 00000000            <1> .link:    dd 0
    64 0000040C 003A1000            <1> .esp0:    dd SP_TASK_2 - 512
    65 00000410 10000000            <1> .ss0:     dd DS_KERNEL
    66 00000414 00000000            <1> .esp1:    dd 0
    67 00000418 00000000            <1> .ss1:	    dd 0
    68 0000041C 00000000            <1> .esp2:    dd 0
    69 00000420 00000000            <1> .ss2:     dd 0
    70 00000424 00501000            <1> .cr3:     dd CR3_BASE
    71 00000428 [9B070000]          <1> .eip:     dd task_2
    72 0000042C 02020000            <1> .eflags:  dd 0x0202
    73 00000430 00000000            <1> .eax:     dd 0
    74 00000434 00000000            <1> .ecx:     dd 0
    75 00000438 00000000            <1> .edx:     dd 0
    76 0000043C 00000000            <1> .ebx:			dd 0
    77 00000440 003C1000            <1> .esp:			dd SP_TASK_2
    78 00000444 00000000            <1> .ebp:			dd 0
    79 00000448 00000000            <1> .esi:			dd 0
    80 0000044C 00000000            <1> .edi:			dd 0
    81 00000450 37000000            <1> .es:			dd DS_TASK_2
    82 00000454 2F000000            <1> .cs:			dd CS_TASK_2
    83 00000458 37000000            <1> .ss:			dd DS_TASK_2
    84 0000045C 37000000            <1> .ds:			dd DS_TASK_2
    85 00000460 37000000            <1> .fs:			dd DS_TASK_2
    86 00000464 37000000            <1> .gs:			dd DS_TASK_2
    87 00000468 18000000            <1> .ldt:			dd SS_LDT
    88 0000046C 00000000            <1> .io:			dd 0
    89 00000470 00<rept>            <1> .fp_save: times 108 + 4 db 0
    90                              <1> 
    91                              <1> TSS_3:
    92 000004E0 00000000            <1> .link:    dd 0
    93 000004E4 003E1000            <1> .esp0:    dd SP_TASK_3 - 512
    94 000004E8 10000000            <1> .ss0:     dd DS_KERNEL
    95 000004EC 00000000            <1> .esp1:    dd 0
    96 000004F0 00000000            <1> .ss1:     dd 0
    97 000004F4 00000000            <1> .esp2:    dd 0
    98 000004F8 00000000            <1> .ss2:     dd 0
    99 000004FC 00501000            <1> .cr3:     dd CR3_BASE
   100 00000500 [6C080000]          <1> .eip:     dd task_3
   101 00000504 02020000            <1> .eflags:  dd 0x0202
   102 00000508 00000000            <1> .eax:     dd 0
   103 0000050C 00000000            <1> .ecx:     dd 0
   104 00000510 00000000            <1> .edx:     dd 0
   105 00000514 00000000            <1> .ebx:     dd 0
   106 00000518 00401000            <1> .esp:     dd SP_TASK_3
   107 0000051C 00000000            <1> .ebp:     dd 0
   108 00000520 00000000            <1> .esi:     dd 0
   109 00000524 00000000            <1> .edi:     dd 0
   110 00000528 47000000            <1> .es:      dd DS_TASK_3
   111 0000052C 3F000000            <1> .cs:      dd CS_TASK_3
   112 00000530 47000000            <1> .ss:      dd DS_TASK_3
   113 00000534 47000000            <1> .ds:      dd DS_TASK_3
   114 00000538 47000000            <1> .fs:      dd DS_TASK_3
   115 0000053C 47000000            <1> .gs:      dd DS_TASK_3
   116 00000540 18000000            <1> .ldt:     dd SS_LDT
   117 00000544 00000000            <1> .io:      dd 0
   118 00000548 00<rept>            <1> .fp_save: times 108 + 4 db 0
   119                              <1> 
   120                              <1> ;***********************************************************
   121                              <1> ;  グローバルディスクリプタテーブル
   122                              <1> ;***********************************************************
   123 000005B8 0000000000000000    <1> GDT:        dq 0x0000000000000000
   124 000005C0 FFFF0000009ACF00    <1> .cs_kernel: dq 0x00CF9A000000FFFF
   125 000005C8 FFFF00000092CF00    <1> .ds_kernel: dq 0x00CF92000000FFFF
   126 000005D0 0000000000820000    <1> .ldt        dq 0x0000820000000000
   127 000005D8 6700000000890000    <1> .tss_0:     dq 0x0000890000000067
   128 000005E0 6700000000890000    <1> .tss_1:     dq 0x0000890000000067
   129 000005E8 6700000000890000    <1> .tss_2:     dq 0x0000890000000067
   130 000005F0 6700000000890000    <1> .tss_3:     dq 0x0000890000000067
   131 000005F8 0000080004EC0000    <1> .call_gate: dq 0x0000EC0400080000
   132                              <1> .end:
   133                              <1> 
   134                              <1> CS_KERNEL   equ .cs_kernel - GDT
   135                              <1> DS_KERNEL   equ .ds_kernel - GDT
   136                              <1> SS_LDT      equ .ldt - GDT
   137                              <1> SS_TASK_0   equ .tss_0 - GDT
   138                              <1> SS_TASK_1   equ .tss_1 - GDT
   139                              <1> SS_TASK_2   equ .tss_2 - GDT
   140                              <1> SS_TASK_3   equ .tss_3 - GDT
   141                              <1> SS_GATE_0   equ .call_gate - GDT
   142                              <1> 
   143 00000600 4700                <1> GDTR:   dw GDT.end - GDT - 1
   144 00000602 [B8050000]          <1>         dd GDT
   145                              <1> 
   146                              <1> ;***********************************************************
   147                              <1> ;  ローカルディスクリプタテーブル
   148                              <1> ;***********************************************************
   149 00000606 0000000000000000    <1> LDT:        dq 0x0000000000000000
   150 0000060E FFFF0000009ACF00    <1> .cs_task_0: dq 0x00CF9A000000FFFF
   151 00000616 FFFF00000092CF00    <1> .ds_task_0: dq 0x00CF92000000FFFF
   152 0000061E FFFF000000FACF00    <1> .cs_task_1: dq 0x00CFFA000000FFFF
   153 00000626 FFFF000000F2CF00    <1> .ds_task_1: dq 0x00CFF2000000FFFF
   154 0000062E FFFF000000FACF00    <1> .cs_task_2: dq 0x00CFFA000000FFFF
   155 00000636 FFFF000000F2CF00    <1> .ds_task_2: dq 0x00CFF2000000FFFF
   156 0000063E FFFF000000FACF00    <1> .cs_task_3: dq 0x00CFFA000000FFFF
   157 00000646 FFFF000000F2CF00    <1> .ds_task_3: dq 0x00CFF2000000FFFF
   158                              <1> .end:
   159                              <1> 
   160                              <1> CS_TASK_0   equ (.cs_task_0 - LDT) | 4
   161                              <1> DS_TASK_0   equ (.ds_task_0 - LDT) | 4
   162                              <1> CS_TASK_1   equ (.cs_task_1 - LDT) | 4 | 3
   163                              <1> DS_TASK_1   equ (.ds_task_1 - LDT) | 4 | 3
   164                              <1> CS_TASK_2   equ	(.cs_task_2 - LDT) | 4 | 3
   165                              <1> DS_TASK_2   equ (.ds_task_2 - LDT) | 4 | 3
   166                              <1> CS_TASK_3   equ (.cs_task_3 - LDT) | 4 | 3
   167                              <1> DS_TASK_3   equ (.ds_task_3 - LDT) | 4 | 3
   168                              <1> 
   169                              <1> LDT_LIMIT   equ .end - LDT - 1
   150                                  %include "modules/paging.s"
     1                              <1> page_set_4m:
     2                              <1>         ;---------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;---------------------------------
     5 0000064E 55                  <1>         push ebp
     6 0000064F 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;---------------------------------
     9                              <1>         ; レジスタの保存
    10                              <1>         ;---------------------------------
    11 00000651 60                  <1>         pusha
    12                              <1> 
    13                              <1>         ;---------------------------------
    14                              <1>         ; ページディレクトリの作成(P=0)
    15                              <1>         ;---------------------------------
    16 00000652 FC                  <1>         cld                                 ; // DFクリア (+方向)
    17 00000653 8B7D08              <1>         mov edi, [ebp + 8]                  ; EDI = ページディレクトリの先頭;
    18 00000656 B800000000          <1>         mov eax, 0x00000000                 ; EAX = 0; // P = 0
    19 0000065B B900040000          <1>         mov ecx, 1024                       ; count = 1024;
    20 00000660 F3AB                <1>         rep stosd                           ; while (count--) *dst++ = 属性;
    21                              <1> 
    22                              <1>         ;---------------------------------
    23                              <1>         ; 先頭のエントリを設定
    24                              <1>         ;---------------------------------
    25 00000662 89F8                <1>         mov eax, edi                        ; EAX = EDI; // ページディレクトリの直後
    26 00000664 2500F0FFFF          <1>         and eax, ~0x0000_0FFF               ; EAX &= ~0FFF; // 物理アドレスの指定
    27 00000669 83C807              <1>         or eax, 7                           ; EAX |= 7; // RWの許可
    28 0000066C 898700F0FFFF        <1>         mov [edi - (1024 * 4)], eax         ; // 先頭のエントリを設定
    29                              <1> 
    30                              <1>         ;---------------------------------
    31                              <1>         ; ページテーブルの設置(リニア)
    32                              <1>         ;---------------------------------
    33 00000672 B807000000          <1>         mov eax, 0x00000007                 ; // 物理アドレスの指定とRWの許可
    34 00000677 B900040000          <1>         mov ecx, 1024                       ; count = 1024;
    35                              <1>                                             ; do
    36                              <1> .10L:                                       ; {
    37 0000067C AB                  <1>         stosd                               ;   *dst++ = 属性;
    38 0000067D 0500100000          <1>         add eax, 0x00001000                 ;   adr += 0x1000;
    39 00000682 E2F8                <1>         loop .10L                           ; } while(--count)
    40                              <1> 
    41                              <1>         ;---------------------------------
    42                              <1>         ; レジスタの復帰
    43                              <1>         ;---------------------------------
    44 00000684 61                  <1>         popa
    45                              <1> 
    46                              <1>         ;---------------------------------
    47                              <1>         ; スタックフレームの破棄
    48                              <1>         ;---------------------------------
    49 00000685 89EC                <1>         mov esp, ebp
    50 00000687 5D                  <1>         pop ebp
    51                              <1> 
    52 00000688 C3                  <1>         ret
    53                              <1> 
    54                              <1> init_page:
    55                              <1>         ;---------------------------------
    56                              <1>         ; レジスタの保存
    57                              <1>         ;---------------------------------
    58 00000689 60                  <1>         pusha
    59                              <1> 
    60                              <1>         ;---------------------------------
    61                              <1>         ; ページ変換テーブルの作成
    62                              <1>         ;---------------------------------
    63 0000068A 6800501000E8BAFFFF- <1>         cdecl page_set_4m, CR3_BASE         ; // ページ変換テーブルの作成：タスク3用
    63 00000693 FF6683C404          <1>
    64 00000698 C7051C641000000000- <1>         mov [0x00106000 + 0x107 * 4], dword 0;
    64 000006A1 00                  <1>
    65                              <1> 
    66                              <1>         ;---------------------------------
    67                              <1>         ; レジスタの復帰
    68                              <1>         ;---------------------------------
    69 000006A2 61                  <1>         popa
    70                              <1>         
    71 000006A3 C3                  <1>         ret
   151                                  %include "modules/int_timer.s"
     1                              <1> int_timer:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【レジスタの保存】
     4                              <1>         ;-----------------------------------------
     5 000006A4 60                  <1>         pushad
     6 000006A5 1E                  <1>         push ds
     7 000006A6 06                  <1>         push es
     8                              <1> 
     9                              <1>         ;-----------------------------------------
    10                              <1>         ; データ用セグメントの設定
    11                              <1>         ;-----------------------------------------
    12 000006A7 66B81000            <1>         mov ax, 0x0010
    13 000006AB 8ED8                <1>         mov ds, ax
    14 000006AD 8EC0                <1>         mov es, ax
    15                              <1> 
    16                              <1>         ;-----------------------------------------
    17                              <1>         ; TICK
    18                              <1>         ;-----------------------------------------
    19 000006AF FF05[F8060000]      <1>         inc dword [TIMER_COUNT]
    20                              <1> 
    21                              <1>         ;-----------------------------------------
    22                              <1>         ; 割り込みフラグをクリア(EOI)
    23                              <1>         ;-----------------------------------------
    24                              <1>         outp 0x20, 0x20
    24 000006B5 B020                <2>  mov al, %2
    24 000006B7 E620                <2>  out %1, al
    25                              <1> 
    26                              <1>         ;-----------------------------------------
    27                              <1>         ; タスクの切り替え
    28                              <1>         ;-----------------------------------------
    29 000006B9 660F00C8            <1>         str ax
    30 000006BD 6683F820            <1>         cmp ax, SS_TASK_0
    31 000006C1 7415                <1>         je .11L
    32 000006C3 6683F828            <1>         cmp ax, SS_TASK_1
    33 000006C7 7418                <1>         je .12L
    34 000006C9 6683F830            <1>         cmp ax, SS_TASK_2
    35 000006CD 741B                <1>         je .13L
    36                              <1> 
    37 000006CF EA000000002000      <1>         jmp SS_TASK_0:0
    38 000006D6 EB1B                <1>         jmp .10E
    39                              <1> .11L:
    40 000006D8 EA000000002800      <1>         jmp SS_TASK_1:0
    41 000006DF EB12                <1>         jmp .10E
    42                              <1> .12L:
    43 000006E1 EA000000003000      <1>         jmp SS_TASK_2:0
    44 000006E8 EB09                <1>         jmp .10E
    45                              <1> .13L:
    46 000006EA EA000000003800      <1>         jmp SS_TASK_3:0
    47 000006F1 EB00                <1>         jmp .10E
    48                              <1> .10E:
    49                              <1> 
    50                              <1>         ;-----------------------------------------
    51                              <1>         ; 【レジスタの復帰】
    52                              <1>         ;-----------------------------------------
    53 000006F3 07                  <1>         pop es
    54 000006F4 1F                  <1>         pop ds
    55 000006F5 61                  <1>         popad
    56                              <1> 
    57 000006F6 CF                  <1>         iret
    58                              <1> 
    59 000006F7 00                  <1> ALIGN 4, db 0
    60 000006F8 0000000000000000    <1> TIMER_COUNT:  dq 0
   152                                  %include "modules/int_pf.s"
     1                              <1> int_pf:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 00000700 55                  <1>         push ebp
     6 00000701 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;-----------------------------------------
     9                              <1>         ; 【レジスタの保存】
    10                              <1>         ;-----------------------------------------
    11 00000703 60                  <1>         pusha
    12 00000704 1E                  <1>         push ds
    13 00000705 06                  <1>         push es
    14                              <1> 
    15                              <1>         ;-----------------------------------------
    16                              <1>         ; 例外を生成したアドレスの確認
    17                              <1>         ;-----------------------------------------
    18 00000706 0F20D0              <1>         mov eax, cr2
    19 00000709 2500F0FFFF          <1>         and eax, ~0x0FFF
    20 0000070E 3D00701000          <1>         cmp eax, 0x0010_7000
    21 00000713 7521                <1>         jne .10F
    22                              <1> 
    23                              <1>         ;-----------------------------------------
    24                              <1>         ; 描画パラメータをコピー
    25                              <1>         ;-----------------------------------------
    26 00000715 C7051C641000077010- <1>         mov [0x00106000 + 0x107 * 4], dword 0x00107007
    26 0000071E 00                  <1>
    27 0000071F 6A4068[6C090000]68- <1>         cdecl memcpy, 0x0010_7000, DRAW_PARAM, rose_size
    27 00000727 00701000E8040D0000- <1>
    27 00000730 6683C40C            <1>
    28                              <1> 
    29 00000734 EB15                <1>         jmp .10E
    30                              <1> .10F:
    31                              <1> 
    32                              <1>         ;-----------------------------------------
    33                              <1>         ; スタックの調整
    34                              <1>         ;-----------------------------------------
    35 00000736 83C404              <1>         add esp, 4
    36 00000739 83C404              <1>         add esp, 4
    37 0000073C 61                  <1>         popa
    38 0000073D 5D                  <1>         pop ebp
    39                              <1> 
    40                              <1>         ;-----------------------------------------
    41                              <1>         ; タスク終了処理
    42                              <1>         ;-----------------------------------------
    43 0000073E 9C                  <1>         pushf
    44 0000073F 0E                  <1>         push cs
    45 00000740 68[45100000]        <1>         push int_stop
    46                              <1> 
    47 00000745 B8[55070000]        <1>         mov eax, .s0
    48 0000074A CF                  <1>         iret
    49                              <1> .10E:
    50                              <1> 
    51                              <1>         ;-----------------------------------------
    52                              <1>         ; 【レジスタの復帰】
    53                              <1>         ;-----------------------------------------
    54 0000074B 07                  <1>         pop es
    55 0000074C 1F                  <1>         pop ds
    56 0000074D 61                  <1>         popa
    57                              <1> 
    58                              <1>         ;-----------------------------------------
    59                              <1>         ; 【スタックフレームの破棄】
    60                              <1>         ;-----------------------------------------
    61 0000074E 89EC                <1>         mov esp, ebp
    62 00000750 5D                  <1>         pop ebp
    63                              <1> 
    64                              <1>         ;-----------------------------------------
    65                              <1>         ; エラーコードの破棄
    66                              <1>         ;-----------------------------------------
    67 00000751 83C404              <1>         add esp, 4
    68 00000754 CF                  <1>         iret
    69                              <1> 
    70 00000755 203C20504147452046- <1> .s0     db " < PAGE FAULT > ", 0
    70 0000075E 41554C54203E2000    <1>
   153                                  %include "tasks/task_1.s"
     1                              <1> task_1:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 文字列の表示
     4                              <1>         ;-----------------------------------------
     5 00000766 68[94070000]6A076A- <1>         cdecl draw_str, 63, 0, 0x07, .s0
     5 0000076E 006A3FE85704000066- <1>
     5 00000777 83C410              <1>
     6                              <1> 
     7                              <1> .10L:
     8                              <1> 
     9                              <1>         ;-----------------------------------------
    10                              <1>         ; 時刻の表示
    11                              <1>         ;-----------------------------------------
    12 0000077A A1[54020000]        <1>         mov eax, [RTC_TIME]
    13 0000077F 5068000700006A006A- <1>         cdecl draw_time, 72, 0, 0x0700, eax
    13 00000788 48E8EA0700006683C4- <1>
    13 00000791 10                  <1>
    14                              <1> 
    15 00000792 EBE6                <1>         jmp .10L
    16                              <1> 
    17                              <1>         ;-----------------------------------------
    18                              <1>         ; データ
    19                              <1>         ;-----------------------------------------
    20 00000794 5461736B2D3100      <1> .s0     db "Task-1", 0
   154                                  %include "tasks/task_2.s"
     1                              <1> task_2:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 文字列の表示
     4                              <1>         ;-----------------------------------------
     5 0000079B 68[5E080000]6A076A- <1>         cdecl draw_str, 63, 1, 0x07, .s0
     5 000007A3 016A3FE82204000066- <1>
     5 000007AC 83C410              <1>
     6                              <1> 
     7                              <1>         ;-----------------------------------------
     8                              <1>         ; 初期値の設定
     9                              <1>         ;-----------------------------------------
    10 000007AF DB05[4C080000]      <1>         fild dword [.c1000]
    11 000007B5 D9EB                <1>         fldpi
    12 000007B7 DA35[50080000]      <1>         fidiv dword [.c180]
    13 000007BD D9EB                <1>         fldpi
    14 000007BF DCC0                <1>         fadd st0, st0
    15 000007C1 D9EE                <1>         fldz
    16                              <1> 
    17                              <1> .10L:
    18                              <1> 
    19                              <1>         ;-----------------------------------------
    20                              <1>         ; sin(θ)
    21                              <1>         ;-----------------------------------------
    22 000007C3 D8C2                <1>         fadd st0, st2
    23 000007C5 D9F8                <1>         fprem
    24 000007C7 D9C0                <1>         fld st0
    25 000007C9 D9FE                <1>         fsin
    26 000007CB D8CC                <1>         fmul st0, st4
    27                              <1> 
    28 000007CD DF35[54080000]      <1>         fbstp [.bcd]
    29                              <1> 
    30                              <1>         ;-----------------------------------------
    31                              <1>         ; 値の表示
    32                              <1>         ;-----------------------------------------
    33 000007D3 A1[54080000]        <1>         mov eax, [.bcd]
    34 000007D8 89C3                <1>         mov ebx, eax
    35                              <1> 
    36 000007DA 250F0F0000          <1>         and eax, 0x0F0F
    37 000007DF 0D30300000          <1>         or eax, 0x3030
    38                              <1> 
    39 000007E4 C1EB04              <1>         shr ebx, 4
    40 000007E7 81E30F0F0000        <1>         and ebx, 0x0F0F
    41 000007ED 81CB30300000        <1>         or ebx, 0x3030
    42                              <1> 
    43 000007F3 883D[66080000]      <1>         mov [.s2 + 0], bh
    44 000007F9 8825[68080000]      <1>         mov [.s3 + 0], ah
    45 000007FF 881D[69080000]      <1>         mov [.s3 + 1], bl
    46 00000805 A2[6A080000]        <1>         mov [.s3 + 2], al
    47                              <1> 
    48 0000080A B807000000          <1>         mov eax, 7
    49 0000080F 0FA305[5D080000]    <1>         bt [.bcd + 9], eax
    50 00000816 7209                <1>         jc .10F
    51                              <1> 
    52 00000818 C605[65080000]2B    <1>         mov [.s1 + 0], byte '+'
    53 0000081F EB07                <1>         jmp .10E
    54                              <1> .10F:
    55                              <1> 
    56 00000821 C605[65080000]2D    <1>         mov [.s1 + 0], byte '-'
    57                              <1> .10E:
    58                              <1> 
    59 00000828 68[65080000]6A076A- <1>         cdecl draw_str, 72, 1, 0x07, .s1
    59 00000830 016A48E89503000066- <1>
    59 00000839 83C410              <1>
    60                              <1> 
    61                              <1>         ;-----------------------------------------
    62                              <1>         ; ウェイト
    63                              <1>         ;-----------------------------------------
    64 0000083C 6A0AE8D30B00006683- <1>         cdecl wait_tick, 10
    64 00000845 C404                <1>
    65                              <1> 
    66 00000847 E977FFFFFF          <1>         jmp .10L
    67                              <1> 
    68                              <1>         ;-----------------------------------------
    69                              <1>         ; データ
    70                              <1>         ;-----------------------------------------
    71                              <1> ALIGN 4, db 0
    72 0000084C E8030000            <1> .c1000: dd 1000
    73 00000850 B4000000            <1> .c180:  dd 180
    74                              <1> 
    75 00000854 00<rept>            <1> .bcd:   times 10 db 0x00
    76                              <1> 
    77 0000085E 5461736B2D3200      <1> .s0     db "Task-2", 0
    78 00000865 2D                  <1> .s1:    db "-"
    79 00000866 302E                <1> .s2:    db "0."
    80 00000868 30303000            <1> .s3:    db "000", 0
   155                                  %include "tasks/task_3.s"
     1                              <1> task_3:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 0000086C 89E5                <1>         mov ebp, esp
     6                              <1> 
     7 0000086E 6A00                <1>         push dword 0
     8 00000870 6A00                <1>         push dword 0
     9 00000872 6A00                <1>         push dword 0
    10 00000874 6A00                <1>         push dword 0
    11 00000876 6A00                <1>         push dword 0
    12                              <1> 
    13                              <1>         ;-----------------------------------------
    14                              <1>         ; 初期化
    15                              <1>         ;-----------------------------------------
    16 00000878 BE00701000          <1>         mov esi, 0x0010_7000
    17                              <1> 
    18                              <1>         ;-----------------------------------------
    19                              <1>         ; タイトル表示
    20                              <1>         ;-----------------------------------------
    21 0000087D 8B06                <1>         mov eax, [esi + rose.x0]
    22 0000087F 8B5E04              <1>         mov ebx, [esi + rose.y0]
    23                              <1> 
    24 00000882 C1E803              <1>         shr eax, 3
    25 00000885 C1EB04              <1>         shr ebx, 4
    26 00000888 4B                  <1>         dec ebx
    27 00000889 8B4E24              <1>         mov ecx, [esi + rose.color_s]
    28 0000088C 8D5630              <1>         lea edx, [esi + rose.title]
    29                              <1> 
    30 0000088F 52515350E835030000- <1>         cdecl draw_str, eax, ebx, ecx, edx
    30 00000898 6683C410            <1>
    31                              <1> 
    32                              <1>         ;-----------------------------------------
    33                              <1>         ; X軸の中点
    34                              <1>         ;-----------------------------------------
    35 0000089C 8B06                <1>         mov eax, [esi + rose.x0]
    36 0000089E 8B5E08              <1>         mov ebx, [esi + rose.x1]
    37 000008A1 29C3                <1>         sub ebx, eax
    38 000008A3 D1EB                <1>         shr ebx, 1
    39 000008A5 01C3                <1>         add ebx, eax
    40 000008A7 895DFC              <1>         mov [ebp - 4], ebx
    41                              <1> 
    42                              <1>         ;-----------------------------------------
    43                              <1>         ; Y軸の中点
    44                              <1>         ;-----------------------------------------
    45 000008AA 8B4604              <1>         mov eax, [esi + rose.y0]
    46 000008AD 8B5E0C              <1>         mov ebx, [esi + rose.y1]
    47 000008B0 29C3                <1>         sub ebx, eax
    48 000008B2 D1EB                <1>         shr ebx, 1
    49 000008B4 01C3                <1>         add ebx, eax
    50 000008B6 895DF8              <1>         mov [ebp - 8], ebx
    51                              <1> 
    52                              <1>         ;-----------------------------------------
    53                              <1>         ; X軸の描画
    54                              <1>         ;-----------------------------------------
    55 000008B9 8B06                <1>         mov eax, [esi + rose.x0]
    56 000008BB 8B5DF8              <1>         mov ebx, [ebp - 8]
    57 000008BE 8B4E08              <1>         mov ecx, [esi + rose.x1]
    58                              <1> 
    59 000008C1 FF761853515350E8A3- <1>         cdecl draw_line, eax, ebx, ecx, ebx, dword [esi + rose.color_x]
    59 000008CA 0400006683C414      <1>
    60                              <1> 
    61                              <1>         ;-----------------------------------------
    62                              <1>         ; Y軸の描画
    63                              <1>         ;-----------------------------------------
    64 000008D1 8B4604              <1>         mov eax, [esi + rose.y0]
    65 000008D4 8B5DFC              <1>         mov ebx, [ebp - 4]
    66 000008D7 8B4E0C              <1>         mov ecx, [esi + rose.y1]
    67                              <1> 
    68 000008DA FF761C51535053E88A- <1>         cdecl draw_line, ebx, eax, ebx, ecx, dword [esi + rose.color_y]
    68 000008E3 0400006683C414      <1>
    69                              <1> 
    70                              <1>         ;-----------------------------------------
    71                              <1>         ; 枠の描画
    72                              <1>         ;-----------------------------------------
    73 000008EA 8B06                <1>         mov eax, [esi + rose.x0]
    74 000008EC 8B5E04              <1>         mov ebx, [esi + rose.y0]
    75 000008EF 8B4E08              <1>         mov ecx, [esi + rose.x1]
    76 000008F2 8B560C              <1>         mov edx, [esi + rose.y1]
    77                              <1> 
    78 000008F5 FF762052515350E847- <1>         cdecl draw_rect, eax, ebx, ecx, edx, dword [esi + rose.color_z]
    78 000008FE 0500006683C414      <1>
    79                              <1> 
    80                              <1>         ;-----------------------------------------
    81                              <1>         ; 振幅をX軸の約95%とする
    82                              <1>         ;-----------------------------------------
    83 00000905 8B4608              <1>         mov eax, [esi + rose.x1]
    84 00000908 2B06                <1>         sub eax, [esi + rose.x0]
    85 0000090A D1E8                <1>         shr eax, 1
    86 0000090C 89C3                <1>         mov ebx, eax
    87 0000090E C1EB04              <1>         shr ebx, 4
    88 00000911 29D8                <1>         sub eax, ebx
    89                              <1> 
    90                              <1>         ;-----------------------------------------
    91                              <1>         ; FPUの初期化(バラ曲線の初期化)
    92                              <1>         ;-----------------------------------------
    93 00000913 FF7614FF761050E88D- <1>         cdecl fpu_rose_init, eax, dword [esi + rose.n], dword [esi + rose.d]
    93 0000091C 0000006683C40C      <1>
    94                              <1> 
    95                              <1>         ;-----------------------------------------
    96                              <1>         ; メインループ
    97                              <1>         ;-----------------------------------------
    98                              <1> .10L:
    99                              <1> 
   100                              <1>         ;-----------------------------------------
   101                              <1>         ; 座標計算
   102                              <1>         ;-----------------------------------------
   103 00000923 8D5DF4              <1>         lea ebx, [ebp - 12]
   104 00000926 8D4DF0              <1>         lea ecx, [ebp - 16]
   105 00000929 8B45EC              <1>         mov eax, [ebp - 20]
   106                              <1> 
   107 0000092C 505153E89200000066- <1>         cdecl fpu_rose_update, ebx, ecx, eax
   107 00000935 83C40C              <1>
   108                              <1> 
   109                              <1>         ;-----------------------------------------
   110                              <1>         ; 角度更新(r = r % 36000)
   111                              <1>         ;-----------------------------------------
   112 00000938 BA00000000          <1>         mov edx, 0
   113 0000093D 40                  <1>         inc eax
   114 0000093E BBA08C0000          <1>         mov ebx, 360 * 100
   115 00000943 F7F3                <1>         div ebx
   116 00000945 8955EC              <1>         mov [ebp - 20], edx
   117                              <1> 
   118                              <1>         ;-----------------------------------------
   119                              <1>         ; ドット描画
   120                              <1>         ;-----------------------------------------
   121 00000948 8B4DF4              <1>         mov ecx, [ebp - 12]
   122 0000094B 8B55F0              <1>         mov edx, [ebp - 16]
   123                              <1> 
   124 0000094E 034DFC              <1>         add ecx, [ebp - 4]
   125 00000951 0355F8              <1>         add edx, [ebp - 8]
   126                              <1> 
   127 00000954 8B5E28              <1>         mov ebx, [esi + rose.color_f]
   128 00000957 CD82                <1>         int 0x82
   129                              <1> 
   130                              <1>         ;-----------------------------------------
   131                              <1>         ; ウェイト
   132                              <1>         ;-----------------------------------------
   133 00000959 6A02E8B60A00006683- <1>         cdecl wait_tick, 2
   133 00000962 C404                <1>
   134                              <1> 
   135                              <1>         ;-----------------------------------------
   136                              <1>         ; ドット描画
   137                              <1>         ;-----------------------------------------
   138 00000964 8B5E2C              <1>         mov ebx, [esi + rose.color_b]
   139 00000967 CD82                <1>         int 0x82
   140                              <1> 
   141 00000969 EBB8                <1>         jmp .10L
   142                              <1> 
   143                              <1>         ;-----------------------------------------
   144                              <1>         ; データ
   145                              <1>         ;-----------------------------------------
   146 0000096B 00                  <1> ALIGN 4, db 0
   147                              <1> DRAW_PARAM:
   148                              <1>     istruc rose
   149 0000096C 10000000            <1>         at rose.x0, dd 16
   150 00000970 20000000            <1>         at rose.y0, dd 32
   151 00000974 A0010000            <1>         at rose.x1, dd 416
   152 00000978 B0010000            <1>         at rose.y1, dd 432
   153                              <1> 
   154 0000097C 02000000            <1>         at rose.n, dd 2
   155 00000980 01000000            <1>         at rose.d, dd 1
   156                              <1> 
   157 00000984 07000000            <1>         at rose.color_x, dd 0x0007
   158 00000988 07000000            <1>         at rose.color_y, dd 0x0007
   159 0000098C 0F000000            <1>         at rose.color_z, dd 0x000F
   160 00000990 0F030000            <1>         at rose.color_s, dd 0x030F
   161 00000994 0F000000            <1>         at rose.color_f, dd 0x000F
   162 00000998 03000000            <1>         at rose.color_b, dd 0x0003
   163                              <1> 
   164 0000099C 5461736B2D3300      <1>         at rose.title, db "Task-3", 0
   165 000009A3 00<rept>            <1>     iend
   166                              <1> 
   167                              <1> fpu_rose_init:
   168                              <1>         ;-----------------------------------------
   169                              <1>         ; 【スタックフレームの構築】
   170                              <1>         ;-----------------------------------------
   171 000009AC 55                  <1>         push ebp
   172 000009AD 89E5                <1>         mov ebp, esp
   173                              <1> 
   174 000009AF 68B4000000          <1>         push dword 180
   175                              <1> 
   176                              <1>         ;-----------------------------------------
   177                              <1>         ; FPUのスタックを設定
   178                              <1>         ;-----------------------------------------
   179 000009B4 D9EB                <1>         fldpi
   180 000009B6 DA75FC              <1>         fidiv dword [ebp - 4]
   181 000009B9 DB450C              <1>         fild dword [ebp + 12]
   182 000009BC DA7510              <1>         fidiv dword [ebp + 16]
   183 000009BF DB4508              <1>         fild dword [ebp + 8]
   184                              <1> 
   185                              <1>         ;-----------------------------------------
   186                              <1>         ; 【スタックフレームの破棄】
   187                              <1>         ;-----------------------------------------
   188 000009C2 89EC                <1>         mov esp, ebp
   189 000009C4 5D                  <1>         pop ebp
   190                              <1> 
   191 000009C5 C3                  <1>         ret
   192                              <1> 
   193                              <1> fpu_rose_update:
   194                              <1>         ;-----------------------------------------
   195                              <1>         ; 【スタックフレームの構築】
   196                              <1>         ;-----------------------------------------
   197 000009C6 55                  <1>         push ebp
   198 000009C7 89E5                <1>         mov ebp, esp
   199                              <1> 
   200                              <1>         ;-----------------------------------------
   201                              <1>         ; 【レジスタの保存】
   202                              <1>         ;-----------------------------------------
   203 000009C9 50                  <1>         push eax
   204 000009CA 53                  <1>         push ebx
   205                              <1> 
   206                              <1>         ;-----------------------------------------
   207                              <1>         ; X/Y座標の保存先を設定
   208                              <1>         ;-----------------------------------------
   209 000009CB 8B4508              <1>         mov eax, [ebp + 8]
   210 000009CE 8B5D0C              <1>         mov ebx, [ebp + 12]
   211                              <1> 
   212                              <1>         ;-----------------------------------------
   213                              <1>         ; ラディアンへの変換
   214                              <1>         ;-----------------------------------------
   215 000009D1 DB4510              <1>         fild dword [ebp + 16]
   216 000009D4 D8CB                <1>         fmul st0, st3
   217 000009D6 D9C0                <1>         fld st0
   218                              <1> 
   219 000009D8 D9FB                <1>         fsincos
   220 000009DA D9CA                <1>         fxch st2
   221 000009DC D8CC                <1>         fmul st0, st4
   222 000009DE D9FE                <1>         fsin
   223 000009E0 D8CB                <1>         fmul st0, st3
   224                              <1> 
   225                              <1>         ;-----------------------------------------
   226                              <1>         ; x = A * sin(kθ) * cos(θ)
   227                              <1>         ;-----------------------------------------
   228 000009E2 D9CA                <1>         fxch st2
   229 000009E4 D8CA                <1>         fmul st0, st2
   230 000009E6 DB18                <1>         fistp dword [eax]
   231                              <1> 
   232                              <1>         ;-----------------------------------------
   233                              <1>         ; y = -A * sin(kθ) * sin(θ)
   234                              <1>         ;-----------------------------------------
   235 000009E8 DEC9                <1>         fmulp st1, st0
   236 000009EA D9E0                <1>         fchs
   237 000009EC DB1B                <1>         fistp dword [ebx]
   238                              <1> 
   239                              <1>         ;-----------------------------------------
   240                              <1>         ; 【レジスタの復帰】
   241                              <1>         ;-----------------------------------------
   242 000009EE 5B                  <1>         pop ebx
   243 000009EF 58                  <1>         pop eax
   244                              <1> 
   245                              <1>         ;-----------------------------------------
   246                              <1>         ; 【スタックフレームの破棄】
   247                              <1>         ;-----------------------------------------
   248 000009F0 89EC                <1>         mov esp, ebp
   249 000009F2 5D                  <1>         pop ebp
   250                              <1> 
   251 000009F3 C3                  <1>         ret
   156                                  
   157                                  ;***********************************************************
   158                                  ;  モジュール
   159                                  ;***********************************************************
   160                                  %include "../modules/protect/vga.s"
     1                              <1> vga_set_read_plane:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 000009F4 55                  <1>         push ebp
     6 000009F5 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;-----------------------------------------
     9                              <1>         ; 【レジスタの保存】
    10                              <1>         ;-----------------------------------------
    11 000009F7 50                  <1>         push eax
    12 000009F8 52                  <1>         push edx
    13                              <1> 
    14                              <1>         ;-----------------------------------------
    15                              <1>         ; 読み込みプレーンの選択
    16                              <1>         ;-----------------------------------------
    17 000009F9 8A6508              <1>         mov ah, [ebp + 8]
    18 000009FC 80E403              <1>         and ah, 0x03
    19 000009FF B004                <1>         mov al, 0x04
    20 00000A01 66BACE03            <1>         mov dx, 0x03CE
    21 00000A05 66EF                <1>         out dx, ax
    22                              <1> 
    23                              <1>         ;-----------------------------------------
    24                              <1>         ; 【レジスタの復帰】
    25                              <1>         ;-----------------------------------------
    26 00000A07 5A                  <1>         pop edx
    27 00000A08 58                  <1>         pop eax
    28                              <1> 
    29                              <1>         ;-----------------------------------------
    30                              <1>         ; 【スタックフレームの破棄】
    31                              <1>         ;-----------------------------------------
    32 00000A09 89EC                <1>         mov esp, ebp
    33 00000A0B 5D                  <1>         pop ebp
    34                              <1> 
    35 00000A0C C3                  <1>         ret
    36                              <1> 
    37                              <1> vga_set_write_plane:
    38                              <1>         ;-----------------------------------------
    39                              <1>         ; 【スタックフレームの構築】
    40                              <1>         ;-----------------------------------------
    41 00000A0D 55                  <1>         push ebp
    42 00000A0E 89E5                <1>         mov ebp, esp
    43                              <1> 
    44                              <1>         ;-----------------------------------------
    45                              <1>         ; 【レジスタの保存】
    46                              <1>         ;-----------------------------------------
    47 00000A10 50                  <1>         push eax
    48 00000A11 52                  <1>         push edx
    49                              <1> 
    50                              <1>         ;-----------------------------------------
    51                              <1>         ; 書き込みプレーンの選択
    52                              <1>         ;-----------------------------------------
    53 00000A12 8A6508              <1>         mov ah, [ebp + 8]
    54 00000A15 80E40F              <1>         and ah, 0x0F
    55 00000A18 B002                <1>         mov al, 0x02
    56 00000A1A 66BAC403            <1>         mov dx, 0x03C4
    57 00000A1E 66EF                <1>         out dx, ax
    58                              <1> 
    59                              <1>         ;-----------------------------------------
    60                              <1>         ; 【レジスタの復帰】
    61                              <1>         ;-----------------------------------------
    62 00000A20 5A                  <1>         pop edx
    63 00000A21 58                  <1>         pop eax
    64                              <1> 
    65                              <1>         ;-----------------------------------------
    66                              <1>         ; 【スタックフレームの破棄】
    67                              <1>         ;-----------------------------------------
    68 00000A22 89EC                <1>         mov esp, ebp
    69 00000A24 5D                  <1>         pop ebp
    70                              <1> 
    71 00000A25 C3                  <1>         ret
    72                              <1> 
    73                              <1> vram_font_copy:
    74                              <1>         ;-----------------------------------------
    75                              <1>         ; 【スタックフレームの構築】
    76                              <1>         ;-----------------------------------------
    77 00000A26 55                  <1>         push ebp
    78 00000A27 89E5                <1>         mov ebp, esp
    79                              <1> 
    80                              <1>         ;-----------------------------------------
    81                              <1>         ; 【レジスタの保存】
    82                              <1>         ;-----------------------------------------
    83 00000A29 50                  <1>         push eax
    84 00000A2A 53                  <1>         push ebx
    85 00000A2B 51                  <1>         push ecx
    86 00000A2C 52                  <1>         push edx
    87 00000A2D 56                  <1>         push esi
    88 00000A2E 57                  <1>         push edi
    89                              <1> 
    90                              <1>         ;-----------------------------------------
    91                              <1>         ; マスクデータの作成
    92                              <1>         ;-----------------------------------------
    93 00000A2F 8B7508              <1>         mov esi, [ebp + 8]
    94 00000A32 8B7D0C              <1>         mov edi, [ebp + 12]
    95 00000A35 0FB64510            <1>         movzx eax, byte [ebp + 16]
    96 00000A39 0FB75D14            <1>         movzx ebx, word [ebp + 20]
    97                              <1> 
    98 00000A3D 84C7                <1>         test bh, al
    99 00000A3F 0F94C6              <1>         setz dh
   100 00000A42 FECE                <1>         dec dh
   101                              <1> 
   102 00000A44 84C3                <1>         test bl, al
   103 00000A46 0F94C2              <1>         setz dl
   104 00000A49 FECA                <1>         dec dl
   105                              <1> 
   106                              <1>         ;-----------------------------------------
   107                              <1>         ; 16ドットフォントのコピー
   108                              <1>         ;-----------------------------------------
   109 00000A4B FC                  <1>         cld
   110                              <1> 
   111 00000A4C B910000000          <1>         mov ecx, 16
   112                              <1> .10L:
   113                              <1> 
   114                              <1>         ;-----------------------------------------
   115                              <1>         ; フォントマスクの作成
   116                              <1>         ;-----------------------------------------
   117 00000A51 AC                  <1>         lodsb
   118 00000A52 88C4                <1>         mov ah, al
   119 00000A54 F6D4                <1>         not ah
   120                              <1> 
   121                              <1>         ;-----------------------------------------
   122                              <1>         ; 前景色
   123                              <1>         ;-----------------------------------------
   124 00000A56 20D0                <1>         and al, dl
   125                              <1> 
   126                              <1>         ;-----------------------------------------
   127                              <1>         ; 背景色
   128                              <1>         ;-----------------------------------------
   129 00000A58 F7C310000000        <1>         test ebx, 0x0010
   130 00000A5E 7404                <1>         jz .11F
   131 00000A60 2227                <1>         and ah, [edi]
   132 00000A62 EB02                <1>         jmp .11E
   133                              <1> .11F:
   134 00000A64 20F4                <1>         and ah, dh
   135                              <1> .11E:
   136                              <1> 
   137                              <1>         ;-----------------------------------------
   138                              <1>         ; 前景色と背景色をコピー
   139                              <1>         ;-----------------------------------------
   140 00000A66 08E0                <1>         or al, ah
   141                              <1> 
   142                              <1>         ;-----------------------------------------
   143                              <1>         ; 新しい値を出力
   144                              <1>         ;-----------------------------------------
   145 00000A68 8807                <1>         mov [edi], al
   146                              <1> 
   147 00000A6A 83C750              <1>         add edi, 80
   148 00000A6D E2E2                <1>         loop .10L
   149                              <1> .10E:
   150                              <1> 
   151                              <1>         ;-----------------------------------------
   152                              <1>         ; 【レジスタの復帰】
   153                              <1>         ;-----------------------------------------
   154 00000A6F 5F                  <1>         pop edi
   155 00000A70 5E                  <1>         pop esi
   156 00000A71 5A                  <1>         pop edx
   157 00000A72 59                  <1>         pop ecx
   158 00000A73 5B                  <1>         pop ebx
   159 00000A74 58                  <1>         pop eax
   160                              <1> 
   161                              <1>         ;-----------------------------------------
   162                              <1>         ; 【スタックフレームの破棄】
   163                              <1>         ;-----------------------------------------
   164 00000A75 89EC                <1>         mov esp, ebp
   165 00000A77 5D                  <1>         pop ebp
   166                              <1> 
   167 00000A78 C3                  <1>         ret
   168                              <1> 
   169                              <1> vram_bit_copy:
   170                              <1>         ;-----------------------------------------
   171                              <1>         ; 【スタックフレームの構築】
   172                              <1>         ;-----------------------------------------
   173 00000A79 55                  <1>         push ebp
   174 00000A7A 89E5                <1>         mov ebp, esp
   175                              <1> 
   176                              <1>         ;-----------------------------------------
   177                              <1>         ; 【レジスタの保存】
   178                              <1>         ;-----------------------------------------
   179 00000A7C 50                  <1>         push eax
   180 00000A7D 53                  <1>         push ebx
   181 00000A7E 57                  <1>         push edi
   182                              <1> 
   183                              <1>         ;-----------------------------------------
   184                              <1>         ; ビットのコピー
   185                              <1>         ;-----------------------------------------
   186 00000A7F 8B7D0C              <1>         mov edi, [ebp + 12]
   187 00000A82 0FB64510            <1>         movzx eax, byte [ebp + 16]
   188 00000A86 0FB75D14            <1>         movzx ebx, word [ebp + 20]
   189                              <1> 
   190 00000A8A 84C3                <1>         test bl, al
   191 00000A8C 0F94C3              <1>         setz bl
   192 00000A8F FECB                <1>         dec bl
   193                              <1> 
   194                              <1>         ;-----------------------------------------
   195                              <1>         ; 反転処理
   196                              <1>         ;-----------------------------------------
   197 00000A91 8A4508              <1>         mov al, [ebp + 8]
   198 00000A94 88C4                <1>         mov ah, al
   199 00000A96 F6D4                <1>         not ah
   200                              <1> 
   201                              <1>         ;-----------------------------------------
   202                              <1>         ; 描画処理
   203                              <1>         ;-----------------------------------------
   204 00000A98 2227                <1>         and ah, [edi]
   205 00000A9A 20D8                <1>         and al, bl
   206 00000A9C 08E0                <1>         or al, ah
   207 00000A9E 8807                <1>         mov [edi], al
   208                              <1> 
   209                              <1>         ;-----------------------------------------
   210                              <1>         ; 【レジスタの復帰】
   211                              <1>         ;-----------------------------------------
   212 00000AA0 5F                  <1>         pop edi
   213 00000AA1 5B                  <1>         pop ebx
   214 00000AA2 58                  <1>         pop eax
   215                              <1> 
   216                              <1>         ;-----------------------------------------
   217                              <1>         ; 【スタックフレームの破棄】
   218                              <1>         ;-----------------------------------------
   219 00000AA3 89EC                <1>         mov esp, ebp
   220 00000AA5 5D                  <1>         pop ebp
   221                              <1> 
   222 00000AA6 C3                  <1>         ret
   161                                  %include "../modules/protect/draw_char.s"
     1                              <1> draw_char:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 00000AA7 55                  <1>         push ebp
     6 00000AA8 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;-----------------------------------------
     9                              <1>         ; 【レジスタの保存】
    10                              <1>         ;-----------------------------------------
    11 00000AAA 50                  <1>         push eax
    12 00000AAB 53                  <1>         push ebx
    13 00000AAC 51                  <1>         push ecx
    14 00000AAD 52                  <1>         push edx
    15 00000AAE 56                  <1>         push esi
    16 00000AAF 57                  <1>         push edi
    17                              <1> 
    18                              <1>         ;-----------------------------------------
    19                              <1>         ; テストアンドセット
    20                              <1>         ;-----------------------------------------
    21                              <1> %ifdef	USE_TEST_AND_SET
    22 00000AB0 68[840B0000]E8AD08- <1>         cdecl test_and_set, IN_USE
    22 00000AB8 00006683C404        <1>
    23                              <1> %endif
    24                              <1> 
    25                              <1>         ;-----------------------------------------
    26                              <1>         ; コピー元フォントアドレスを設定
    27                              <1>         ;-----------------------------------------
    28 00000ABE 0FB67514            <1>         movzx esi, byte [ebp + 20]
    29 00000AC2 C1E604              <1>         shl esi, 4
    30 00000AC5 0335[50020000]      <1>         add esi, [FONT_ADR]
    31                              <1> 
    32                              <1>         ;-----------------------------------------
    33                              <1>         ; コピー先アドレスを取得
    34                              <1>         ; Adr = 0xA0000 + (640 / 8 * 16) * y + x
    35                              <1>         ;-----------------------------------------
    36 00000ACB 8B7D0C              <1>         mov edi, [ebp + 12]
    37 00000ACE C1E708              <1>         shl edi, 8
    38 00000AD1 8DBCBF00000A00      <1>         lea edi, [edi * 4 + edi + 0xA0000]
    39 00000AD8 037D08              <1>         add edi, [ebp + 8]
    40                              <1> 
    41                              <1>         ;-----------------------------------------
    42                              <1>         ; 1文字分のフォントを出力
    43                              <1>         ;-----------------------------------------
    44 00000ADB 0FB75D10            <1>         movzx ebx, word[ebp + 16]
    45                              <1> 
    46 00000ADF 6A03E80EFFFFFF6683- <1>         cdecl vga_set_read_plane, 0x03
    46 00000AE8 C404                <1>
    47 00000AEA 6A08E81CFFFFFF6683- <1>         cdecl vga_set_write_plane, 0x08
    47 00000AF3 C404                <1>
    48 00000AF5 536A085756E827FFFF- <1>         cdecl vram_font_copy, esi, edi, 0x08, ebx
    48 00000AFE FF6683C410          <1>
    49                              <1> 
    50 00000B03 6A02E8EAFEFFFF6683- <1>         cdecl vga_set_read_plane, 0x02
    50 00000B0C C404                <1>
    51 00000B0E 6A04E8F8FEFFFF6683- <1>         cdecl vga_set_write_plane, 0x04
    51 00000B17 C404                <1>
    52 00000B19 536A045756E803FFFF- <1>         cdecl vram_font_copy, esi, edi, 0x04, ebx
    52 00000B22 FF6683C410          <1>
    53                              <1> 
    54 00000B27 6A01E8C6FEFFFF6683- <1>         cdecl vga_set_read_plane, 0x01
    54 00000B30 C404                <1>
    55 00000B32 6A02E8D4FEFFFF6683- <1>         cdecl vga_set_write_plane, 0x02
    55 00000B3B C404                <1>
    56 00000B3D 536A025756E8DFFEFF- <1>         cdecl vram_font_copy, esi, edi, 0x02, ebx
    56 00000B46 FF6683C410          <1>
    57                              <1> 
    58 00000B4B 6A00E8A2FEFFFF6683- <1>         cdecl vga_set_read_plane, 0x00
    58 00000B54 C404                <1>
    59 00000B56 6A01E8B0FEFFFF6683- <1>         cdecl vga_set_write_plane, 0x01
    59 00000B5F C404                <1>
    60 00000B61 536A015756E8BBFEFF- <1>         cdecl vram_font_copy, esi, edi, 0x01, ebx
    60 00000B6A FF6683C410          <1>
    61                              <1> 
    62                              <1>         ;-----------------------------------------
    63                              <1>         ; 変数のクリア
    64                              <1>         ;-----------------------------------------
    65                              <1> %ifdef	USE_TEST_AND_SET
    66 00000B6F C705[840B0000]0000- <1>         mov [IN_USE], dword 0
    66 00000B77 0000                <1>
    67                              <1> %endif
    68                              <1> 
    69                              <1>         ;-----------------------------------------
    70                              <1>         ; 【レジスタの復帰】
    71                              <1>         ;-----------------------------------------
    72 00000B79 5F                  <1>         pop edi
    73 00000B7A 5E                  <1>         pop esi
    74 00000B7B 5A                  <1>         pop edx
    75 00000B7C 59                  <1>         pop ecx
    76 00000B7D 5B                  <1>         pop ebx
    77 00000B7E 58                  <1>         pop eax
    78                              <1> 
    79                              <1>         ;-----------------------------------------
    80                              <1>         ; 【スタックフレームの破棄】
    81                              <1>         ;-----------------------------------------
    82 00000B7F 89EC                <1>         mov esp, ebp
    83 00000B81 5D                  <1>         pop ebp
    84                              <1> 
    85 00000B82 C3                  <1>         ret
    86                              <1> 
    87 00000B83 00                  <1> ALIGN 4, db 0
    88 00000B84 00000000            <1> IN_USE:	dd 0
   162                                  %include "../modules/protect/draw_font.s"
     1                              <1> draw_font:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 00000B88 55                  <1>         push ebp
     6 00000B89 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;-----------------------------------------
     9                              <1>         ; 【レジスタの保存】
    10                              <1>         ;-----------------------------------------
    11 00000B8B 50                  <1>         push eax
    12 00000B8C 53                  <1>         push ebx
    13 00000B8D 51                  <1>         push ecx
    14 00000B8E 52                  <1>         push edx
    15 00000B8F 56                  <1>         push esi
    16 00000B90 57                  <1>         push edi
    17                              <1> 
    18                              <1>         ;-----------------------------------------
    19                              <1>         ; 基準となる位置をレジスタに保存
    20                              <1>         ;-----------------------------------------
    21 00000B91 8B7508              <1>         mov esi, [ebp + 8]
    22 00000B94 8B7D0C              <1>         mov edi, [ebp + 12]
    23                              <1> 
    24                              <1>         ;-----------------------------------------
    25                              <1>         ; フォントを一覧表示する
    26                              <1>         ;-----------------------------------------
    27 00000B97 B900000000          <1>         mov ecx, 0
    28                              <1> .10L:
    29 00000B9C 81F900010000        <1>         cmp ecx, 256
    30 00000BA2 731F                <1>         jae .10E
    31                              <1> 
    32 00000BA4 89C8                <1>         mov eax, ecx
    33 00000BA6 83E00F              <1>         and eax, 0x0F
    34 00000BA9 01F0                <1>         add eax, esi
    35                              <1> 
    36 00000BAB 89CB                <1>         mov ebx, ecx
    37 00000BAD C1EB04              <1>         shr ebx, 4
    38 00000BB0 01FB                <1>         add ebx, edi
    39                              <1> 
    40 00000BB2 516A075350E8EBFEFF- <1>         cdecl draw_char, eax, ebx, 0x07, ecx
    40 00000BBB FF6683C410          <1>
    41                              <1> 
    42 00000BC0 41                  <1>         inc ecx
    43 00000BC1 EBD9                <1>         jmp .10L
    44                              <1> .10E:
    45                              <1> 
    46                              <1>         ;-----------------------------------------
    47                              <1>         ; 【レジスタの復帰】
    48                              <1>         ;-----------------------------------------
    49 00000BC3 5F                  <1>         pop edi
    50 00000BC4 5E                  <1>         pop esi
    51 00000BC5 5A                  <1>         pop edx
    52 00000BC6 59                  <1>         pop ecx
    53 00000BC7 5B                  <1>         pop ebx
    54 00000BC8 58                  <1>         pop eax
    55                              <1> 
    56                              <1>         ;-----------------------------------------
    57                              <1>         ; 【スタックフレームの破棄】
    58                              <1>         ;-----------------------------------------
    59 00000BC9 89EC                <1>         mov esp, ebp
    60 00000BCB 5D                  <1>         pop ebp
    61                              <1> 
    62 00000BCC C3                  <1>         ret
   163                                  %include "../modules/protect/draw_str.s"
     1                              <1> draw_str:
     2                              <1>     ;---------------------------
     3                              <1>     ; スタックフレーム構築
     4                              <1>     ;---------------------------
     5 00000BCD 55                  <1>     push ebp
     6 00000BCE 89E5                <1>     mov ebp, esp
     7                              <1> 
     8                              <1>     ;---------------------------
     9                              <1>     ; レジスタの保存
    10                              <1>     ;---------------------------
    11 00000BD0 50                  <1>     push eax
    12 00000BD1 53                  <1>     push ebx
    13 00000BD2 51                  <1>     push ecx
    14 00000BD3 52                  <1>     push edx
    15 00000BD4 56                  <1>     push esi
    16                              <1> 
    17                              <1>     ;---------------------------
    18                              <1>     ; 文字列を描画する
    19                              <1>     ;---------------------------
    20 00000BD5 8B4D08              <1>     mov ecx, [ebp + 8]              ; ECX = 列;
    21 00000BD8 8B550C              <1>     mov edx, [ebp + 12]             ; EDX = 行;
    22 00000BDB 0FB75D10            <1>     movzx ebx, word [ebp + 16]      ; EBX = 表示色;
    23 00000BDF 8B7514              <1>     mov esi, [ebp + 20]             ; ESI = 文字列へのアドレス;
    24                              <1> 
    25 00000BE2 FC                  <1>     cld                             ; DF = 0; // アドレス加算
    26                              <1> .10L:                               ; do
    27                              <1>                                     ; {
    28 00000BE3 AC                  <1>     lodsb                           ;   AL = *ESI++; // 文字を取得
    29 00000BE4 3C00                <1>     cmp al, 0                       ;   if (0 == AL)
    30 00000BE6 741A                <1>     je .10E                         ;       break;
    31                              <1> 
    32                              <1> %ifdef USE_SYSTEM_CALL
    33 00000BE8 CD81                <1>     int 0x81                            ; sys_call(1, X, Y, 色, 文字)
    34                              <1> %else
    35                              <1>     cdecl draw_char, ecx, edx, ebx, eax ; draw_char();
    36                              <1> %endif
    37                              <1> 
    38 00000BEA 41                  <1>     inc ecx                         ;   ECX = 0; // 列を加算
    39 00000BEB 83F950              <1>     cmp ecx, 80                     ;   if (80 <= ECX) // 80文字以上?
    40 00000BEE 7C10                <1>     jl .12E                         ;   {
    41 00000BF0 B900000000          <1>     mov ecx, 0                      ;       ECX = 0; // 列を初期化
    42 00000BF5 42                  <1>     inc edx                         ;       EDX++; // 行を加算
    43 00000BF6 83FA1E              <1>     cmp edx, 30                     ;       if (30 <= EDX) // 30行以上?
    44 00000BF9 7C05                <1>     jl .12E                         ;       {
    45 00000BFB BA00000000          <1>     mov edx, 0                      ;           EDX = 0; // 行を初期化
    46                              <1>                                     ;       }
    47                              <1> .12E:                               ;   }
    48 00000C00 EBE1                <1>     jmp .10L
    49                              <1> .10E:                               ; } while (1);
    50                              <1> 
    51                              <1>     ;-----------------------------------------
    52                              <1>     ; 【レジスタの復帰】
    53                              <1>     ;-----------------------------------------
    54 00000C02 5E                  <1>     pop esi
    55 00000C03 5A                  <1>     pop edx
    56 00000C04 59                  <1>     pop ecx
    57 00000C05 5B                  <1>     pop ebx
    58 00000C06 58                  <1>     pop eax
    59                              <1> 
    60                              <1>     ;-----------------------------------------
    61                              <1>     ; 【スタックフレームの破棄】
    62                              <1>     ;-----------------------------------------
    63 00000C07 89EC                <1>     mov esp, ebp
    64 00000C09 5D                  <1>     pop ebp
    65                              <1> 
    66 00000C0A C3                  <1>     ret
   164                                  %include "../modules/protect/draw_color_bar.s"
     1                              <1> draw_color_bar:
     2                              <1>     ;---------------------------
     3                              <1>     ; スタックフレーム構築
     4                              <1>     ;---------------------------
     5 00000C0B 55                  <1>     push ebp
     6 00000C0C 89E5                <1>     mov ebp, esp
     7                              <1> 
     8                              <1>     ;---------------------------
     9                              <1>     ; レジスタの保存
    10                              <1>     ;---------------------------
    11 00000C0E 50                  <1>     push eax
    12 00000C0F 53                  <1>     push ebx
    13 00000C10 51                  <1>     push ecx
    14 00000C11 52                  <1>     push edx
    15 00000C12 56                  <1>     push esi
    16                              <1> 
    17                              <1>     ;-----------------------------------------
    18                              <1>     ; 基準となる位置をレジスタに保存
    19                              <1>     ;-----------------------------------------
    20 00000C13 8B7508              <1>     mov esi, [ebp + 8]
    21 00000C16 8B7D0C              <1>     mov edi, [ebp + 12]
    22                              <1> 
    23                              <1>     ;---------------------------
    24                              <1>     ; カラーバーを表示
    25                              <1>     ;---------------------------
    26 00000C19 B900000000          <1>     mov ecx, 0                      ; for (ECX = 0;
    27                              <1> .10L:
    28 00000C1E 83F910              <1>     cmp ecx, 16                     ;      ECX < 16;
    29 00000C21 732E                <1>     jae .10E                        ;
    30                              <1>                                     ;      ECX++)
    31                              <1>                                     ; {
    32 00000C23 89C8                <1>     mov eax, ecx                    ;   EAX = ECX;
    33 00000C25 83E001              <1>     and eax, 0x01                   ;   EAX &= 0x01;
    34 00000C28 C1E003              <1>     shl eax, 3                      ;   EAX *= 8; // 8文字分乗算
    35 00000C2B 01F0                <1>     add eax, esi                    ;   EAX += X;
    36                              <1> 
    37 00000C2D 89CB                <1>     mov ebx, ecx                    ;   EBX = ECX;
    38 00000C2F D1EB                <1>     shr ebx, 1                      ;   EBX /= 2
    39 00000C31 01FB                <1>     add ebx, edi                    ;   EBX += Y;
    40                              <1> 
    41 00000C33 89CA                <1>     mov edx, ecx                    ;   EDX = ECX;
    42 00000C35 D1E2                <1>     shl edx, 1                      ;   EDX /= 2;
    43 00000C37 8B92[640C0000]      <1>     mov edx, [.t0 + edx]            ;   EDX += Y;
    44                              <1> 
    45 00000C3D 68[5B0C0000]525350- <1>     cdecl draw_str, eax, ebx, edx, .s0 ; draw_str();
    45 00000C45 E883FFFFFF6683C410  <1>
    46                              <1> 
    47 00000C4E 41                  <1>     inc ecx                         ; // for (...ECX++)
    48 00000C4F EBCD                <1>     jmp .10L
    49                              <1> .10E:                               ; }
    50                              <1> 
    51                              <1>     ;-----------------------------------------
    52                              <1>     ; 【レジスタの復帰】
    53                              <1>     ;-----------------------------------------
    54 00000C51 5F                  <1>     pop edi
    55 00000C52 5E                  <1>     pop esi
    56 00000C53 5A                  <1>     pop edx
    57 00000C54 59                  <1>     pop ecx
    58 00000C55 5B                  <1>     pop ebx
    59 00000C56 58                  <1>     pop eax
    60                              <1> 
    61                              <1>     ;-----------------------------------------
    62                              <1>     ; 【スタックフレームの破棄】
    63                              <1>     ;-----------------------------------------
    64 00000C57 89EC                <1>     mov esp, ebp
    65 00000C59 5D                  <1>     pop ebp
    66                              <1> 
    67 00000C5A C3                  <1>     ret
    68                              <1> 
    69 00000C5B 202020202020202000  <1> .s0:    db '        ', 0
    70 00000C64 00000008            <1> .t0:    dw 0x0000, 0x0800
    71 00000C68 00010009            <1>         dw 0x0100, 0x0900
    72 00000C6C 0002000A            <1>         dw 0x0200, 0x0A00
    73 00000C70 0003000B            <1>         dw 0x0300, 0x0B00
    74 00000C74 0004000C            <1>         dw 0x0400, 0x0C00
    75 00000C78 0005000D            <1>         dw 0x0500, 0x0D00
    76 00000C7C 0006000E            <1>         dw 0x0600, 0x0E00
    77 00000C80 0007000F            <1>         dw 0x0700, 0x0F00
   165                                  %include "../modules/protect/draw_pixel.s"
     1                              <1> draw_pixel:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 00000C84 55                  <1>         push ebp
     6 00000C85 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;-----------------------------------------
     9                              <1>         ; 【レジスタの保存】
    10                              <1>         ;-----------------------------------------
    11 00000C87 50                  <1>         push eax
    12 00000C88 53                  <1>         push ebx
    13 00000C89 51                  <1>         push ecx
    14 00000C8A 57                  <1>         push edi
    15                              <1> 
    16                              <1>         ;-----------------------------------------
    17                              <1>         ; Y座標を80倍する(640/8)
    18                              <1>         ;-----------------------------------------
    19 00000C8B 8B7D0C              <1>         mov edi, [ebp + 12]
    20 00000C8E C1E704              <1>         shl edi, 4
    21 00000C91 8DBCBF00000A00      <1>         lea edi, [edi * 4 + edi + 0xA_0000]
    22                              <1> 
    23                              <1>         ;-----------------------------------------
    24                              <1>         ; X座標を1/8して加算
    25                              <1>         ;-----------------------------------------
    26 00000C98 8B5D08              <1>         mov ebx, [ebp + 8]
    27 00000C9B 89D9                <1>         mov ecx, ebx
    28 00000C9D C1EB03              <1>         shr ebx, 3
    29 00000CA0 01DF                <1>         add edi, ebx
    30                              <1> 
    31                              <1>         ;-----------------------------------------
    32                              <1>         ; X座標を8で割った余りからビット位置を計算
    33                              <1>         ; (0=0x80, 1=0x40, ..., 7=0x01)
    34                              <1>         ;-----------------------------------------
    35 00000CA2 83E107              <1>         and ecx, 0x07
    36 00000CA5 BB80000000          <1>         mov ebx, 0x80
    37 00000CAA D3EB                <1>         shr ebx, cl
    38                              <1> 
    39                              <1>         ;-----------------------------------------
    40                              <1>         ; 色指定
    41                              <1>         ;-----------------------------------------
    42 00000CAC 8B4D10              <1>         mov ecx, [ebp + 16]
    43                              <1> 
    44                              <1>         ;-----------------------------------------
    45                              <1>         ; プレーンごとに出力
    46                              <1>         ;-----------------------------------------
    47 00000CAF 6A03E83EFDFFFF6683- <1>         cdecl vga_set_read_plane, 0x03
    47 00000CB8 C404                <1>
    48 00000CBA 6A08E84CFDFFFF6683- <1>         cdecl vga_set_write_plane, 0x08
    48 00000CC3 C404                <1>
    49 00000CC5 516A085753E8AAFDFF- <1>         cdecl vram_bit_copy, ebx, edi, 0x08, ecx
    49 00000CCE FF6683C410          <1>
    50                              <1> 
    51 00000CD3 6A02E81AFDFFFF6683- <1>         cdecl vga_set_read_plane, 0x02
    51 00000CDC C404                <1>
    52 00000CDE 6A04E828FDFFFF6683- <1>         cdecl vga_set_write_plane, 0x04
    52 00000CE7 C404                <1>
    53 00000CE9 516A045753E886FDFF- <1>         cdecl vram_bit_copy, ebx, edi, 0x04, ecx
    53 00000CF2 FF6683C410          <1>
    54                              <1> 
    55 00000CF7 6A01E8F6FCFFFF6683- <1>         cdecl vga_set_read_plane, 0x01
    55 00000D00 C404                <1>
    56 00000D02 6A02E804FDFFFF6683- <1>         cdecl vga_set_write_plane, 0x02
    56 00000D0B C404                <1>
    57 00000D0D 516A025753E862FDFF- <1>         cdecl vram_bit_copy, ebx, edi, 0x02, ecx
    57 00000D16 FF6683C410          <1>
    58                              <1> 
    59 00000D1B 6A00E8D2FCFFFF6683- <1>         cdecl vga_set_read_plane, 0x00
    59 00000D24 C404                <1>
    60 00000D26 6A01E8E0FCFFFF6683- <1>         cdecl vga_set_write_plane, 0x01
    60 00000D2F C404                <1>
    61 00000D31 516A015753E83EFDFF- <1>         cdecl vram_bit_copy, ebx, edi, 0x01, ecx
    61 00000D3A FF6683C410          <1>
    62                              <1> 
    63                              <1>         ;-----------------------------------------
    64                              <1>         ; 【レジスタの復帰】
    65                              <1>         ;-----------------------------------------
    66 00000D3F 5F                  <1>         pop edi
    67 00000D40 59                  <1>         pop ecx
    68 00000D41 5B                  <1>         pop ebx
    69 00000D42 58                  <1>         pop eax
    70                              <1> 
    71                              <1>         ;-----------------------------------------
    72                              <1>         ; 【スタックフレームの破棄】
    73                              <1>         ;-----------------------------------------
    74 00000D43 89EC                <1>         mov esp, ebp
    75 00000D45 5D                  <1>         pop ebp
    76                              <1> 
    77 00000D46 C3                  <1>         ret
    78                              <1> 
    79 00000D47 202020202020202000  <1> .s0:    db '        ', 0
    80 00000D50 00000008            <1> .t0:    dw 0x0000, 0x0800
    81 00000D54 00010009            <1>         dw 0x0100, 0x0900
    82 00000D58 0002000A            <1>         dw 0x0200, 0x0A00
    83 00000D5C 0003000B            <1>         dw 0x0300, 0x0B00
    84 00000D60 0004000C            <1>         dw 0x0400, 0x0C00
    85 00000D64 0005000D            <1>         dw 0x0500, 0x0D00
    86 00000D68 0006000E            <1>         dw 0x0600, 0x0E00
    87 00000D6C 0007000F            <1>         dw 0x0700, 0x0F00
   166                                  %include "../modules/protect/draw_line.s"
     1                              <1> draw_line:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 00000D70 55                  <1>         push ebp
     6 00000D71 89E5                <1>         mov ebp, esp
     7                              <1> 
     8 00000D73 6A00                <1>         push dword 0
     9 00000D75 6A00                <1>         push dword 0
    10 00000D77 6A00                <1>         push dword 0
    11 00000D79 6A00                <1>         push dword 0
    12 00000D7B 6A00                <1>         push dword 0
    13 00000D7D 6A00                <1>         push dword 0
    14 00000D7F 6A00                <1>         push dword 0
    15                              <1> 
    16                              <1>         ;-----------------------------------------
    17                              <1>         ; 【レジスタの保存】
    18                              <1>         ;-----------------------------------------
    19 00000D81 50                  <1>         push eax
    20 00000D82 53                  <1>         push ebx
    21 00000D83 51                  <1>         push ecx
    22 00000D84 52                  <1>         push edx
    23 00000D85 56                  <1>         push esi
    24 00000D86 57                  <1>         push edi
    25                              <1> 
    26                              <1>         ;-----------------------------------------
    27                              <1>         ; 幅を計算(X軸)
    28                              <1>         ;-----------------------------------------
    29 00000D87 8B4508              <1>         mov eax, [ebp + 8]
    30 00000D8A 8B5D10              <1>         mov ebx, [ebp + 16]
    31 00000D8D 29C3                <1>         sub ebx, eax
    32 00000D8F 7D09                <1>         jge .10F
    33                              <1> 
    34 00000D91 F7DB                <1>         neg ebx
    35 00000D93 BEFFFFFFFF          <1>         mov esi, -1
    36 00000D98 EB05                <1>         jmp .10E
    37                              <1> .10F:
    38 00000D9A BE01000000          <1>         mov esi, 1
    39                              <1> .10E:
    40                              <1> 
    41                              <1>         ;-----------------------------------------
    42                              <1>         ; 高さを計算(Y軸)
    43                              <1>         ;-----------------------------------------
    44 00000D9F 8B4D0C              <1>         mov ecx, [ebp + 12]
    45 00000DA2 8B5514              <1>         mov edx, [ebp + 20]
    46 00000DA5 29CA                <1>         sub edx, ecx
    47 00000DA7 7D09                <1>         jge .20F
    48                              <1> 
    49 00000DA9 F7DA                <1>         neg edx
    50 00000DAB BFFFFFFFFF          <1>         mov edi, -1
    51 00000DB0 EB05                <1>         jmp .20E
    52                              <1> .20F:
    53 00000DB2 BF01000000          <1>         mov edi, 1
    54                              <1> .20E:
    55                              <1> 
    56                              <1>         ;-----------------------------------------
    57                              <1>         ; X軸
    58                              <1>         ;-----------------------------------------
    59 00000DB7 8945F8              <1>         mov [ebp - 8], eax
    60 00000DBA 895DF4              <1>         mov [ebp - 12], ebx
    61 00000DBD 8975F0              <1>         mov [ebp - 16], esi
    62                              <1> 
    63                              <1>         ;-----------------------------------------
    64                              <1>         ; Y軸
    65                              <1>         ;-----------------------------------------
    66 00000DC0 894DEC              <1>         mov [ebp - 20], ecx
    67 00000DC3 8955E8              <1>         mov [ebp - 24], edx
    68 00000DC6 897DE4              <1>         mov [ebp - 28], edi
    69                              <1> 
    70                              <1>         ;-----------------------------------------
    71                              <1>         ; 基準軸を決める
    72                              <1>         ;-----------------------------------------
    73 00000DC9 39D3                <1>         cmp ebx, edx
    74 00000DCB 7F08                <1>         jg .22F
    75                              <1> 
    76 00000DCD 8D75EC              <1>         lea esi, [ebp - 20]
    77 00000DD0 8D7DF8              <1>         lea edi, [ebp - 8]
    78                              <1> 
    79 00000DD3 EB06                <1>         jmp .22E
    80                              <1> .22F:
    81 00000DD5 8D75F8              <1>         lea esi, [ebp - 8]
    82 00000DD8 8D7DEC              <1>         lea edi, [ebp - 20]
    83                              <1> .22E:
    84                              <1> 
    85                              <1>         ;-----------------------------------------
    86                              <1>         ; 繰り返し回数(基準軸のドット数)
    87                              <1>         ;-----------------------------------------
    88 00000DDB 8B4EFC              <1>         mov ecx, [esi - 4]
    89 00000DDE 83F900              <1>         cmp ecx, 0
    90 00000DE1 7505                <1>         jnz .30E
    91 00000DE3 B901000000          <1>         mov ecx, 1
    92                              <1> .30E:
    93                              <1> 
    94                              <1>         ;-----------------------------------------
    95                              <1>         ; 線を描画
    96                              <1>         ;-----------------------------------------
    97                              <1> .50L:
    98                              <1> 
    99                              <1> %ifdef  USE_SYSTEM_CALL
   100 00000DE8 89C8                <1>         mov eax, ecx
   101                              <1> 
   102 00000DEA 8B5D18              <1>         mov ebx, [ebp + 24]
   103 00000DED 8B4DF8              <1>         mov ecx, [ebp - 8]
   104 00000DF0 8B55EC              <1>         mov edx, [ebp - 20]
   105 00000DF3 CD82                <1>         int 0x82
   106                              <1> 
   107 00000DF5 89C1                <1>         mov ecx, eax
   108                              <1> %else
   109                              <1>         cdecl draw_pixel, dword [ebp - 8], dword [ebp - 20], dword [ebp + 24]
   110                              <1> %endif
   111                              <1> 
   112 00000DF7 8B46F8              <1>         mov eax, [esi - 8]
   113 00000DFA 0106                <1>         add [esi - 0], eax
   114                              <1> 
   115 00000DFC 8B45FC              <1>         mov eax, [ebp - 4]
   116 00000DFF 0347FC              <1>         add eax, [edi - 4]
   117 00000E02 8B5EFC              <1>         mov ebx, [esi - 4]
   118                              <1> 
   119 00000E05 39D8                <1>         cmp eax, ebx
   120 00000E07 7C07                <1>         jl .52E
   121 00000E09 29D8                <1>         sub eax, ebx
   122                              <1> 
   123 00000E0B 8B5FF8              <1>         mov ebx, [edi - 8]
   124 00000E0E 011F                <1>         add [edi - 0], ebx
   125                              <1> .52E:
   126 00000E10 8945FC              <1>         mov [ebp - 4], eax
   127                              <1> 
   128 00000E13 E2D3                <1>         loop .50L
   129                              <1> .50E:
   130                              <1> 
   131                              <1>         ;-----------------------------------------
   132                              <1>         ; 【レジスタの復帰】
   133                              <1>         ;-----------------------------------------
   134 00000E15 5F                  <1>         pop edi
   135 00000E16 5E                  <1>         pop esi
   136 00000E17 5A                  <1>         pop edx
   137 00000E18 59                  <1>         pop ecx
   138 00000E19 5B                  <1>         pop ebx
   139 00000E1A 58                  <1>         pop eax
   140                              <1> 
   141                              <1>         ;-----------------------------------------
   142                              <1>         ; 【スタックフレームの破棄】
   143                              <1>         ;-----------------------------------------
   144 00000E1B 89EC                <1>         mov esp, ebp
   145 00000E1D 5D                  <1>         pop ebp
   146                              <1> 
   147 00000E1E C3                  <1>         ret
   148                              <1> 
   149 00000E1F 202020202020202000  <1> .s0:    db '        ', 0
   150 00000E28 00000008            <1> .t0:    dw 0x0000, 0x0800
   151 00000E2C 00010009            <1>         dw 0x0100, 0x0900
   152 00000E30 0002000A            <1>         dw 0x0200, 0x0A00
   153 00000E34 0003000B            <1>         dw 0x0300, 0x0B00
   154 00000E38 0004000C            <1>         dw 0x0400, 0x0C00
   155 00000E3C 0005000D            <1>         dw 0x0500, 0x0D00
   156 00000E40 0006000E            <1>         dw 0x0600, 0x0E00
   157 00000E44 0007000F            <1>         dw 0x0700, 0x0F00
   167                                  %include "../modules/protect/draw_rect.s"
     1                              <1> draw_rect:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 00000E48 55                  <1>         push ebp
     6 00000E49 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;-----------------------------------------
     9                              <1>         ; 【レジスタの保存】
    10                              <1>         ;-----------------------------------------
    11 00000E4B 50                  <1>         push eax
    12 00000E4C 53                  <1>         push ebx
    13 00000E4D 51                  <1>         push ecx
    14 00000E4E 52                  <1>         push edx
    15 00000E4F 56                  <1>         push esi
    16                              <1> 
    17                              <1>         ;-----------------------------------------
    18                              <1>         ; 引数の取得
    19                              <1>         ;-----------------------------------------
    20 00000E50 8B4508              <1>         mov eax, [ebp + 8]
    21 00000E53 8B5D0C              <1>         mov ebx, [ebp + 12]
    22 00000E56 8B4D10              <1>         mov ecx, [ebp + 16]
    23 00000E59 8B5514              <1>         mov edx, [ebp + 20]
    24 00000E5C 8B7518              <1>         mov esi, [ebp + 24]
    25                              <1> 
    26                              <1>         ;-----------------------------------------
    27                              <1>         ; 座標軸の大小を確定
    28                              <1>         ;-----------------------------------------
    29 00000E5F 39C8                <1>         cmp eax, ecx
    30 00000E61 7C01                <1>         jl .10E
    31 00000E63 91                  <1>         xchg eax, ecx
    32                              <1> .10E:
    33 00000E64 39D3                <1>         cmp ebx, edx
    34 00000E66 7C02                <1>         jl .20E
    35 00000E68 87DA                <1>         xchg ebx, edx
    36                              <1> .20E:
    37                              <1> 
    38                              <1>         ;-----------------------------------------
    39                              <1>         ; 矩形を描画
    40                              <1>         ;-----------------------------------------
    41 00000E6A 5653515350E8FCFEFF- <1>         cdecl draw_line, eax, ebx, ecx, ebx, esi
    41 00000E73 FF6683C414          <1>
    42 00000E78 5652505350E8EEFEFF- <1>         cdecl draw_line, eax, ebx, eax, edx, esi
    42 00000E81 FF6683C414          <1>
    43                              <1> 
    44 00000E86 4A                  <1>         dec edx
    45 00000E87 5652515250E8DFFEFF- <1>         cdecl draw_line, eax, edx, ecx, edx, esi
    45 00000E90 FF6683C414          <1>
    46 00000E95 42                  <1>         inc edx
    47                              <1> 
    48 00000E96 49                  <1>         dec ecx
    49 00000E97 5652515351E8CFFEFF- <1>         cdecl draw_line, ecx, ebx, ecx, edx, esi
    49 00000EA0 FF6683C414          <1>
    50                              <1> 
    51                              <1>         ;-----------------------------------------
    52                              <1>         ; 【レジスタの復帰】
    53                              <1>         ;-----------------------------------------
    54 00000EA5 5E                  <1>         pop esi
    55 00000EA6 5A                  <1>         pop edx
    56 00000EA7 59                  <1>         pop ecx
    57 00000EA8 5B                  <1>         pop ebx
    58 00000EA9 58                  <1>         pop eax
    59                              <1> 
    60                              <1>         ;-----------------------------------------
    61                              <1>         ; 【スタックフレームの破棄】
    62                              <1>         ;-----------------------------------------
    63 00000EAA 89EC                <1>         mov esp, ebp
    64 00000EAC 5D                  <1>         pop ebp
    65                              <1> 
    66 00000EAD C3                  <1>         ret
   168                                  %include "../modules/protect/itoa.s"
     1                              <1> itoa:
     2                              <1>         ;---------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;---------------------------------------
     5 00000EAE 55                  <1>         push ebp
     6 00000EAF 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;---------------------------------------
     9                              <1>         ; 【レジスタの保存】
    10                              <1>         ;---------------------------------------
    11 00000EB1 50                  <1>         push eax
    12 00000EB2 53                  <1>         push ebx
    13 00000EB3 51                  <1>         push ecx
    14 00000EB4 52                  <1>         push edx
    15 00000EB5 56                  <1>         push esi
    16 00000EB6 57                  <1>         push edi
    17                              <1> 
    18                              <1>         ;---------------------------------------
    19                              <1>         ; 引数を取得
    20                              <1>         ;---------------------------------------
    21 00000EB7 8B4508              <1>         mov eax, [ebp + 8]
    22 00000EBA 8B750C              <1>         mov esi, [ebp + 12]
    23 00000EBD 8B4D10              <1>         mov ecx, [ebp + 16]
    24                              <1> 
    25 00000EC0 89F7                <1>         mov edi, esi
    26 00000EC2 01CF                <1>         add edi, ecx
    27 00000EC4 4F                  <1>         dec edi
    28                              <1> 
    29 00000EC5 8B5D18              <1>         mov ebx, [ebp + 24]
    30                              <1> 
    31                              <1>         ;---------------------------------------
    32                              <1>         ; 符号付き判定
    33                              <1>         ;---------------------------------------
    34 00000EC8 F7C301000000        <1>         test ebx, 0b0001
    35                              <1> .10Q:
    36 00000ECE 7408                <1>         je .10E
    37 00000ED0 83F800              <1>         cmp eax, 0
    38                              <1> .12Q:
    39 00000ED3 7D03                <1>         jge .12E
    40 00000ED5 83CB02              <1>         or ebx, 0b0010
    41                              <1> .12E:
    42                              <1> .10E:
    43                              <1> 
    44                              <1>         ;---------------------------------------
    45                              <1>         ; 符号出力判定
    46                              <1>         ;---------------------------------------
    47 00000ED8 F7C302000000        <1>         test ebx, 0b0010
    48                              <1> .20Q:
    49 00000EDE 7410                <1>         je .20E
    50 00000EE0 83F800              <1>         cmp eax, 0
    51                              <1> .22Q:
    52 00000EE3 7D07                <1>         jge .22F
    53 00000EE5 F7D8                <1>         neg eax
    54 00000EE7 C6062D              <1>         mov [esi], byte '-'
    55 00000EEA EB03                <1>         jmp .22E
    56                              <1> .22F:
    57 00000EEC C6062B              <1>         mov [esi], byte '+'
    58                              <1> .22E:
    59 00000EEF 49                  <1>         dec ecx
    60                              <1> .20E:
    61                              <1> 
    62                              <1>         ;---------------------------------------
    63                              <1>         ; ASCII 変換
    64                              <1>         ;---------------------------------------
    65 00000EF0 8B5D14              <1>         mov ebx, [ebp + 20]
    66                              <1> .30L:
    67 00000EF3 BA00000000          <1>         mov edx, 0
    68 00000EF8 F7F3                <1>         div ebx
    69                              <1> 
    70 00000EFA 89D6                <1>         mov esi, edx
    71 00000EFC 8A96[270F0000]      <1>         mov dl, byte [.ascii + esi]
    72                              <1> 
    73 00000F02 8817                <1>         mov [edi], dl
    74 00000F04 4F                  <1>         dec edi
    75                              <1> 
    76 00000F05 83F800              <1>         cmp eax, 0
    77 00000F08 E0E9                <1>         loopnz .30L
    78                              <1> .30E:
    79                              <1> 
    80                              <1>         ;---------------------------------------
    81                              <1>         ; 空欄を埋める
    82                              <1>         ;---------------------------------------
    83 00000F0A 83F900              <1>         cmp ecx, 0
    84                              <1> .40Q:
    85 00000F0D 740E                <1>         je .40E
    86 00000F0F B020                <1>         mov al, ' '
    87 00000F11 66837D1804          <1>         cmp [ebp + 24], word 0b0100
    88                              <1> .42Q:
    89 00000F16 7502                <1>         jne .42E
    90 00000F18 B030                <1>         mov al, '0'
    91                              <1> .42E:
    92 00000F1A FD                  <1>         std
    93 00000F1B F3AA                <1>         rep stosb
    94                              <1> .40E:
    95                              <1> 
    96                              <1>         ;---------------------------------------
    97                              <1>         ; 【レジスタの復帰】
    98                              <1>         ;---------------------------------------
    99 00000F1D 5F                  <1>         pop edi
   100 00000F1E 5E                  <1>         pop esi
   101 00000F1F 5A                  <1>         pop edx
   102 00000F20 59                  <1>         pop ecx
   103 00000F21 5B                  <1>         pop ebx
   104 00000F22 58                  <1>         pop eax
   105                              <1> 
   106                              <1>         ;---------------------------------------
   107                              <1>         ; 【スタックフレームの破棄】
   108                              <1>         ;---------------------------------------
   109 00000F23 89EC                <1>         mov esp, ebp
   110 00000F25 5D                  <1>         pop ebp
   111                              <1> 
   112 00000F26 C3                  <1>         ret
   113                              <1> 
   114 00000F27 303132333435363738- <1> .ascii db "0123456789ABCDEF"
   114 00000F30 39414243444546      <1>
   169                                  %include "../modules/protect/rtc.s"
     1                              <1> rtc_get_time:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 00000F37 55                  <1>         push ebp
     6 00000F38 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;-----------------------------------------
     9                              <1>         ; 【レジスタの保存】
    10                              <1>         ;-----------------------------------------
    11 00000F3A 53                  <1>         push ebx
    12                              <1> 
    13                              <1>         ;-----------------------------------------
    14                              <1>         ; RTCの読み込み
    15                              <1>         ;-----------------------------------------
    16 00000F3B B00A                <1>         mov al, 0x0A
    17 00000F3D E670                <1>         out 0x70, al
    18 00000F3F E471                <1>         in al, 0x71
    19 00000F41 A880                <1>         test al, 0x80
    20 00000F43 7407                <1>         je .10F
    21 00000F45 B801000000          <1>         mov eax, 1
    22 00000F4A EB27                <1>         jmp .10E
    23                              <1> .10F:
    24 00000F4C B004                <1>         mov al, 0x04
    25 00000F4E E670                <1>         out 0x70, al
    26 00000F50 E471                <1>         in al, 0x71
    27                              <1> 
    28 00000F52 C1E008              <1>         shl eax, 8
    29                              <1> 
    30 00000F55 B002                <1>         mov al, 0x02
    31 00000F57 E670                <1>         out 0x70, al
    32 00000F59 E471                <1>         in al, 0x71
    33                              <1> 
    34 00000F5B C1E008              <1>         shl eax, 8
    35                              <1> 
    36 00000F5E B000                <1>         mov al, 0x00
    37 00000F60 E670                <1>         out 0x70, al
    38 00000F62 E471                <1>         in al, 0x71
    39                              <1> 
    40 00000F64 25FFFFFF00          <1>         and eax, 0x00_FF_FF_FF
    41                              <1> 
    42 00000F69 8B5D08              <1>         mov ebx, [ebp + 8]
    43 00000F6C 8903                <1>         mov [ebx], eax
    44                              <1> 
    45 00000F6E B800000000          <1>         mov eax, 0
    46                              <1> .10E:
    47                              <1> 
    48                              <1>         ;-----------------------------------------
    49                              <1>         ; 【レジスタの復帰】
    50                              <1>         ;-----------------------------------------
    51 00000F73 5B                  <1>         pop ebx
    52                              <1> 
    53                              <1>         ;-----------------------------------------
    54                              <1>         ; 【スタックフレームの破棄】
    55                              <1>         ;-----------------------------------------
    56 00000F74 89EC                <1>         mov esp, ebp
    57 00000F76 5D                  <1>         pop ebp
    58                              <1> 
    59 00000F77 C3                  <1>         ret
   170                                  %include "../modules/protect/draw_time.s"
     1                              <1> draw_time:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 00000F78 55                  <1>         push ebp
     6 00000F79 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;-----------------------------------------
     9                              <1>         ; 【レジスタの保存】
    10                              <1>         ;-----------------------------------------
    11 00000F7B 50                  <1>         push eax
    12 00000F7C 53                  <1>         push ebx
    13                              <1> 
    14                              <1>         ;-----------------------------------------
    15                              <1>         ; 時刻の表示
    16                              <1>         ;-----------------------------------------
    17 00000F7D 8B4514              <1>         mov eax, [ebp + 20]
    18                              <1> 
    19 00000F80 0FB6D8              <1>         movzx ebx, al
    20 00000F83 6A046A106A0268-     <1>         cdecl itoa, ebx, .sec, 2, 16, 0b0100
    20 00000F8A [EA0F0000]53E81AFF- <1>
    20 00000F92 FFFF6683C414        <1>
    21                              <1> 
    22 00000F98 88E3                <1>         mov bl, ah
    23 00000F9A 6A046A106A0268-     <1>         cdecl itoa, ebx, .min, 2, 16, 0b0100
    23 00000FA1 [E70F0000]53E803FF- <1>
    23 00000FA9 FFFF6683C414        <1>
    24                              <1> 
    25 00000FAF C1E810              <1>         shr eax, 16
    26 00000FB2 6A046A106A0268-     <1>         cdecl itoa, eax, .hour, 2, 16, 0b0100
    26 00000FB9 [E40F0000]50E8EBFE- <1>
    26 00000FC1 FFFF6683C414        <1>
    27                              <1> 
    28 00000FC7 68[E40F0000]FF7510- <1>         cdecl draw_str, dword[ebp + 8], dword[ebp + 12], dword[ebp + 16], .hour
    28 00000FCF FF750CFF7508E8F3FB- <1>
    28 00000FD8 FFFF6683C410        <1>
    29                              <1> 
    30                              <1>         ;-----------------------------------------
    31                              <1>         ; 【レジスタの復帰】
    32                              <1>         ;-----------------------------------------
    33 00000FDE 5B                  <1>         pop ebx
    34 00000FDF 58                  <1>         pop eax
    35                              <1> 
    36                              <1>         ;-----------------------------------------
    37                              <1>         ; 【スタックフレームの破棄】
    38                              <1>         ;-----------------------------------------
    39 00000FE0 89EC                <1>         mov esp, ebp
    40 00000FE2 5D                  <1>         pop ebp
    41                              <1> 
    42 00000FE3 C3                  <1>         ret
    43                              <1> 
    44 00000FE4 5A5A3A              <1> .hour:  db "ZZ:"
    45 00000FE7 5A5A3A              <1> .min:   db "ZZ:"
    46 00000FEA 5A5A00              <1> .sec:   db "ZZ", 0
   171                                  %include "../modules/protect/interrupt.s"
     1                              <1> ;***********************************************************
     2                              <1> ;  割り込みベクタの初期化
     3                              <1> ;***********************************************************
     4 00000FED 90<rept>            <1> ALIGN 4
     5 00000FF0 FF07                <1> IDTR:   dw 8 * 256 - 1
     6 00000FF2 00001000            <1>         dd VECT_BASE
     7                              <1> 
     8                              <1> ;***********************************************************
     9                              <1> ;  割り込みテーブルを初期化
    10                              <1> ;***********************************************************
    11                              <1> init_int:
    12                              <1>         ;-----------------------------------------
    13                              <1>         ; 【レジスタの保存】
    14                              <1>         ;-----------------------------------------
    15 00000FF6 50                  <1>         push eax
    16 00000FF7 53                  <1>         push ebx
    17 00000FF8 51                  <1>         push ecx
    18 00000FF9 57                  <1>         push edi
    19                              <1> 
    20                              <1>         ;-----------------------------------------
    21                              <1>         ; すべての割り込みにデフォルト処理を設定
    22                              <1>         ;-----------------------------------------
    23 00000FFA 8D05[27100000]      <1>         lea eax, [int_default]
    24 00001000 BB008E0800          <1>         mov ebx, 0x0008_8E00
    25 00001005 6693                <1>         xchg ax, bx
    26                              <1> 
    27 00001007 B900010000          <1>         mov ecx, 256
    28 0000100C BF00001000          <1>         mov edi, VECT_BASE
    29                              <1> 
    30                              <1> .10L:
    31 00001011 891F                <1>         mov [edi + 0], ebx
    32 00001013 894704              <1>         mov [edi + 4], eax
    33 00001016 83C708              <1>         add edi, 8
    34 00001019 E2F6                <1>         loop .10L
    35                              <1> 
    36                              <1>         ;-----------------------------------------
    37                              <1>         ; 割り込みディスクリプタの設定
    38                              <1>         ;-----------------------------------------
    39 0000101B 0F011D[F00F0000]    <1>         lidt [IDTR]
    40                              <1> 
    41                              <1>         ;-----------------------------------------
    42                              <1>         ; 【レジスタの復帰】
    43                              <1>         ;-----------------------------------------
    44 00001022 5F                  <1>         pop edi
    45 00001023 59                  <1>         pop ecx
    46 00001024 5B                  <1>         pop ebx
    47 00001025 58                  <1>         pop eax
    48                              <1> 
    49 00001026 C3                  <1>         ret
    50                              <1> 
    51                              <1> int_default:
    52 00001027 9C                  <1>         pushf                                           ; // EFLAGS(IF == 0)
    53 00001028 0E                  <1>         push cs
    54 00001029 68[45100000]        <1>         push int_stop
    55                              <1> 
    56 0000102E B8[34100000]        <1>         mov eax, .s0
    57 00001033 CF                  <1>         iret
    58                              <1> 
    59 00001034 203C2020202053544F- <1> .s0:    db " <    STOP    > ", 0
    59 0000103D 50202020203E2000    <1>
    60                              <1> 
    61                              <1> int_stop:
    62 00001045 FB                  <1>         sti
    63                              <1>         
    64                              <1>         ;-----------------------------------------
    65                              <1>         ; EAXで示される文字列を表示
    66                              <1>         ;-----------------------------------------
    67 00001046 50680F0600006A0F6A- <1>         cdecl draw_str, 25, 15, 0x060F, eax
    67 0000104F 19E878FBFFFF6683C4- <1>
    67 00001058 10                  <1>
    68                              <1> 
    69                              <1>         ;-----------------------------------------
    70                              <1>         ; スタックのデータを文字列に変換
    71                              <1>         ;-----------------------------------------
    72 00001059 8B0424              <1>         mov eax, [esp + 0]
    73 0000105C 6A046A106A0868-     <1>         cdecl itoa, eax, .p1, 8, 16, 0b0100
    73 00001063 [21110000]50E841FE- <1>
    73 0000106B FFFF6683C414        <1>
    74                              <1> 
    75 00001071 8B442404            <1>         mov eax, [esp + 4]
    76 00001075 6A046A106A0868-     <1>         cdecl itoa, eax, .p2, 8, 16, 0b0100
    76 0000107C [32110000]50E828FE- <1>
    76 00001084 FFFF6683C414        <1>
    77                              <1> 
    78 0000108A 8B442408            <1>         mov eax, [esp + 8]
    79 0000108E 6A046A106A0868-     <1>         cdecl itoa, eax, .p3, 8, 16, 0b0100
    79 00001095 [43110000]50E80FFE- <1>
    79 0000109D FFFF6683C414        <1>
    80                              <1> 
    81 000010A3 8B44240C            <1>         mov eax, [esp +12]
    82 000010A7 6A046A106A0868-     <1>         cdecl itoa, eax, .p4, 8, 16, 0b0100
    82 000010AE [54110000]50E8F6FD- <1>
    82 000010B6 FFFF6683C414        <1>
    83                              <1> 
    84                              <1>         ;-----------------------------------------
    85                              <1>         ; 文字列の表示
    86                              <1>         ;-----------------------------------------
    87 000010BC 68[1A110000]68040F- <1>         cdecl draw_str, 25, 16, 0x0F04, .s1
    87 000010C4 00006A106A19E8FEFA- <1>
    87 000010CD FFFF6683C410        <1>
    88 000010D3 68[2B110000]68040F- <1>         cdecl draw_str, 25, 17, 0x0F04, .s2
    88 000010DB 00006A116A19E8E7FA- <1>
    88 000010E4 FFFF6683C410        <1>
    89 000010EA 68[3C110000]68040F- <1>         cdecl draw_str, 25, 18, 0x0F04, .s3
    89 000010F2 00006A126A19E8D0FA- <1>
    89 000010FB FFFF6683C410        <1>
    90 00001101 68[4D110000]68040F- <1>         cdecl draw_str, 25, 19, 0x0F04, .s4
    90 00001109 00006A136A19E8B9FA- <1>
    90 00001112 FFFF6683C410        <1>
    91                              <1> 
    92                              <1>         ;-----------------------------------------
    93                              <1>         ; 無限ループ
    94                              <1>         ;-----------------------------------------
    95 00001118 EBFE                <1>         jmp $
    96                              <1> 
    97 0000111A 4553502B20303A      <1> .s1:    db "ESP+ 0:"
    98 00001121 5F5F5F5F5F5F5F5F20- <1> .p1:    db "________ ", 0
    98 0000112A 00                  <1>
    99 0000112B 2020202B20343A      <1> .s2:    db "   + 4:"
   100 00001132 5F5F5F5F5F5F5F5F20- <1> .p2:    db "________ ", 0
   100 0000113B 00                  <1>
   101 0000113C 2020202B20383A      <1> .s3:    db "   + 8:"
   102 00001143 5F5F5F5F5F5F5F5F20- <1> .p3:    db "________ ", 0
   102 0000114C 00                  <1>
   103 0000114D 2020202B31323A      <1> .s4:    db "   +12:"
   104 00001154 5F5F5F5F5F5F5F5F20- <1> .p4:    db "________ ", 0
   104 0000115D 00                  <1>
   105                              <1> 
   106                              <1> int_zero_div:
   107 0000115E 9C                  <1>         pushf
   108 0000115F 0E                  <1>         push cs
   109 00001160 68[45100000]        <1>         push int_stop
   110                              <1> 
   111 00001165 B8[6B110000]        <1>         mov eax, .s0
   112 0000116A CF                  <1>         iret
   113                              <1> 
   114 0000116B 203C20205A45524F20- <1> .s0:    db " <  ZERO DIV  > ", 0
   114 00001174 44495620203E2000    <1>
   172                                  %include "../modules/protect/pic.s"
     1                              <1> init_pic:
     2                              <1>         ;------------------------------
     3                              <1>         ; レジスタの保存
     4                              <1>         ;------------------------------
     5 0000117C 50                  <1>         push eax
     6                              <1> 
     7                              <1>         ;------------------------------
     8                              <1>         ; マスタの設定
     9                              <1>         ;------------------------------
    10                              <1>         outp 0x20, 0x11                     ; // MASTER.ICW1 = 0x11;
    10 0000117D B011                <2>  mov al, %2
    10 0000117F E620                <2>  out %1, al
    11                              <1>         outp 0x21, 0x20                     ; // MASTER.ICW2 = 0x20;
    11 00001181 B020                <2>  mov al, %2
    11 00001183 E621                <2>  out %1, al
    12                              <1>         outp 0x21, 0x04                     ; // MASTER.ICW3 = 0x04;
    12 00001185 B004                <2>  mov al, %2
    12 00001187 E621                <2>  out %1, al
    13                              <1>         outp 0x21, 0x05                     ; // MASTER.ICW4 = 0x05;
    13 00001189 B005                <2>  mov al, %2
    13 0000118B E621                <2>  out %1, al
    14                              <1>         outp 0x21, 0xFF                     ; // マスタ割り込みマスク
    14 0000118D B0FF                <2>  mov al, %2
    14 0000118F E621                <2>  out %1, al
    15                              <1> 
    16                              <1>         ;------------------------------
    17                              <1>         ; スレーブの設定
    18                              <1>         ;------------------------------
    19                              <1>         outp 0xA0, 0x11                     ; // SLAVE.ICW1 = 0x11;
    19 00001191 B011                <2>  mov al, %2
    19 00001193 E6A0                <2>  out %1, al
    20                              <1>         outp 0xA1, 0x28                     ; // SLAVE.ICW1 = 0x28;
    20 00001195 B028                <2>  mov al, %2
    20 00001197 E6A1                <2>  out %1, al
    21                              <1>         outp 0xA1, 0x02                     ; // SLAVE.ICW1 = 0x02;
    21 00001199 B002                <2>  mov al, %2
    21 0000119B E6A1                <2>  out %1, al
    22                              <1>         outp 0xA1, 0x01                     ; // SLAVE.ICW1 = 0x01;
    22 0000119D B001                <2>  mov al, %2
    22 0000119F E6A1                <2>  out %1, al
    23                              <1>         outp 0xA1, 0xFF                     ; // スレーブ割り込みマスク
    23 000011A1 B0FF                <2>  mov al, %2
    23 000011A3 E6A1                <2>  out %1, al
    24                              <1> 
    25                              <1>         ;------------------------------
    26                              <1>         ; レジスタの復帰
    27                              <1>         ;------------------------------
    28 000011A5 58                  <1>         pop eax
    29                              <1> 
    30 000011A6 C3                  <1>         ret
   173                                  %include "../modules/protect/int_rtc.s"
     1                              <1> int_rtc:
     2                              <1>         ;-----------------------------
     3                              <1>         ; レジスタの保存
     4                              <1>         ;-----------------------------
     5 000011A7 60                  <1>         pusha
     6 000011A8 1E                  <1>         push ds
     7 000011A9 06                  <1>         push es
     8                              <1> 
     9                              <1>         ;-----------------------------
    10                              <1>         ; データ用セグメントセレクタの設定
    11                              <1>         ;-----------------------------
    12 000011AA 66B81000            <1>         mov ax, 0x0010
    13 000011AE 8ED8                <1>         mov ds, ax
    14 000011B0 8EC0                <1>         mov es, ax
    15                              <1> 
    16                              <1>         ;-----------------------------
    17                              <1>         ; RTCから時刻を取得
    18                              <1>         ;-----------------------------
    19 000011B2 68[54020000]E87BFD- <1>         cdecl rtc_get_time, RTC_TIME        ; EAX = get_time(&RTC_TIME);
    19 000011BA FFFF6683C404        <1>
    20                              <1> 
    21                              <1>         ;-----------------------------
    22                              <1>         ; RTCの割り込み要因を取得
    23                              <1>         ;-----------------------------
    24                              <1>         outp 0x70, 0x0C                     ; outp(0x70, 0x0C); // レジスタCを選択
    24 000011C0 B00C                <2>  mov al, %2
    24 000011C2 E670                <2>  out %1, al
    25 000011C4 E471                <1>         in al, 0x71                         ; AL = port(0x71);
    26                              <1> 
    27                              <1>         ;-----------------------------
    28                              <1>         ; 割り込みフラグをクリア(EOI)
    29                              <1>         ;-----------------------------
    30 000011C6 B020                <1>         mov al, 0x20                        ; AL = EOIコマンド;
    31 000011C8 E6A0                <1>         out 0xA0, al                        ; outp(0xA0, AL); // スレーブPIC
    32 000011CA E620                <1>         out 0x20, al                        ; outp(0x20, AL); // マスタPIC
    33                              <1> 
    34                              <1>         ;-----------------------------
    35                              <1>         ; レジスタの復帰
    36                              <1>         ;-----------------------------
    37 000011CC 07                  <1>         pop es
    38 000011CD 1F                  <1>         pop ds
    39 000011CE 61                  <1>         popa
    40                              <1> 
    41 000011CF CF                  <1>         iret                                ; 割り込み処理の終了
    42                              <1> 
    43                              <1> rtc_int_en:
    44                              <1>         ;-----------------------------
    45                              <1>         ; スタックフレームの構築
    46                              <1>         ;-----------------------------
    47 000011D0 55                  <1>         push ebp
    48 000011D1 89E5                <1>         mov ebp, esp
    49                              <1> 
    50                              <1>         ;-----------------------------
    51                              <1>         ; レジスタの保存
    52                              <1>         ;-----------------------------
    53 000011D3 50                  <1>         push eax
    54                              <1> 
    55                              <1>         ;-----------------------------
    56                              <1>         ; 割り込み許可設定
    57                              <1>         ;-----------------------------
    58                              <1>         outp 0x70, 0x0B                     ; outp(0x70, AL); // レジスタBを選択
    58 000011D4 B00B                <2>  mov al, %2
    58 000011D6 E670                <2>  out %1, al
    59                              <1> 
    60 000011D8 E471                <1>         in al, 0x71                         ; AL = port(0x71); // レジスタBの
    61 000011DA 0A4508              <1>         or al, [ebp + 8]                    ; AL |= ビット; // 指定されたビットをセット
    62                              <1> 
    63 000011DD E671                <1>         out 0x71, al                        ; outp(0x71, AL); // レジスタBに書き込み
    64                              <1> 
    65                              <1>         ;-----------------------------
    66                              <1>         ; レジスタの復帰
    67                              <1>         ;-----------------------------
    68 000011DF 58                  <1>         pop eax
    69                              <1> 
    70                              <1>         ;-----------------------------
    71                              <1>         ; スタックフレームの破棄
    72                              <1>         ;-----------------------------
    73 000011E0 89EC                <1>         mov esp, ebp
    74 000011E2 5D                  <1>         pop ebp
    75                              <1> 
    76 000011E3 C3                  <1>         ret
   174                                  %include "../modules/protect/int_keyboard.s"
     1                              <1> int_keyboard:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【レジスタの保存】
     4                              <1>         ;-----------------------------------------
     5 000011E4 60                  <1>         pusha
     6 000011E5 1E                  <1>         push ds
     7 000011E6 06                  <1>         push es
     8                              <1> 
     9                              <1>         ;-----------------------------------------
    10                              <1>         ; データ用セグメントの設定
    11                              <1>         ;-----------------------------------------
    12 000011E7 66B81000            <1>         mov ax, 0x0010
    13 000011EB 8ED8                <1>         mov ds, ax
    14 000011ED 8EC0                <1>         mov es, ax
    15                              <1> 
    16                              <1>         ;-----------------------------------------
    17                              <1>         ; KBCのバッファ読み取り
    18                              <1>         ;-----------------------------------------
    19 000011EF E460                <1>         in al, 0x60
    20                              <1> 
    21                              <1>         ;-----------------------------------------
    22                              <1>         ; キーコードの保存
    23                              <1>         ;-----------------------------------------
    24 000011F1 5068[08120000]E854- <1>         cdecl ring_wr, _KEY_BUFF, eax
    24 000011F9 0000006683C408      <1>
    25                              <1> 
    26                              <1>         ;-----------------------------------------
    27                              <1>         ; 割り込み終了コマンド送信
    28                              <1>         ;-----------------------------------------
    29                              <1>         outp 0x20, 0x20
    29 00001200 B020                <2>  mov al, %2
    29 00001202 E620                <2>  out %1, al
    30                              <1> 
    31                              <1>         ;-----------------------------------------
    32                              <1>         ; 【レジスタの復帰】
    33                              <1>         ;-----------------------------------------
    34 00001204 07                  <1>         pop es
    35 00001205 1F                  <1>         pop ds
    36 00001206 61                  <1>         popa
    37                              <1> 
    38 00001207 CF                  <1>         iret
    39                              <1> 
    40                              <1> ALIGN 4, db 0
    41 00001208 00<rept>            <1> _KEY_BUFF: times ring_buff_size db 0
   175                                  %include "../modules/protect/ring_buff.s"
     1                              <1> ring_rd:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 00001220 55                  <1>         push ebp
     6 00001221 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;-----------------------------------------
     9                              <1>         ; 【レジスタの保存】
    10                              <1>         ;-----------------------------------------
    11 00001223 53                  <1>         push ebx
    12 00001224 56                  <1>         push esi
    13 00001225 57                  <1>         push edi
    14                              <1> 
    15                              <1>         ;-----------------------------------------
    16                              <1>         ; 引数を取得
    17                              <1>         ;-----------------------------------------
    18 00001226 8B7508              <1>         mov esi, [ebp + 8]
    19 00001229 8B7D0C              <1>         mov edi, [ebp + 12]
    20                              <1> 
    21                              <1>         ;-----------------------------------------
    22                              <1>         ; 読み込み位置を確認
    23                              <1>         ;-----------------------------------------
    24 0000122C B800000000          <1>         mov eax, 0
    25 00001231 8B1E                <1>         mov ebx, [esi + ring_buff.rp]
    26 00001233 3B5E04              <1>         cmp ebx, [esi + ring_buff.wp]
    27 00001236 7411                <1>         je .10E
    28                              <1> 
    29 00001238 8A441E08            <1>         mov al, [esi + ring_buff.item + ebx]
    30                              <1> 
    31 0000123C 8807                <1>         mov [edi], al
    32                              <1> 
    33 0000123E 43                  <1>         inc ebx
    34 0000123F 83E30F              <1>         and ebx, RING_INDEX_MASK
    35 00001242 891E                <1>         mov [esi + ring_buff.rp], ebx
    36                              <1> 
    37 00001244 B801000000          <1>         mov eax, 1
    38                              <1> .10E:
    39                              <1> 
    40                              <1>         ;-----------------------------------------
    41                              <1>         ; 【レジスタの復帰】
    42                              <1>         ;-----------------------------------------
    43 00001249 5F                  <1>         pop edi
    44 0000124A 5E                  <1>         pop esi
    45 0000124B 5B                  <1>         pop ebx
    46                              <1> 
    47                              <1>         ;-----------------------------------------
    48                              <1>         ; 【スタックフレームの破棄】
    49                              <1>         ;-----------------------------------------
    50 0000124C 89EC                <1>         mov esp, ebp
    51 0000124E 5D                  <1>         pop ebp
    52                              <1> 
    53 0000124F C3                  <1>         ret
    54                              <1> 
    55                              <1> ring_wr:
    56                              <1>         ;-----------------------------------------
    57                              <1>         ; 【スタックフレームの構築】
    58                              <1>         ;-----------------------------------------
    59 00001250 55                  <1>         push ebp
    60 00001251 89E5                <1>         mov ebp, esp
    61                              <1> 
    62                              <1>         ;-----------------------------------------
    63                              <1>         ; 【レジスタの保存】
    64                              <1>         ;-----------------------------------------
    65 00001253 53                  <1>         push ebx
    66 00001254 51                  <1>         push ecx
    67 00001255 56                  <1>         push esi
    68                              <1> 
    69                              <1>         ;-----------------------------------------
    70                              <1>         ; 引数を取得
    71                              <1>         ;-----------------------------------------
    72 00001256 8B7508              <1>         mov esi, [ebp + 8]
    73                              <1> 
    74                              <1>         ;-----------------------------------------
    75                              <1>         ; 書き込み位置を確認
    76                              <1>         ;-----------------------------------------
    77 00001259 B800000000          <1>         mov eax, 0
    78 0000125E 8B5E04              <1>         mov ebx, [esi + ring_buff.wp]
    79 00001261 89D9                <1>         mov ecx, ebx
    80 00001263 41                  <1>         inc ecx
    81 00001264 83E10F              <1>         and ecx, RING_INDEX_MASK
    82                              <1> 
    83 00001267 3B0E                <1>         cmp ecx, [esi + ring_buff.rp]
    84 00001269 740F                <1>         je .10E
    85                              <1> 
    86 0000126B 8A450C              <1>         mov al, [ebp +12]
    87                              <1> 
    88 0000126E 88441E08            <1>         mov [esi + ring_buff.item + ebx], al
    89 00001272 894E04              <1>         mov [esi + ring_buff.wp], ecx
    90 00001275 B801000000          <1>         mov eax, 1
    91                              <1> .10E:
    92                              <1> 
    93                              <1>         ;-----------------------------------------
    94                              <1>         ; 【レジスタの復帰】
    95                              <1>         ;-----------------------------------------
    96 0000127A 5E                  <1>         pop esi
    97 0000127B 59                  <1>         pop ecx
    98 0000127C 5B                  <1>         pop ebx
    99                              <1> 
   100                              <1>         ;-----------------------------------------
   101                              <1>         ; 【スタックフレームの破棄】
   102                              <1>         ;-----------------------------------------
   103 0000127D 89EC                <1>         mov esp, ebp
   104 0000127F 5D                  <1>         pop ebp
   105                              <1> 
   106 00001280 C3                  <1>         ret
   107                              <1> 
   108                              <1> draw_key:
   109                              <1>         ;-----------------------------------------
   110                              <1>         ; 【スタックフレームの構築】
   111                              <1>         ;-----------------------------------------
   112 00001281 55                  <1>         push ebp
   113 00001282 89E5                <1>         mov ebp, esp
   114                              <1> 
   115                              <1>         ;-----------------------------------------
   116                              <1>         ; 【レジスタの保存】
   117                              <1>         ;-----------------------------------------
   118 00001284 60                  <1>         pusha
   119                              <1> 
   120                              <1>         ;-----------------------------------------
   121                              <1>         ; 引数を取得
   122                              <1>         ;-----------------------------------------
   123 00001285 8B5508              <1>         mov edx, [ebp + 8]
   124 00001288 8B7D0C              <1>         mov edi, [ebp + 12]
   125 0000128B 8B7510              <1>         mov esi, [ebp + 16]
   126                              <1> 
   127                              <1>         ;-----------------------------------------
   128                              <1>         ; リングバッファの情報を取得
   129                              <1>         ;-----------------------------------------
   130 0000128E 8B1E                <1>         mov ebx, [esi + ring_buff.rp]
   131 00001290 8D7608              <1>         lea esi, [esi + ring_buff.item]
   132 00001293 B910000000          <1>         mov ecx, RING_ITEM_SIZE
   133                              <1> 
   134                              <1>         ;-----------------------------------------
   135                              <1>         ; 表示
   136                              <1>         ;-----------------------------------------
   137                              <1> .10L:
   138 00001298 4B                  <1>         dec ebx
   139 00001299 83E30F              <1>         and ebx, RING_INDEX_MASK
   140 0000129C 8A041E              <1>         mov al, [esi + ebx]
   141                              <1> 
   142 0000129F 6A046A106A0268-     <1>         cdecl itoa, eax, .tmp, 2, 16, 0b0100
   142 000012A6 [D0120000]50E8FEFB- <1>
   142 000012AE FFFF6683C414        <1>
   143 000012B4 68[D0120000]6A0257- <1>         cdecl draw_str, edx, edi, 0x02, .tmp
   143 000012BC 52E80BF9FFFF6683C4- <1>
   143 000012C5 10                  <1>
   144                              <1> 
   145 000012C6 83C203              <1>         add edx, 3
   146                              <1> 
   147 000012C9 E2CD                <1>         loop .10L
   148                              <1> .10E:
   149                              <1> 
   150                              <1>         ;-----------------------------------------
   151                              <1>         ; 【レジスタの復帰】
   152                              <1>         ;-----------------------------------------
   153 000012CB 61                  <1>         popa
   154                              <1> 
   155                              <1>         ;-----------------------------------------
   156                              <1>         ; 【スタックフレームの破棄】
   157                              <1>         ;-----------------------------------------
   158 000012CC 89EC                <1>         mov esp, ebp
   159 000012CE 5D                  <1>         pop ebp
   160                              <1> 
   161 000012CF C3                  <1>         ret
   162                              <1> 
   163 000012D0 2D2D2000            <1> .tmp:   db "-- ", 0
   176                                  %include "../modules/protect/timer.s"
     1                              <1> int_en_timer0:
     2                              <1>         ;-------------------------
     3                              <1>         ; レジスタの保存
     4                              <1>         ;-------------------------
     5 000012D4 50                  <1>         push eax
     6                              <1> 
     7                              <1>         ;-------------------------
     8                              <1>         ; タイマー
     9                              <1>         ;-------------------------
    10                              <1>         outp 0x43, 0b_00_11_010_0
    10 000012D5 B034                <2>  mov al, %2
    10 000012D7 E643                <2>  out %1, al
    11                              <1>         outp 0x40, 0x9C
    11 000012D9 B09C                <2>  mov al, %2
    11 000012DB E640                <2>  out %1, al
    12                              <1>         outp 0x40, 0x2E
    12 000012DD B02E                <2>  mov al, %2
    12 000012DF E640                <2>  out %1, al
    13                              <1> 
    14                              <1>         ;-------------------------
    15                              <1>         ; レジスタの復帰
    16                              <1>         ;-------------------------
    17 000012E1 58                  <1>         pop eax
    18                              <1> 
    19 000012E2 C3                  <1>         ret
   177                                  %include "../modules/protect/draw_rotation_bar.s"
     1                              <1> draw_rotation_bar:
     2                              <1>         ;-----------------------------
     3                              <1>         ; レジスタの保存
     4                              <1>         ;-----------------------------
     5 000012E3 50                  <1>         push eax
     6                              <1> 
     7                              <1>         ;-----------------------------
     8                              <1>         ; 周期動作
     9                              <1>         ;-----------------------------
    10 000012E4 A1[F8060000]        <1>         mov eax, [TIMER_COUNT]
    11 000012E9 C1E804              <1>         shr eax, 4
    12 000012EC 3B05[14130000]      <1>         cmp eax, [.index]
    13 000012F2 741E                <1>         je .10E
    14                              <1> 
    15 000012F4 A3[14130000]        <1>         mov [.index], eax
    16 000012F9 83E003              <1>         and eax, 0x03
    17                              <1> 
    18 000012FC 8A80[18130000]      <1>         mov al, [.table + eax]
    19 00001302 506A0F6A1D6A00E899- <1>         cdecl draw_char, 0, 29, 0x000F, eax
    19 0000130B F7FFFF6683C410      <1>
    20                              <1> .10E:
    21                              <1> 
    22                              <1>         ;-----------------------------
    23                              <1>         ; レジスタの復帰
    24                              <1>         ;-----------------------------
    25 00001312 58                  <1>         pop eax
    26                              <1> 
    27 00001313 C3                  <1>         ret
    28                              <1> 
    29                              <1> ALIGN 4, db 0
    30 00001314 00000000            <1> .index: dd 0
    31 00001318 7C2F2D5C            <1> .table: db "|/-\"
   178                                  %include "../modules/protect/call_gate.s"
     1                              <1> call_gate:
     2                              <1>         ;-------------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;-------------------------------------
     5                              <1>                                                     ; ---------|-----
     6                              <1>                                                     ; EBP + 12 | X
     7                              <1>                                                     ; EBP + 16 | Y
     8                              <1>                                                     ; EBP + 20 | 色
     9                              <1>                                                     ; EBP + 24 | 文字
    10                              <1>                                                     ;----------------
    11                              <1>                                                     ; EBP +  8 | CS  コードセグメント
    12 0000131C 55                  <1>         push ebp                                    ; EBP +  4 | EIP 戻り値
    13 0000131D 89E5                <1>         mov ebp, esp                                ; EBP +  0 | EBP 元の値
    14                              <1>                                                     ;----------------
    15                              <1>         ;-------------------------------------
    16                              <1>         ; レジスタの保存
    17                              <1>         ;-------------------------------------
    18 0000131F 60                  <1>         pusha
    19 00001320 1E                  <1>         push ds
    20 00001321 06                  <1>         push es
    21                              <1> 
    22                              <1>         ;-------------------------------------
    23                              <1>         ; データ用セグメントの設定
    24                              <1>         ;-------------------------------------
    25 00001322 66B81000            <1>         mov ax, 0x0010
    26 00001326 8ED8                <1>         mov ds, ax
    27 00001328 8EC0                <1>         mov es, ax
    28                              <1> 
    29                              <1>         ;-------------------------------------
    30                              <1>         ; 文字を表示
    31                              <1>         ;-------------------------------------
    32 0000132A 8B450C              <1>         mov eax, dword [ebp + 12]                   ; EAX = X
    33 0000132D 8B5D10              <1>         mov ebx, dword [ebp + 16]                   ; EBX = Y
    34 00001330 8B4D14              <1>         mov ecx, dword [ebp + 20]                   ; ECX = 色
    35 00001333 8B5518              <1>         mov edx, dword [ebp + 24]                   ; EDX = 文字
    36 00001336 52515350E88EF8FFFF- <1>         cdecl draw_str, eax, ebx, ecx, edx          ; draw_str()
    36 0000133F 6683C410            <1>
    37                              <1> 
    38                              <1>         ;-------------------------------------
    39                              <1>         ; レジスタの復帰
    40                              <1>         ;-------------------------------------
    41 00001343 07                  <1>         pop es
    42 00001344 1F                  <1>         pop ds
    43 00001345 61                  <1>         popa
    44                              <1> 
    45                              <1>         ;-------------------------------------
    46                              <1>         ; スタックフレームの破棄
    47                              <1>         ;-------------------------------------
    48 00001346 89EC                <1>         mov esp, ebp
    49 00001348 5D                  <1>         pop ebp
    50                              <1> 
    51 00001349 CA1000              <1>         retf 4 * 4
   179                                  %include "../modules/protect/trap_gate.s"
     1                              <1> trap_gate_81:
     2                              <1>         ;--------------------------------
     3                              <1>         ; 1文字出力
     4                              <1>         ;--------------------------------
     5 0000134C 50535251E852F7FFFF- <1>         cdecl draw_char, ecx, edx, ebx, eax     ; // 1文字出力
     5 00001355 6683C410            <1>
     6                              <1> 
     7 00001359 CF                  <1>         iret
     8                              <1> 
     9                              <1> trap_gate_82:
    10                              <1>         ;--------------------------------
    11                              <1>         ; 点を描画
    12                              <1>         ;--------------------------------
    13 0000135A 535251E822F9FFFF66- <1>         cdecl draw_pixel, ecx, edx, ebx         ; // 点の描画
    13 00001363 83C40C              <1>
    14                              <1> 
    15 00001366 CF                  <1>         iret
   180                                  %include "../modules/protect/test_and_set.s"
     1                              <1> test_and_set:
     2                              <1>         ;-------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;-------------------------------
     5                              <1>                                             ; EBP + 8 | ローカル変数のアドレス
     6                              <1>                                             ;---------|--------------------
     7 00001367 55                  <1>         push ebp                            ; EBP + 4 | EIP
     8 00001368 89E5                <1>         mov ebp, esp                        ; EBP + 0 | EBP
     9                              <1>                                             ;---------| EBP
    10                              <1>         ;-------------------------------
    11                              <1>         ; レジスタの保存
    12                              <1>         ;-------------------------------
    13 0000136A 50                  <1>         push eax
    14 0000136B 53                  <1>         push ebx
    15                              <1> 
    16                              <1>         ;-------------------------------
    17                              <1>         ; テストアンドセット
    18                              <1>         ;-------------------------------
    19 0000136C B800000000          <1>         mov eax, 0                          ; local = 0;
    20 00001371 8B5D08              <1>         mov ebx, [ebp + 8]                  ; global = アドレス;
    21                              <1> 
    22                              <1> .10L:                                       ; for (;;)
    23                              <1>                                             ; {
    24 00001374 F00FAB03            <1>         lock bts [ebx], eax                 ;   CF = TEST_AND_SET(IN_USE, 1);
    25 00001378 7307                <1>         jnc .10E                            ;   if (0 == CF)
    26                              <1>                                             ;       break;
    27                              <1>                                             ;
    28                              <1> .12L:                                       ;   for (;;)
    29                              <1>                                             ;   {
    30 0000137A 0FA303              <1>         bt [ebx], eax                       ;       CF = TEST(IN_USE, 1);
    31 0000137D 72FB                <1>         jc .12L                             ;       if (0 == CF)
    32                              <1>                                             ;           break;
    33 0000137F EBF3                <1>         jmp .10L                            ;   }
    34                              <1> .10E:                                       ; }
    35                              <1> 
    36                              <1>         ;--------------------------------
    37                              <1>         ; レジスタの復帰
    38                              <1>         ;--------------------------------
    39 00001381 5B                  <1>         pop ebx
    40 00001382 58                  <1>         pop eax
    41                              <1> 
    42                              <1>         ;--------------------------------
    43                              <1>         ; スタックフレームの破棄
    44                              <1>         ;--------------------------------
    45 00001383 89EC                <1>         mov esp, ebp
    46 00001385 5D                  <1>         pop ebp
    47                              <1> 
    48 00001386 C3                  <1>         ret
   181                                  %include "../modules/protect/int_nm.s"
     1                              <1> int_nm:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【レジスタの保存】
     4                              <1>         ;-----------------------------------------
     5 00001387 60                  <1>         pusha
     6 00001388 1E                  <1>         push ds
     7 00001389 06                  <1>         push es
     8                              <1> 
     9                              <1>         ;-----------------------------------------
    10                              <1>         ; カーネル用セレクタを設定
    11                              <1>         ;-----------------------------------------
    12 0000138A 66B81000            <1>         mov ax, DS_KERNEL
    13 0000138E 8ED8                <1>         mov ds, ax
    14 00001390 8EC0                <1>         mov es, ax
    15                              <1> 
    16                              <1>         ;-----------------------------------------
    17                              <1>         ; タスクスイッチフラグをクリア
    18                              <1>         ;-----------------------------------------
    19 00001392 0F06                <1>         clts
    20                              <1> 
    21                              <1>         ;-----------------------------------------
    22                              <1>         ; 前回/今回FPUを使用するタスク
    23                              <1>         ;-----------------------------------------
    24 00001394 8B3D[E0130000]      <1>         mov edi, [.last_tss]
    25 0000139A 0F00CE              <1>         str esi
    26 0000139D 83E6F8              <1>         and esi, ~0x0007
    27                              <1> 
    28                              <1>         ;-----------------------------------------
    29                              <1>         ; FPUの初回利用をチェック
    30                              <1>         ;-----------------------------------------
    31 000013A0 83FF00              <1>         cmp edi, 0
    32 000013A3 7420                <1>         je .10F
    33                              <1> 
    34 000013A5 39FE                <1>         cmp esi, edi
    35 000013A7 741A                <1>         je .12E
    36                              <1> 
    37 000013A9 FA                  <1>         cli
    38                              <1> 
    39                              <1>         ;-----------------------------------------
    40                              <1>         ; 前回のFPUコンテキストを保存
    41                              <1>         ;-----------------------------------------
    42 000013AA 89FB                <1>         mov ebx, edi
    43 000013AC E833000000          <1>         call get_tss_base
    44 000013B1 E841000000          <1>         call save_fpu_context
    45                              <1> 
    46                              <1>         ;-----------------------------------------
    47                              <1>         ; 今回のFPUコンテキストを復帰
    48                              <1>         ;-----------------------------------------
    49 000013B6 89F3                <1>         mov ebx, esi
    50 000013B8 E827000000          <1>         call get_tss_base
    51 000013BD E843000000          <1>         call load_fpu_context
    52                              <1> 
    53 000013C2 FB                  <1>         sti
    54                              <1> .12E:
    55 000013C3 EB0E                <1>         jmp .10E
    56                              <1> .10F:
    57 000013C5 FA                  <1>         cli
    58                              <1> 
    59                              <1>         ;-----------------------------------------
    60                              <1>         ; 今回のFPUコンテキストを復帰
    61                              <1>         ;-----------------------------------------
    62 000013C6 89F3                <1>         mov ebx, esi
    63 000013C8 E817000000          <1>         call get_tss_base
    64 000013CD E833000000          <1>         call load_fpu_context
    65                              <1> 
    66 000013D2 FB                  <1>         sti
    67                              <1> .10E:
    68 000013D3 8935[E0130000]      <1>         mov [.last_tss], esi
    69                              <1> 
    70                              <1>         ;-----------------------------------------
    71                              <1>         ; 【レジスタの復帰】
    72                              <1>         ;-----------------------------------------
    73 000013D9 07                  <1>         pop es
    74 000013DA 1F                  <1>         pop ds
    75 000013DB 61                  <1>         popa
    76                              <1> 
    77 000013DC CF                  <1>         iret
    78                              <1> 
    79 000013DD 00<rept>            <1> ALIGN 4, db 0
    80 000013E0 00000000            <1> .last_tss: dd 0
    81                              <1> 
    82                              <1> get_tss_base:
    83 000013E4 8B83[BA050000]      <1>         mov eax, [GDT + ebx + 2]
    84 000013EA C1E008              <1>         shl eax, 8
    85 000013ED 8A83[BF050000]      <1>         mov al,  [GDT + ebx + 7]
    86 000013F3 C1C808              <1>         ror eax, 8
    87                              <1> 
    88 000013F6 C3                  <1>         ret
    89                              <1> 
    90                              <1> save_fpu_context:
    91 000013F7 DD7068              <1>         fnsave [eax + 104]
    92 000013FA C780D4000000010000- <1>         mov [eax + 104 + 108], dword 1
    92 00001403 00                  <1>
    93                              <1> 
    94 00001404 C3                  <1>         ret
    95                              <1> 
    96                              <1> load_fpu_context:
    97 00001405 83B8D400000000      <1>         cmp [eax + 104 + 108], dword 0
    98 0000140C 7504                <1>         jne .10F
    99 0000140E DBE3                <1>         fninit
   100 00001410 EB03                <1>         jmp .10E
   101                              <1> .10F:
   102 00001412 DD6068              <1>         frstor [eax + 104]
   103                              <1> .10E:
   104 00001415 C3                  <1>         ret
   182                                  %include "../modules/protect/wait_tick.s"
     1                              <1> wait_tick:
     2                              <1>         ;------------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;------------------------------------
     5                              <1>                                                 ;-----------
     6                              <1>                                                 ; EBP + 8 | ウェイト
     7                              <1>                                                 ;-----------
     8 00001416 55                  <1>         push EBP                                ; EBP + 4 | EIP(戻り番地)
     9 00001417 89E5                <1>         mov ebp, esp                            ; EBP + 0 | EBP(元の値)
    10                              <1>                                                 ;---------|----------
    11                              <1> 
    12                              <1>         ;-----------------------------------
    13                              <1>         ; レジスタの保存
    14                              <1>         ;-----------------------------------
    15 00001419 50                  <1>         push eax
    16 0000141A 51                  <1>         push ecx
    17                              <1> 
    18                              <1>         ;-----------------------------------
    19                              <1>         ; ウェイト
    20                              <1>         ;-----------------------------------
    21 0000141B 8B4D08              <1>         mov ecx, [ebp + 8]                      ; ECX = ウェイト回数
    22 0000141E A1[F8060000]        <1>         mov eax, [TIMER_COUNT]                  ; EAX = TIMER;
    23                              <1>                                                 ; do
    24                              <1>                                                 ; {
    25 00001423 3905[F8060000]      <1> .10L:   cmp [TIMER_COUNT], eax                  ;   while(TIMER != EAX)
    26 00001429 74F8                <1>         je .10L
    27 0000142B 40                  <1>         inc eax                                 ;       EAX++;
    28 0000142C E2F5                <1>         loop .10L                               ; } while (--ECX);
    29                              <1> 
    30                              <1>         ;-----------------------------------
    31                              <1>         ; レジスタの復帰
    32                              <1>         ;-----------------------------------
    33 0000142E 59                  <1>         pop ecx
    34 0000142F 58                  <1>         pop eax
    35                              <1> 
    36                              <1>         ;-----------------------------------
    37                              <1>         ; スタックフレーム
    38                              <1>         ;-----------------------------------
    39 00001430 89EC                <1>         mov esp, ebp
    40 00001432 5D                  <1>         pop ebp
    41                              <1> 
    42 00001433 C3                  <1>         ret
   183                                  %include "../modules/protect/memcpy.s"
     1                              <1> memcpy:
     2                              <1>     ; スタックフレームの構築
     3 00001434 55                  <1>     push ebp
     4 00001435 89E5                <1>     mov ebp, esp
     5                              <1> 
     6                              <1>     ; レジスタの保存
     7 00001437 51                  <1>     push ecx
     8 00001438 56                  <1>     push esi
     9 00001439 57                  <1>     push edi
    10                              <1> 
    11                              <1>     ; バイト単位でのコピー
    12 0000143A FC                  <1>     cld
    13 0000143B 8B7D08              <1>     mov edi, [ebp + 8]
    14 0000143E 8B750C              <1>     mov esi, [ebp + 12]
    15 00001441 8B4D10              <1>     mov ecx, [ebp + 16]
    16                              <1> 
    17 00001444 F3A4                <1>     rep movsb
    18                              <1> 
    19                              <1>     ; レジスタの復帰
    20 00001446 5F                  <1>     pop edi
    21 00001447 5E                  <1>     pop esi
    22 00001448 59                  <1>     pop ecx
    23                              <1> 
    24                              <1>     ; スタックフレームの破棄
    25 00001449 89EC                <1>     mov esp, ebp
    26 0000144B 5D                  <1>     pop ebp
    27                              <1> 
    28 0000144C C3                  <1>     ret
   184                                  
   185                                  ;***********************************************************
   186                                  ;  パディング
   187                                  ;***********************************************************
   188 0000144D 00<rept>                        times KERNEL_SIZE - ($ - $$) db 0
