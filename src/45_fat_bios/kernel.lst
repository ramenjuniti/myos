     1                                  ;***********************************************************
     2                                  ;  マクロ
     3                                  ;***********************************************************
     4                                  %define USE_SYSTEM_CALL
     5                                  %define USE_TEST_AND_SET
     6                                  
     7                                  %include "../include/define.s"
     1                              <1> BOOT_SIZE           equ (1024 * 8)                      ; ブートコードサイズ
     2                              <1> KERNEL_SIZE         equ (1024 * 8)                      ; カーネルサイズ
     3                              <1> 
     4                              <1> BOOT_LOAD           equ 0x7C00                          ; ブートプログラムのロード位置
     5                              <1> BOOT_END            equ (BOOT_LOAD + BOOT_SIZE)
     6                              <1> 
     7                              <1> SECT_SIZE           equ (512)                           ; セクタサイズ
     8                              <1> 
     9                              <1> BOOT_SECT           equ (BOOT_SIZE / SECT_SIZE)         ; ブートプログラムのセクタ数
    10                              <1> KERNEL_SECT         equ (KERNEL_SIZE / SECT_SIZE)
    11                              <1> 
    12                              <1> E820_RECORD_SIZE    equ 20
    13                              <1> 
    14                              <1> KERNEL_LOAD         equ 0x0010_1000
    15                              <1> 
    16                              <1> VECT_BASE           equ 0x0010_0000
    17                              <1> 
    18                              <1> STACK_BASE          equ 0x0010_3000                     ; タスク用スタックエリア
    19                              <1> STACK_SIZE          equ 1024                            ; スタックサイズ
    20                              <1> 
    21                              <1> SP_TASK_0           equ STACK_BASE + (STACK_SIZE * 1)
    22                              <1> SP_TASK_1           equ STACK_BASE + (STACK_SIZE * 2)
    23                              <1> SP_TASK_2           equ STACK_BASE + (STACK_SIZE * 3)
    24                              <1> SP_TASK_3           equ STACK_BASE + (STACK_SIZE * 4)
    25                              <1> SP_TASK_4           equ STACK_BASE + (STACK_SIZE * 5)
    26                              <1> SP_TASK_5           equ STACK_BASE + (STACK_SIZE * 6)
    27                              <1> SP_TASK_6           equ STACK_BASE + (STACK_SIZE * 7)
    28                              <1> 
    29                              <1> CR3_BASE            equ 0x0010_5000                     ; ページ変換テーブル：タスク３用
    30                              <1> 
    31                              <1> PARAM_TASK_4        equ 0x0010_8000
    32                              <1> PARAM_TASK_5        equ 0x0010_9000
    33                              <1> PARAM_TASK_6        equ 0x0010_A000
    34                              <1> 
    35                              <1> CR3_TASK_4          equ 0x0020_0000
    36                              <1> CR3_TASK_5          equ 0x0020_2000
    37                              <1> CR3_TASK_6          equ 0x0020_4000
    38                              <1> 
    39                              <1> FAT_SIZE            equ (1024 * 128)
    40                              <1> ROOT_SIZE           equ (1024 * 16)
    41                              <1> 
    42                              <1> FAT1_START          equ (KERNEL_SIZE)
    43                              <1> FAT2_START          equ (FAT1_START + FAT_SIZE)
    44                              <1> ROOT_START          equ (FAT2_START + FAT_SIZE)
    45                              <1> FILE_START          equ (ROOT_START + ROOT_SIZE)
    46                              <1> 
    47                              <1> ATTR_VOLUME_ID      equ 0x08
    48                              <1> ATTR_ARCHIVE        equ 0x20
     8                                  %include "../include/macro.s"
     1                              <1> %macro cdecl 1-*.nolist
     2                              <1> 
     3                              <1>     %rep %0 - 1
     4                              <1>         push %{-1:-1}
     5                              <1>         %rotate - 1
     6                              <1>     %endrep
     7                              <1>     %rotate - 1
     8                              <1> 
     9                              <1>         call %1
    10                              <1> 
    11                              <1>     %if 1 < %0
    12                              <1>         add sp, (__BITS__ >> 3) * (%0 - 1)
    13                              <1>     %endif
    14                              <1> 
    15                              <1> %endmacro
    16                              <1> 
    17                              <1> %macro set_vect 1-*.nolist
    18                              <1>         push eax
    19                              <1>         push edi
    20                              <1> 
    21                              <1>         mov edi, VECT_BASE + (%1 * 8)
    22                              <1>         mov eax, %2
    23                              <1> 
    24                              <1> 	%if 3 == %0
    25                              <1> 		mov [edi + 4], %3
    26                              <1> 	%endif
    27                              <1> 
    28                              <1>         mov [edi + 0], ax
    29                              <1>         shr eax, 16
    30                              <1>         mov [edi + 6], ax
    31                              <1> 
    32                              <1>         pop edi
    33                              <1>         pop eax
    34                              <1> %endmacro
    35                              <1> 
    36                              <1> %macro outp 2
    37                              <1>         mov al, %2
    38                              <1>         out %1, al
    39                              <1> %endmacro
    40                              <1> 
    41                              <1> %macro set_desc 2-*
    42                              <1>         push eax
    43                              <1>         push edi
    44                              <1> 
    45                              <1>         mov edi, %1             ; ディスクリプタアドレス
    46                              <1>         mov eax, %2             ; ベースアドレス
    47                              <1> 
    48                              <1>     %if 3 == %0
    49                              <1>         mov [edi + 0], %3       ; リミット
    50                              <1>     %endif
    51                              <1> 
    52                              <1>         mov [edi + 2], ax       ; ベース([15: 0])
    53                              <1>         shr eax, 16
    54                              <1>         mov [edi + 4], al       ; ベース([23:16])
    55                              <1>         mov [edi + 7], ah       ; ベース([31:24])
    56                              <1> 
    57                              <1>         pop edi
    58                              <1>         pop eax
    59                              <1> %endmacro
    60                              <1> 
    61                              <1> %macro set_gate 2-*
    62                              <1>         push eax
    63                              <1>         push edi
    64                              <1> 
    65                              <1>         mov edi, %1             ; ディスクリプタアドレス
    66                              <1>         mov eax, %2             ; ベースアドレス
    67                              <1> 
    68                              <1>         mov [edi + 0], ax       ; ベース([15: 0])
    69                              <1>         shr eax, 16
    70                              <1>         mov [edi + 6], ax       ; ベース([31:16])
    71                              <1> 
    72                              <1>         pop edi
    73                              <1>         pop eax
    74                              <1> %endmacro
    75                              <1> 
    76                              <1> struc drive
    77 00000000 <res 00000002>      <1>     .no resw 1      ; ドライブ番号
    78 00000002 <res 00000002>      <1>     .cyln resw 1    ; シリンダ
    79 00000004 <res 00000002>      <1>     .head resw 1    ; ヘッド
    80 00000006 <res 00000002>      <1>     .sect resw 1    ; セクタ
    81                              <1> endstruc
    82                              <1> 
    83                              <1> %define RING_ITEM_SIZE (1 << 4)
    84                              <1> %define RING_INDEX_MASK (RING_ITEM_SIZE - 1)
    85                              <1> 
    86                              <1> struc ring_buff
    87 00000000 <res 00000004>      <1>     .rp resd 1                  ; RP:読み込み位置
    88 00000004 <res 00000004>      <1>     .wp resd 1                  ; WP:書き込み位置　
    89 00000008 <res 00000010>      <1>     .item resb RING_ITEM_SIZE   ; バッファ
    90                              <1> endstruc
    91                              <1> 
    92                              <1> struc rose
    93 00000000 <res 00000004>      <1>     .x0 resd 1
    94 00000004 <res 00000004>      <1>     .y0 resd 1
    95 00000008 <res 00000004>      <1>     .x1 resd 1
    96 0000000C <res 00000004>      <1>     .y1 resd 1
    97                              <1> 
    98 00000010 <res 00000004>      <1>     .n resd 1
    99 00000014 <res 00000004>      <1>     .d resd 1
   100                              <1> 
   101 00000018 <res 00000004>      <1>     .color_x resd 1
   102 0000001C <res 00000004>      <1>     .color_y resd 1
   103 00000020 <res 00000004>      <1>     .color_z resd 1
   104 00000024 <res 00000004>      <1>     .color_s resd 1
   105 00000028 <res 00000004>      <1>     .color_f resd 1
   106 0000002C <res 00000004>      <1>     .color_b resd 1
   107                              <1> 
   108 00000030 <res 00000010>      <1>     .title resb 16
   109                              <1> endstruc
     9                                  
    10                                          ORG KERNEL_LOAD
    11                                  
    12                                  [BITS 32]
    13                                  ;***********************************************************
    14                                  ;  エントリポイント
    15                                  ;***********************************************************
    16                                  kernel:
    17                                          ;------------------------------------------
    18                                          ; フォントアドレスを取得
    19                                          ;------------------------------------------
    20 00000000 BE007E0000                      mov esi, BOOT_LOAD + SECT_SIZE
    21 00000005 0FB706                          movzx eax, word[esi + 0]
    22 00000008 0FB75E02                        movzx ebx, word[esi + 2]
    23 0000000C C1E004                          shl eax, 4
    24 0000000F 01D8                            add eax, ebx
    25 00000011 A3[CC020000]                    mov [FONT_ADR], eax
    26                                  
    27                                          ;------------------------------------------
    28                                          ; TSSディスクリプタの設定
    29                                          ;------------------------------------------
    30                                          set_desc GDT.tss_0, TSS_0
    30 00000016 50                  <1>  push eax
    30 00000017 57                  <1>  push edi
    30                              <1> 
    30 00000018 BF[EC080000]        <1>  mov edi, %1
    30 0000001D B8[D4020000]        <1>  mov eax, %2
    30                              <1> 
    30                              <1>  %if 3 == %0
    30                              <1>  mov [edi + 0], %3
    30                              <1>  %endif
    30                              <1> 
    30 00000022 66894702            <1>  mov [edi + 2], ax
    30 00000026 C1E810              <1>  shr eax, 16
    30 00000029 884704              <1>  mov [edi + 4], al
    30 0000002C 886707              <1>  mov [edi + 7], ah
    30                              <1> 
    30 0000002F 5F                  <1>  pop edi
    30 00000030 58                  <1>  pop eax
    31                                          set_desc GDT.tss_1, TSS_1
    31 00000031 50                  <1>  push eax
    31 00000032 57                  <1>  push edi
    31                              <1> 
    31 00000033 BF[F4080000]        <1>  mov edi, %1
    31 00000038 B8[AC030000]        <1>  mov eax, %2
    31                              <1> 
    31                              <1>  %if 3 == %0
    31                              <1>  mov [edi + 0], %3
    31                              <1>  %endif
    31                              <1> 
    31 0000003D 66894702            <1>  mov [edi + 2], ax
    31 00000041 C1E810              <1>  shr eax, 16
    31 00000044 884704              <1>  mov [edi + 4], al
    31 00000047 886707              <1>  mov [edi + 7], ah
    31                              <1> 
    31 0000004A 5F                  <1>  pop edi
    31 0000004B 58                  <1>  pop eax
    32                                          set_desc GDT.tss_2, TSS_2
    32 0000004C 50                  <1>  push eax
    32 0000004D 57                  <1>  push edi
    32                              <1> 
    32 0000004E BF[FC080000]        <1>  mov edi, %1
    32 00000053 B8[84040000]        <1>  mov eax, %2
    32                              <1> 
    32                              <1>  %if 3 == %0
    32                              <1>  mov [edi + 0], %3
    32                              <1>  %endif
    32                              <1> 
    32 00000058 66894702            <1>  mov [edi + 2], ax
    32 0000005C C1E810              <1>  shr eax, 16
    32 0000005F 884704              <1>  mov [edi + 4], al
    32 00000062 886707              <1>  mov [edi + 7], ah
    32                              <1> 
    32 00000065 5F                  <1>  pop edi
    32 00000066 58                  <1>  pop eax
    33                                          set_desc GDT.tss_3, TSS_3
    33 00000067 50                  <1>  push eax
    33 00000068 57                  <1>  push edi
    33                              <1> 
    33 00000069 BF[04090000]        <1>  mov edi, %1
    33 0000006E B8[5C050000]        <1>  mov eax, %2
    33                              <1> 
    33                              <1>  %if 3 == %0
    33                              <1>  mov [edi + 0], %3
    33                              <1>  %endif
    33                              <1> 
    33 00000073 66894702            <1>  mov [edi + 2], ax
    33 00000077 C1E810              <1>  shr eax, 16
    33 0000007A 884704              <1>  mov [edi + 4], al
    33 0000007D 886707              <1>  mov [edi + 7], ah
    33                              <1> 
    33 00000080 5F                  <1>  pop edi
    33 00000081 58                  <1>  pop eax
    34                                          set_desc GDT.tss_4, TSS_4
    34 00000082 50                  <1>  push eax
    34 00000083 57                  <1>  push edi
    34                              <1> 
    34 00000084 BF[0C090000]        <1>  mov edi, %1
    34 00000089 B8[34060000]        <1>  mov eax, %2
    34                              <1> 
    34                              <1>  %if 3 == %0
    34                              <1>  mov [edi + 0], %3
    34                              <1>  %endif
    34                              <1> 
    34 0000008E 66894702            <1>  mov [edi + 2], ax
    34 00000092 C1E810              <1>  shr eax, 16
    34 00000095 884704              <1>  mov [edi + 4], al
    34 00000098 886707              <1>  mov [edi + 7], ah
    34                              <1> 
    34 0000009B 5F                  <1>  pop edi
    34 0000009C 58                  <1>  pop eax
    35                                          set_desc GDT.tss_5, TSS_5
    35 0000009D 50                  <1>  push eax
    35 0000009E 57                  <1>  push edi
    35                              <1> 
    35 0000009F BF[14090000]        <1>  mov edi, %1
    35 000000A4 B8[0C070000]        <1>  mov eax, %2
    35                              <1> 
    35                              <1>  %if 3 == %0
    35                              <1>  mov [edi + 0], %3
    35                              <1>  %endif
    35                              <1> 
    35 000000A9 66894702            <1>  mov [edi + 2], ax
    35 000000AD C1E810              <1>  shr eax, 16
    35 000000B0 884704              <1>  mov [edi + 4], al
    35 000000B3 886707              <1>  mov [edi + 7], ah
    35                              <1> 
    35 000000B6 5F                  <1>  pop edi
    35 000000B7 58                  <1>  pop eax
    36                                          set_desc GDT.tss_6, TSS_6
    36 000000B8 50                  <1>  push eax
    36 000000B9 57                  <1>  push edi
    36                              <1> 
    36 000000BA BF[1C090000]        <1>  mov edi, %1
    36 000000BF B8[E4070000]        <1>  mov eax, %2
    36                              <1> 
    36                              <1>  %if 3 == %0
    36                              <1>  mov [edi + 0], %3
    36                              <1>  %endif
    36                              <1> 
    36 000000C4 66894702            <1>  mov [edi + 2], ax
    36 000000C8 C1E810              <1>  shr eax, 16
    36 000000CB 884704              <1>  mov [edi + 4], al
    36 000000CE 886707              <1>  mov [edi + 7], ah
    36                              <1> 
    36 000000D1 5F                  <1>  pop edi
    36 000000D2 58                  <1>  pop eax
    37                                  
    38                                          ;------------------------------------------
    39                                          ; コールゲートの設定
    40                                          ;------------------------------------------
    41                                          set_gate GDT.call_gate, call_gate
    41 000000D3 50                  <1>  push eax
    41 000000D4 57                  <1>  push edi
    41                              <1> 
    41 000000D5 BF[24090000]        <1>  mov edi, %1
    41 000000DA B8[D4170000]        <1>  mov eax, %2
    41                              <1> 
    41 000000DF 668907              <1>  mov [edi + 0], ax
    41 000000E2 C1E810              <1>  shr eax, 16
    41 000000E5 66894706            <1>  mov [edi + 6], ax
    41                              <1> 
    41 000000E9 5F                  <1>  pop edi
    41 000000EA 58                  <1>  pop eax
    42                                  
    43                                          ;------------------------------------------
    44                                          ; LDTの設定
    45                                          ;------------------------------------------
    46                                          set_desc GDT.ldt, LDT, word LDT_LIMIT
    46 000000EB 50                  <1>  push eax
    46 000000EC 57                  <1>  push edi
    46                              <1> 
    46 000000ED BF[E4080000]        <1>  mov edi, %1
    46 000000F2 B8[32090000]        <1>  mov eax, %2
    46                              <1> 
    46                              <1>  %if 3 == %0
    46 000000F7 66C7075F00          <1>  mov [edi + 0], %3
    46                              <1>  %endif
    46                              <1> 
    46 000000FC 66894702            <1>  mov [edi + 2], ax
    46 00000100 C1E810              <1>  shr eax, 16
    46 00000103 884704              <1>  mov [edi + 4], al
    46 00000106 886707              <1>  mov [edi + 7], ah
    46                              <1> 
    46 00000109 5F                  <1>  pop edi
    46 0000010A 58                  <1>  pop eax
    47                                  
    48                                          ;------------------------------------------
    49                                          ; GDTをロード(再設定)
    50                                          ;------------------------------------------
    51 0000010B 0F0115[2C090000]                lgdt [GDTR]
    52                                  
    53                                          ;------------------------------------------
    54                                          ; スタックの設定
    55                                          ;------------------------------------------
    56 00000112 BC00341000                      mov esp, SP_TASK_0
    57                                  
    58                                          ;------------------------------------------
    59                                          ; タスクレジスタの初期化
    60                                          ;------------------------------------------
    61 00000117 66B83000                        mov ax, SS_TASK_0
    62 0000011B 0F00D8                          ltr ax
    63                                  
    64                                          ;------------------------------------------
    65                                          ; 初期化
    66                                          ;------------------------------------------
    67 0000011E E88B130000                      cdecl init_int
    68 00000123 E80C150000                      cdecl init_pic
    69 00000128 E8A0080000                      cdecl init_page
    70                                  
    71 0000012D 5057BF00001000B8-               set_vect 0x00, int_zero_div
    71 00000135 [16160000]668907C1-
    71 0000013D E810668947065F58   
    72 00000145 5057BF38001000B8-               set_vect 0x07, int_nm
    72 0000014D [3F180000]668907C1-
    72 00000155 E810668947065F58   
    73 0000015D 5057BF70001000B8-               set_vect 0x0E, int_pf
    73 00000165 [F80A0000]668907C1-
    73 0000016D E810668947065F58   
    74 00000175 5057BF00011000B8-               set_vect 0x20, int_timer
    74 0000017D [6F0A0000]668907C1-
    74 00000185 E810668947065F58   
    75 0000018D 5057BF08011000B8-               set_vect 0x21, int_keyboard
    75 00000195 [9C160000]668907C1-
    75 0000019D E810668947065F58   
    76 000001A5 5057BF40011000B8-               set_vect 0x28, int_rtc
    76 000001AD [5F160000]668907C1-
    76 000001B5 E810668947065F58   
    77 000001BD 5057BF08041000B8-               set_vect 0x81, trap_gate_81, word 0xEF00
    77 000001C5 [04180000]66C74704-
    77 000001CD 00EF668907C1E81066-
    77 000001D6 8947065F58         
    78 000001DB 5057BF10041000B8-               set_vect 0x82, trap_gate_82, word 0xEF00
    78 000001E3 [12180000]66C74704-
    78 000001EB 00EF668907C1E81066-
    78 000001F4 8947065F58         
    79                                  
    80                                          ;------------------------------------------
    81                                          ; デバイスの割り込み許可
    82                                          ;------------------------------------------
    83 000001F9 6A10E8881400006683-             cdecl rtc_int_en, 0x10
    83 00000202 C404               
    84 00000204 E883150000                      cdecl int_en_timer0
    85                                  
    86                                          ;------------------------------------------
    87                                          ; IMR(割り込みマスクレジスタ)の設定
    88                                          ;------------------------------------------
    89                                          outp 0x21, 0b_1111_1000
    89 00000209 B0F8                <1>  mov al, %2
    89 0000020B E621                <1>  out %1, al
    90                                          outp 0xA1, 0b_1111_1110
    90 0000020D B0FE                <1>  mov al, %2
    90 0000020F E6A1                <1>  out %1, al
    91                                  
    92                                          ;------------------------------------------
    93                                          ; ページングの有効化
    94                                          ;------------------------------------------
    95 00000211 B800501000                      mov eax, CR3_BASE
    96 00000216 0F22D8                          mov cr3, eax
    97                                  
    98 00000219 0F20C0                          mov eax, cr0
    99 0000021C 0D00000080                      or eax, (1 << 31)
   100 00000221 0F22C0                          mov cr0, eax
   101 00000224 EB00                            jmp $ + 2
   102                                  
   103                                          ;------------------------------------------
   104                                          ; CPUの割り込み許可
   105                                          ;------------------------------------------
   106 00000226 FB                              sti
   107                                  
   108                                          ;------------------------------------------
   109                                          ; フォントの一覧表示
   110                                          ;------------------------------------------
   111 00000227 6A0D6A3FE8100E0000-             cdecl draw_font, 63, 13
   111 00000230 6683C408           
   112 00000234 6A046A3FE8860E0000-             cdecl draw_color_bar, 63, 4
   112 0000023D 6683C408           
   113                                  
   114                                          ;------------------------------------------
   115                                          ; 文字列の表示
   116                                          ;------------------------------------------
   117 00000241 68[B4020000]680F01-             cdecl draw_str, 25, 14, 0x010F, .s0
   117 00000249 00006A0E6A19E8310E-
   117 00000252 00006683C410       
   118                                  
   119                                  .10L:
   120                                  
   121                                          ;------------------------------------------
   122                                          ; 回転する棒を表示
   123                                          ;------------------------------------------
   124 00000258 E83E150000                      cdecl draw_rotation_bar
   125                                  
   126                                          ;------------------------------------------
   127                                          ; キーコードの取得
   128                                          ;------------------------------------------
   129 0000025D 68[C8020000]68-                 cdecl ring_rd, _KEY_BUFF, .int_key
   129 00000263 [C0160000]E86C1400-
   129 0000026B 006683C408         
   130 00000270 83F800                          cmp eax, 0
   131 00000273 743D                            je .10E
   132                                  
   133                                          ;------------------------------------------
   134                                          ; キーコードの表示
   135                                          ;------------------------------------------
   136 00000275 68[C0160000]6A1D6A-             cdecl draw_key, 2, 29, _KEY_BUFF
   136 0000027D 02E8B61400006683C4-
   136 00000286 0C                 
   137                                  
   138                                          ;------------------------------------------
   139                                          ; キー押下時の処理
   140                                          ;------------------------------------------
   141 00000287 A0[C8020000]                    mov al, [.int_key]
   142 0000028C 3C02                            cmp al, 0x02
   143 0000028E 7522                            jne .12E
   144                                  
   145                                          ;------------------------------------------
   146                                          ; ファイル読み込み
   147                                          ;------------------------------------------
   148 00000290 FF15F09B0000                    call [BOOT_LOAD + BOOT_SIZE - 16]
   149                                  
   150                                          ;------------------------------------------
   151                                          ; ファイルの内容を表示
   152                                          ;------------------------------------------
   153 00000296 BE00780000                      mov esi, 0x7800
   154 0000029B C6462000                        mov [esi + 32], byte 0
   155 0000029F 5668040F00006A006A-             cdecl draw_str, 0, 0, 0x0F04, esi
   155 000002A8 00E8D70D00006683C4-
   155 000002B1 10                 
   156                                  .12E:
   157                                  .10E:
   158 000002B2 EBA4                            jmp .10L
   159                                  
   160 000002B4 2048656C6C6F2C206B-     .s0:    db " Hello, kernel! ", 0
   160 000002BD 65726E656C212000   
   161                                  
   162 000002C5 00<rept>                ALIGN 4, db 0
   163 000002C8 00000000                .int_key: dd 0
   164                                  
   165                                  ALIGN 4, db 0
   166 000002CC 00000000                FONT_ADR: dd 0
   167 000002D0 00000000                RTC_TIME: dd 0
   168                                  
   169                                  ;***********************************************************
   170                                  ;  タスク
   171                                  ;***********************************************************
   172                                  %include "descriptor.s"
     1                              <1> ;***********************************************************
     2                              <1> ;  TSS
     3                              <1> ;***********************************************************
     4                              <1> TSS_0:
     5 000002D4 00000000            <1> .link:    dd 0
     6 000002D8 00321000            <1> .esp0:    dd SP_TASK_0 - 512
     7 000002DC 10000000            <1> .ss0:     dd DS_KERNEL
     8 000002E0 00000000            <1> .esp1:    dd 0
     9 000002E4 00000000            <1> .ss1:     dd 0
    10 000002E8 00000000            <1> .esp2:    dd 0
    11 000002EC 00000000            <1> .ss2:     dd 0
    12 000002F0 00501000            <1> .cr3:     dd CR3_BASE
    13 000002F4 00000000            <1> .eip:     dd 0
    14 000002F8 00000000            <1> .eflags:  dd 0
    15 000002FC 00000000            <1> .eax:     dd 0
    16 00000300 00000000            <1> .ecx:     dd 0
    17 00000304 00000000            <1> .edx:     dd 0
    18 00000308 00000000            <1> .ebx:     dd 0
    19 0000030C 00000000            <1> .esp:     dd 0
    20 00000310 00000000            <1> .ebp:     dd 0
    21 00000314 00000000            <1> .esi:     dd 0
    22 00000318 00000000            <1> .edi:     dd 0
    23 0000031C 00000000            <1> .es:      dd 0
    24 00000320 00000000            <1> .cs:      dd 0
    25 00000324 00000000            <1> .ss:      dd 0
    26 00000328 00000000            <1> .ds:      dd 0
    27 0000032C 00000000            <1> .fs:      dd 0
    28 00000330 00000000            <1> .gs:      dd 0
    29 00000334 00000000            <1> .ldt:     dd 0
    30 00000338 00000000            <1> .io:      dd 0
    31 0000033C 00<rept>            <1> .fp_save: times 108 + 4 db 0
    32                              <1> 
    33                              <1> TSS_1:
    34 000003AC 00000000            <1> .link:    dd 0
    35 000003B0 00361000            <1> .esp0:    dd SP_TASK_1 - 512
    36 000003B4 10000000            <1> .ss0:     dd DS_KERNEL
    37 000003B8 00000000            <1> .esp1:    dd 0
    38 000003BC 00000000            <1> .ss1:     dd 0
    39 000003C0 00000000            <1> .esp2:    dd 0
    40 000003C4 00000000            <1> .ss2:     dd 0
    41 000003C8 00501000            <1> .cr3:     dd CR3_BASE
    42 000003CC [5E0B0000]          <1> .eip:     dd task_1
    43 000003D0 02020000            <1> .eflags:  dd 0x0202
    44 000003D4 00000000            <1> .eax:     dd 0
    45 000003D8 00000000            <1> .ecx:     dd 0
    46 000003DC 00000000            <1> .edx:     dd 0
    47 000003E0 00000000            <1> .ebx:     dd 0
    48 000003E4 00381000            <1> .esp:     dd SP_TASK_1
    49 000003E8 00000000            <1> .ebp:     dd 0
    50 000003EC 00000000            <1> .esi:     dd 0
    51 000003F0 00000000            <1> .edi:     dd 0
    52 000003F4 27000000            <1> .es:      dd DS_TASK_1
    53 000003F8 1F000000            <1> .cs:      dd CS_TASK_1
    54 000003FC 27000000            <1> .ss:      dd DS_TASK_1
    55 00000400 27000000            <1> .ds:      dd DS_TASK_1
    56 00000404 27000000            <1> .fs:      dd DS_TASK_1
    57 00000408 27000000            <1> .gs:      dd DS_TASK_1
    58 0000040C 28000000            <1> .ldt:     dd SS_LDT
    59 00000410 00000000            <1> .io:      dd 0
    60 00000414 00<rept>            <1> .fp_save: times 108 + 4 db 0
    61                              <1> 
    62                              <1> TSS_2:
    63 00000484 00000000            <1> .link:    dd 0
    64 00000488 003A1000            <1> .esp0:    dd SP_TASK_2 - 512
    65 0000048C 10000000            <1> .ss0:     dd DS_KERNEL
    66 00000490 00000000            <1> .esp1:    dd 0
    67 00000494 00000000            <1> .ss1:	    dd 0
    68 00000498 00000000            <1> .esp2:    dd 0
    69 0000049C 00000000            <1> .ss2:     dd 0
    70 000004A0 00501000            <1> .cr3:     dd CR3_BASE
    71 000004A4 [930B0000]          <1> .eip:     dd task_2
    72 000004A8 02020000            <1> .eflags:  dd 0x0202
    73 000004AC 00000000            <1> .eax:     dd 0
    74 000004B0 00000000            <1> .ecx:     dd 0
    75 000004B4 00000000            <1> .edx:     dd 0
    76 000004B8 00000000            <1> .ebx:			dd 0
    77 000004BC 003C1000            <1> .esp:			dd SP_TASK_2
    78 000004C0 00000000            <1> .ebp:			dd 0
    79 000004C4 00000000            <1> .esi:			dd 0
    80 000004C8 00000000            <1> .edi:			dd 0
    81 000004CC 37000000            <1> .es:			dd DS_TASK_2
    82 000004D0 2F000000            <1> .cs:			dd CS_TASK_2
    83 000004D4 37000000            <1> .ss:			dd DS_TASK_2
    84 000004D8 37000000            <1> .ds:			dd DS_TASK_2
    85 000004DC 37000000            <1> .fs:			dd DS_TASK_2
    86 000004E0 37000000            <1> .gs:			dd DS_TASK_2
    87 000004E4 28000000            <1> .ldt:			dd SS_LDT
    88 000004E8 00000000            <1> .io:			dd 0
    89 000004EC 00<rept>            <1> .fp_save: times 108 + 4 db 0
    90                              <1> 
    91                              <1> TSS_3:
    92 0000055C 00000000            <1> .link:    dd 0
    93 00000560 003E1000            <1> .esp0:    dd SP_TASK_3 - 512
    94 00000564 10000000            <1> .ss0:     dd DS_KERNEL
    95 00000568 00000000            <1> .esp1:    dd 0
    96 0000056C 00000000            <1> .ss1:     dd 0
    97 00000570 00000000            <1> .esp2:    dd 0
    98 00000574 00000000            <1> .ss2:     dd 0
    99 00000578 00501000            <1> .cr3:     dd CR3_BASE
   100 0000057C [640C0000]          <1> .eip:     dd task_3
   101 00000580 02020000            <1> .eflags:  dd 0x0202
   102 00000584 00000000            <1> .eax:     dd 0
   103 00000588 00000000            <1> .ecx:     dd 0
   104 0000058C 00000000            <1> .edx:     dd 0
   105 00000590 00000000            <1> .ebx:     dd 0
   106 00000594 00401000            <1> .esp:     dd SP_TASK_3
   107 00000598 00000000            <1> .ebp:     dd 0
   108 0000059C 00000000            <1> .esi:     dd 0
   109 000005A0 00000000            <1> .edi:     dd 0
   110 000005A4 47000000            <1> .es:      dd DS_TASK_3
   111 000005A8 3F000000            <1> .cs:      dd CS_TASK_3
   112 000005AC 47000000            <1> .ss:      dd DS_TASK_3
   113 000005B0 47000000            <1> .ds:      dd DS_TASK_3
   114 000005B4 47000000            <1> .fs:      dd DS_TASK_3
   115 000005B8 47000000            <1> .gs:      dd DS_TASK_3
   116 000005BC 28000000            <1> .ldt:     dd SS_LDT
   117 000005C0 00000000            <1> .io:      dd 0
   118 000005C4 00<rept>            <1> .fp_save: times 108 + 4 db 0
   119                              <1> 
   120                              <1> TSS_4:
   121 00000634 00000000            <1> .link:    dd 0
   122 00000638 00421000            <1> .esp0:    dd SP_TASK_4 - 512
   123 0000063C 10000000            <1> .ss0:     dd DS_KERNEL
   124 00000640 00000000            <1> .esp1:    dd 0
   125 00000644 00000000            <1> .ss1:     dd 0
   126 00000648 00000000            <1> .esp2:    dd 0
   127 0000064C 00000000            <1> .ss2:     dd 0
   128 00000650 00002000            <1> .cr3:     dd CR3_TASK_4
   129 00000654 [640C0000]          <1> .eip:     dd task_3
   130 00000658 02020000            <1> .eflags:  dd 0x0202
   131 0000065C 00000000            <1> .eax:     dd 0
   132 00000660 00000000            <1> .ecx:     dd 0
   133 00000664 00000000            <1> .edx:     dd 0
   134 00000668 00000000            <1> .ebx:     dd 0
   135 0000066C 00441000            <1> .esp:     dd SP_TASK_4
   136 00000670 00000000            <1> .ebp:     dd 0
   137 00000674 00000000            <1> .esi:     dd 0
   138 00000678 00000000            <1> .edi:     dd 0
   139 0000067C 4F000000            <1> .es:      dd DS_TASK_4
   140 00000680 3F000000            <1> .cs:      dd CS_TASK_3
   141 00000684 4F000000            <1> .ss:      dd DS_TASK_4
   142 00000688 4F000000            <1> .ds:      dd DS_TASK_4
   143 0000068C 4F000000            <1> .fs:      dd DS_TASK_4
   144 00000690 4F000000            <1> .gs:      dd DS_TASK_4
   145 00000694 28000000            <1> .ldt:     dd SS_LDT
   146 00000698 00000000            <1> .io:      dd 0
   147 0000069C 00<rept>            <1> .fp_save: times 108 + 4 db 0
   148                              <1> 
   149                              <1> TSS_5:
   150 0000070C 00000000            <1> .link:    dd 0
   151 00000710 00461000            <1> .esp0:    dd SP_TASK_5 - 512
   152 00000714 10000000            <1> .ss0:     dd DS_KERNEL
   153 00000718 00000000            <1> .esp1:    dd 0
   154 0000071C 00000000            <1> .ss1:     dd 0
   155 00000720 00000000            <1> .esp2:    dd 0
   156 00000724 00000000            <1> .ss2:     dd 0
   157 00000728 00202000            <1> .cr3:     dd CR3_TASK_5
   158 0000072C [640C0000]          <1> .eip:     dd task_3
   159 00000730 02020000            <1> .eflags:  dd 0x0202
   160 00000734 00000000            <1> .eax:     dd 0
   161 00000738 00000000            <1> .ecx:     dd 0
   162 0000073C 00000000            <1> .edx:     dd 0
   163 00000740 00000000            <1> .ebx:     dd 0
   164 00000744 00481000            <1> .esp:     dd SP_TASK_5
   165 00000748 00000000            <1> .ebp:     dd 0
   166 0000074C 00000000            <1> .esi:     dd 0
   167 00000750 00000000            <1> .edi:     dd 0
   168 00000754 57000000            <1> .es:      dd DS_TASK_5
   169 00000758 3F000000            <1> .cs:      dd CS_TASK_3
   170 0000075C 57000000            <1> .ss:      dd DS_TASK_5
   171 00000760 57000000            <1> .ds:      dd DS_TASK_5
   172 00000764 57000000            <1> .fs:      dd DS_TASK_5
   173 00000768 57000000            <1> .gs:      dd DS_TASK_5
   174 0000076C 28000000            <1> .ldt:     dd SS_LDT
   175 00000770 00000000            <1> .io:      dd 0
   176 00000774 00<rept>            <1> .fp_save: times 108 + 4 db 0
   177                              <1> 
   178                              <1> TSS_6:
   179 000007E4 00000000            <1> .link:    dd 0
   180 000007E8 004A1000            <1> .esp0:    dd SP_TASK_6 - 512
   181 000007EC 10000000            <1> .ss0:     dd DS_KERNEL
   182 000007F0 00000000            <1> .esp1:    dd 0
   183 000007F4 00000000            <1> .ss1:     dd 0
   184 000007F8 00000000            <1> .esp2:    dd 0
   185 000007FC 00000000            <1> .ss2:     dd 0
   186 00000800 00402000            <1> .cr3:     dd CR3_TASK_6
   187 00000804 [640C0000]          <1> .eip:     dd task_3
   188 00000808 02020000            <1> .eflags:  dd 0x0202
   189 0000080C 00000000            <1> .eax:     dd 0
   190 00000810 00000000            <1> .ecx:     dd 0
   191 00000814 00000000            <1> .edx:     dd 0
   192 00000818 00000000            <1> .ebx:     dd 0
   193 0000081C 004C1000            <1> .esp:     dd SP_TASK_6
   194 00000820 00000000            <1> .ebp:     dd 0
   195 00000824 00000000            <1> .esi:     dd 0
   196 00000828 00000000            <1> .edi:     dd 0
   197 0000082C 5F000000            <1> .es:      dd DS_TASK_6
   198 00000830 3F000000            <1> .cs:      dd CS_TASK_3
   199 00000834 5F000000            <1> .ss:      dd DS_TASK_6
   200 00000838 5F000000            <1> .ds:      dd DS_TASK_6
   201 0000083C 5F000000            <1> .fs:      dd DS_TASK_6
   202 00000840 5F000000            <1> .gs:      dd DS_TASK_6
   203 00000844 28000000            <1> .ldt:     dd SS_LDT
   204 00000848 00000000            <1> .io:      dd 0
   205 0000084C 00<rept>            <1> .fp_save:	times 108 + 4 db 0
   206                              <1> 
   207                              <1> ;***********************************************************
   208                              <1> ;  グローバルディスクリプタテーブル
   209                              <1> ;***********************************************************
   210 000008BC 0000000000000000    <1> GDT:        dq 0x0000000000000000
   211 000008C4 FFFF0000009ACF00    <1> .cs_kernel: dq 0x00CF9A000000FFFF
   212 000008CC FFFF00000092CF00    <1> .ds_kernel: dq 0x00CF92000000FFFF
   213 000008D4 FFFF0000009A0F00    <1> .cs_bit16:  dq 0x000F9A000000FFFF
   214 000008DC FFFF000000920F00    <1> .ds_bit16:  dq 0x000F92000000FFFF
   215 000008E4 0000000000820000    <1> .ldt        dq 0x0000820000000000
   216 000008EC 6700000000890000    <1> .tss_0:     dq 0x0000890000000067
   217 000008F4 6700000000890000    <1> .tss_1:     dq 0x0000890000000067
   218 000008FC 6700000000890000    <1> .tss_2:     dq 0x0000890000000067
   219 00000904 6700000000890000    <1> .tss_3:     dq 0x0000890000000067
   220 0000090C 6700000000890000    <1> .tss_4:     dq 0x0000890000000067
   221 00000914 6700000000890000    <1> .tss_5:     dq 0x0000890000000067
   222 0000091C 6700000000890000    <1> .tss_6:     dq 0x0000890000000067
   223 00000924 0000080004EC0000    <1> .call_gate: dq 0x0000EC0400080000
   224                              <1> .end:
   225                              <1> 
   226                              <1> CS_KERNEL   equ .cs_kernel - GDT
   227                              <1> DS_KERNEL   equ .ds_kernel - GDT
   228                              <1> SS_LDT      equ .ldt - GDT
   229                              <1> SS_TASK_0   equ .tss_0 - GDT
   230                              <1> SS_TASK_1   equ .tss_1 - GDT
   231                              <1> SS_TASK_2   equ .tss_2 - GDT
   232                              <1> SS_TASK_3   equ .tss_3 - GDT
   233                              <1> SS_TASK_4   equ .tss_4 - GDT
   234                              <1> SS_TASK_5   equ .tss_5 - GDT
   235                              <1> SS_TASK_6   equ .tss_6 - GDT
   236                              <1> SS_GATE_0   equ .call_gate - GDT
   237                              <1> 
   238 0000092C 6F00                <1> GDTR:   dw GDT.end - GDT - 1
   239 0000092E [BC080000]          <1>         dd GDT
   240                              <1> 
   241                              <1> ;***********************************************************
   242                              <1> ;  ローカルディスクリプタテーブル
   243                              <1> ;***********************************************************
   244 00000932 0000000000000000    <1> LDT:        dq 0x0000000000000000
   245 0000093A FFFF0000009ACF00    <1> .cs_task_0: dq 0x00CF9A000000FFFF
   246 00000942 FFFF00000092CF00    <1> .ds_task_0: dq 0x00CF92000000FFFF
   247 0000094A FFFF000000FACF00    <1> .cs_task_1: dq 0x00CFFA000000FFFF
   248 00000952 FFFF000000F2CF00    <1> .ds_task_1: dq 0x00CFF2000000FFFF
   249 0000095A FFFF000000FACF00    <1> .cs_task_2: dq 0x00CFFA000000FFFF
   250 00000962 FFFF000000F2CF00    <1> .ds_task_2: dq 0x00CFF2000000FFFF
   251 0000096A FFFF000000FACF00    <1> .cs_task_3: dq 0x00CFFA000000FFFF
   252 00000972 FFFF000000F2CF00    <1> .ds_task_3: dq 0x00CFF2000000FFFF
   253 0000097A FFFF000000F2CF00    <1> .ds_task_4: dq 0x00CFF2000000FFFF
   254 00000982 FFFF000000F2CF00    <1> .ds_task_5: dq 0x00CFF2000000FFFF
   255 0000098A FFFF000000F2CF00    <1> .ds_task_6: dq 0x00CFF2000000FFFF
   256                              <1> .end:
   257                              <1> 
   258                              <1> CS_TASK_0   equ (.cs_task_0 - LDT) | 4
   259                              <1> DS_TASK_0   equ (.ds_task_0 - LDT) | 4
   260                              <1> CS_TASK_1   equ (.cs_task_1 - LDT) | 4 | 3
   261                              <1> DS_TASK_1   equ (.ds_task_1 - LDT) | 4 | 3
   262                              <1> CS_TASK_2   equ	(.cs_task_2 - LDT) | 4 | 3
   263                              <1> DS_TASK_2   equ (.ds_task_2 - LDT) | 4 | 3
   264                              <1> CS_TASK_3   equ (.cs_task_3 - LDT) | 4 | 3
   265                              <1> DS_TASK_3   equ (.ds_task_3 - LDT) | 4 | 3
   266                              <1> DS_TASK_4   equ (.ds_task_4 - LDT) | 4 | 3
   267                              <1> DS_TASK_5   equ (.ds_task_5 - LDT) | 4 | 3
   268                              <1> DS_TASK_6   equ (.ds_task_6 - LDT) | 4 | 3
   269                              <1> 
   270                              <1> LDT_LIMIT   equ .end - LDT - 1
   173                                  %include "modules/paging.s"
     1                              <1> page_set_4m:
     2                              <1>         ;---------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;---------------------------------
     5 00000992 55                  <1>         push ebp
     6 00000993 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;---------------------------------
     9                              <1>         ; レジスタの保存
    10                              <1>         ;---------------------------------
    11 00000995 60                  <1>         pusha
    12                              <1> 
    13                              <1>         ;---------------------------------
    14                              <1>         ; ページディレクトリの作成(P=0)
    15                              <1>         ;---------------------------------
    16 00000996 FC                  <1>         cld                                 ; // DFクリア (+方向)
    17 00000997 8B7D08              <1>         mov edi, [ebp + 8]                  ; EDI = ページディレクトリの先頭;
    18 0000099A B800000000          <1>         mov eax, 0x00000000                 ; EAX = 0; // P = 0
    19 0000099F B900040000          <1>         mov ecx, 1024                       ; count = 1024;
    20 000009A4 F3AB                <1>         rep stosd                           ; while (count--) *dst++ = 属性;
    21                              <1> 
    22                              <1>         ;---------------------------------
    23                              <1>         ; 先頭のエントリを設定
    24                              <1>         ;---------------------------------
    25 000009A6 89F8                <1>         mov eax, edi                        ; EAX = EDI; // ページディレクトリの直後
    26 000009A8 2500F0FFFF          <1>         and eax, ~0x0000_0FFF               ; EAX &= ~0FFF; // 物理アドレスの指定
    27 000009AD 83C807              <1>         or eax, 7                           ; EAX |= 7; // RWの許可
    28 000009B0 898700F0FFFF        <1>         mov [edi - (1024 * 4)], eax         ; // 先頭のエントリを設定
    29                              <1> 
    30                              <1>         ;---------------------------------
    31                              <1>         ; ページテーブルの設置(リニア)
    32                              <1>         ;---------------------------------
    33 000009B6 B807000000          <1>         mov eax, 0x00000007                 ; // 物理アドレスの指定とRWの許可
    34 000009BB B900040000          <1>         mov ecx, 1024                       ; count = 1024;
    35                              <1>                                             ; do
    36                              <1> .10L:                                       ; {
    37 000009C0 AB                  <1>         stosd                               ;   *dst++ = 属性;
    38 000009C1 0500100000          <1>         add eax, 0x00001000                 ;   adr += 0x1000;
    39 000009C6 E2F8                <1>         loop .10L                           ; } while(--count)
    40                              <1> 
    41                              <1>         ;---------------------------------
    42                              <1>         ; レジスタの復帰
    43                              <1>         ;---------------------------------
    44 000009C8 61                  <1>         popa
    45                              <1> 
    46                              <1>         ;---------------------------------
    47                              <1>         ; スタックフレームの破棄
    48                              <1>         ;---------------------------------
    49 000009C9 89EC                <1>         mov esp, ebp
    50 000009CB 5D                  <1>         pop ebp
    51                              <1> 
    52 000009CC C3                  <1>         ret
    53                              <1> 
    54                              <1> init_page:
    55                              <1>         ;---------------------------------
    56                              <1>         ; レジスタの保存
    57                              <1>         ;---------------------------------
    58 000009CD 60                  <1>         pusha
    59                              <1> 
    60                              <1>         ;---------------------------------
    61                              <1>         ; ページ変換テーブルの作成
    62                              <1>         ;---------------------------------
    63 000009CE 6800501000E8BAFFFF- <1>         cdecl page_set_4m, CR3_BASE         ; // ページ変換テーブルの作成：タスク3用
    63 000009D7 FF6683C404          <1>
    64 000009DC 6800002000E8ACFFFF- <1>         cdecl page_set_4m, CR3_TASK_4       ; // ページ変換テーブルの作成：タスク3用
    64 000009E5 FF6683C404          <1>
    65 000009EA 6800202000E89EFFFF- <1>         cdecl page_set_4m, CR3_TASK_5       ; // ページ変換テーブルの作成：タスク3用
    65 000009F3 FF6683C404          <1>
    66 000009F8 6800402000E890FFFF- <1>         cdecl page_set_4m, CR3_TASK_6       ; // ページ変換テーブルの作成：タスク3用
    66 00000A01 FF6683C404          <1>
    67                              <1> 
    68                              <1>         ;---------------------------------
    69                              <1>         ; ページテーブルの設定
    70                              <1>         ;---------------------------------
    71 00000A06 C7051C641000000000- <1>         mov [0x00106000 + 0x107 * 4], dword 0;
    71 00000A0F 00                  <1>
    72                              <1> 
    73                              <1>         ;---------------------------------
    74                              <1>         ; アドレス変換設定
    75                              <1>         ;---------------------------------
    76 00000A10 C7051C142000078010- <1>         mov [0x0020_1000 + 0x107 * 4], dword PARAM_TASK_4 + 7
    76 00000A19 00                  <1>
    77 00000A1A C7051C342000079010- <1>         mov [0x0020_3000 + 0x107 * 4], dword PARAM_TASK_5 + 7
    77 00000A23 00                  <1>
    78 00000A24 C7051C54200007A010- <1>         mov [0x0020_5000 + 0x107 * 4], dword PARAM_TASK_6 + 7
    78 00000A2D 00                  <1>
    79                              <1> 
    80                              <1>         ;---------------------------------
    81                              <1>         ; 描画パラメータの設定
    82                              <1>         ;---------------------------------
    83 00000A2E 6A4068[A40D0000]68- <1>         cdecl memcpy, PARAM_TASK_4, DRAW_PARAM.t4, rose_size
    83 00000A36 00801000E8AD0E0000- <1>
    83 00000A3F 6683C40C            <1>
    84 00000A43 6A4068[E40D0000]68- <1>         cdecl memcpy, PARAM_TASK_5, DRAW_PARAM.t5, rose_size
    84 00000A4B 00901000E8980E0000- <1>
    84 00000A54 6683C40C            <1>
    85 00000A58 6A4068[240E0000]68- <1>         cdecl memcpy, PARAM_TASK_6, DRAW_PARAM.t6, rose_size
    85 00000A60 00A01000E8830E0000- <1>
    85 00000A69 6683C40C            <1>
    86                              <1> 
    87                              <1>         ;---------------------------------
    88                              <1>         ; レジスタの復帰
    89                              <1>         ;---------------------------------
    90 00000A6D 61                  <1>         popa
    91                              <1> 
    92 00000A6E C3                  <1>         ret
   174                                  %include "modules/int_timer.s"
     1                              <1> int_timer:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【レジスタの保存】
     4                              <1>         ;-----------------------------------------
     5 00000A6F 60                  <1>         pushad
     6 00000A70 1E                  <1>         push ds
     7 00000A71 06                  <1>         push es
     8                              <1> 
     9                              <1>         ;-----------------------------------------
    10                              <1>         ; データ用セグメントの設定
    11                              <1>         ;-----------------------------------------
    12 00000A72 66B81000            <1>         mov ax, 0x0010
    13 00000A76 8ED8                <1>         mov ds, ax
    14 00000A78 8EC0                <1>         mov es, ax
    15                              <1> 
    16                              <1>         ;-----------------------------------------
    17                              <1>         ; TICK
    18                              <1>         ;-----------------------------------------
    19 00000A7A FF05[F00A0000]      <1>         inc dword [TIMER_COUNT]
    20                              <1> 
    21                              <1>         ;-----------------------------------------
    22                              <1>         ; 割り込みフラグをクリア(EOI)
    23                              <1>         ;-----------------------------------------
    24                              <1>         outp 0x20, 0x20
    24 00000A80 B020                <2>  mov al, %2
    24 00000A82 E620                <2>  out %1, al
    25                              <1> 
    26                              <1>         ;-----------------------------------------
    27                              <1>         ; タスクの切り替え
    28                              <1>         ;-----------------------------------------
    29 00000A84 660F00C8            <1>         str ax
    30 00000A88 6683F830            <1>         cmp ax, SS_TASK_0
    31 00000A8C 7427                <1>         je .11L
    32 00000A8E 6683F838            <1>         cmp ax, SS_TASK_1
    33 00000A92 742A                <1>         je .12L
    34 00000A94 6683F840            <1>         cmp ax, SS_TASK_2
    35 00000A98 742D                <1>         je .13L
    36 00000A9A 6683F848            <1>         cmp ax, SS_TASK_3
    37 00000A9E 7430                <1>         je .14L
    38 00000AA0 6683F850            <1>         cmp ax, SS_TASK_4
    39 00000AA4 7433                <1>         je .15L
    40 00000AA6 6683F858            <1>         cmp ax, SS_TASK_5
    41 00000AAA 7436                <1>         je .16L
    42                              <1> 
    43 00000AAC EA000000003000      <1>         jmp SS_TASK_0:0
    44 00000AB3 EB36                <1>         jmp .10E
    45                              <1> .11L:
    46 00000AB5 EA000000003800      <1>         jmp SS_TASK_1:0
    47 00000ABC EB2D                <1>         jmp .10E
    48                              <1> .12L:
    49 00000ABE EA000000004000      <1>         jmp SS_TASK_2:0
    50 00000AC5 EB24                <1>         jmp .10E
    51                              <1> .13L:
    52 00000AC7 EA000000004800      <1>         jmp SS_TASK_3:0
    53 00000ACE EB1B                <1>         jmp .10E
    54                              <1> .14L:
    55 00000AD0 EA000000005000      <1>         jmp SS_TASK_4:0
    56 00000AD7 EB12                <1>         jmp .10E
    57                              <1> .15L:
    58 00000AD9 EA000000005800      <1>         jmp SS_TASK_5:0
    59 00000AE0 EB09                <1>         jmp .10E
    60                              <1> .16L:
    61 00000AE2 EA000000006000      <1>         jmp SS_TASK_6:0
    62 00000AE9 EB00                <1>         jmp .10E
    63                              <1> .10E:
    64                              <1> 
    65                              <1>         ;-----------------------------------------
    66                              <1>         ; 【レジスタの復帰】
    67                              <1>         ;-----------------------------------------
    68 00000AEB 07                  <1>         pop es
    69 00000AEC 1F                  <1>         pop ds
    70 00000AED 61                  <1>         popad
    71                              <1> 
    72 00000AEE CF                  <1>         iret
    73                              <1> 
    74 00000AEF 00                  <1> ALIGN 4, db 0
    75 00000AF0 0000000000000000    <1> TIMER_COUNT:  dq 0
   175                                  %include "modules/int_pf.s"
     1                              <1> int_pf:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 00000AF8 55                  <1>         push ebp
     6 00000AF9 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;-----------------------------------------
     9                              <1>         ; 【レジスタの保存】
    10                              <1>         ;-----------------------------------------
    11 00000AFB 60                  <1>         pusha
    12 00000AFC 1E                  <1>         push ds
    13 00000AFD 06                  <1>         push es
    14                              <1> 
    15                              <1>         ;-----------------------------------------
    16                              <1>         ; 例外を生成したアドレスの確認
    17                              <1>         ;-----------------------------------------
    18 00000AFE 0F20D0              <1>         mov eax, cr2
    19 00000B01 2500F0FFFF          <1>         and eax, ~0x0FFF
    20 00000B06 3D00701000          <1>         cmp eax, 0x0010_7000
    21 00000B0B 7521                <1>         jne .10F
    22                              <1> 
    23                              <1>         ;-----------------------------------------
    24                              <1>         ; 描画パラメータをコピー
    25                              <1>         ;-----------------------------------------
    26 00000B0D C7051C641000077010- <1>         mov [0x00106000 + 0x107 * 4], dword 0x00107007
    26 00000B16 00                  <1>
    27 00000B17 6A4068[640D0000]68- <1>         cdecl memcpy, 0x0010_7000, DRAW_PARAM, rose_size
    27 00000B1F 00701000E8C40D0000- <1>
    27 00000B28 6683C40C            <1>
    28                              <1> 
    29 00000B2C EB15                <1>         jmp .10E
    30                              <1> .10F:
    31                              <1> 
    32                              <1>         ;-----------------------------------------
    33                              <1>         ; スタックの調整
    34                              <1>         ;-----------------------------------------
    35 00000B2E 83C404              <1>         add esp, 4
    36 00000B31 83C404              <1>         add esp, 4
    37 00000B34 61                  <1>         popa
    38 00000B35 5D                  <1>         pop ebp
    39                              <1> 
    40                              <1>         ;-----------------------------------------
    41                              <1>         ; タスク終了処理
    42                              <1>         ;-----------------------------------------
    43 00000B36 9C                  <1>         pushf
    44 00000B37 0E                  <1>         push cs
    45 00000B38 68[FD140000]        <1>         push int_stop
    46                              <1> 
    47 00000B3D B8[4D0B0000]        <1>         mov eax, .s0
    48 00000B42 CF                  <1>         iret
    49                              <1> .10E:
    50                              <1> 
    51                              <1>         ;-----------------------------------------
    52                              <1>         ; 【レジスタの復帰】
    53                              <1>         ;-----------------------------------------
    54 00000B43 07                  <1>         pop es
    55 00000B44 1F                  <1>         pop ds
    56 00000B45 61                  <1>         popa
    57                              <1> 
    58                              <1>         ;-----------------------------------------
    59                              <1>         ; 【スタックフレームの破棄】
    60                              <1>         ;-----------------------------------------
    61 00000B46 89EC                <1>         mov esp, ebp
    62 00000B48 5D                  <1>         pop ebp
    63                              <1> 
    64                              <1>         ;-----------------------------------------
    65                              <1>         ; エラーコードの破棄
    66                              <1>         ;-----------------------------------------
    67 00000B49 83C404              <1>         add esp, 4
    68 00000B4C CF                  <1>         iret
    69                              <1> 
    70 00000B4D 203C20504147452046- <1> .s0     db " < PAGE FAULT > ", 0
    70 00000B56 41554C54203E2000    <1>
   176                                  %include "tasks/task_1.s"
     1                              <1> task_1:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 文字列の表示
     4                              <1>         ;-----------------------------------------
     5 00000B5E 68[8C0B0000]6A076A- <1>         cdecl draw_str, 63, 0, 0x07, .s0
     5 00000B66 006A3FE81705000066- <1>
     5 00000B6F 83C410              <1>
     6                              <1> 
     7                              <1> .10L:
     8                              <1> 
     9                              <1>         ;-----------------------------------------
    10                              <1>         ; 時刻の表示
    11                              <1>         ;-----------------------------------------
    12 00000B72 A1[D0020000]        <1>         mov eax, [RTC_TIME]
    13 00000B77 5068000700006A006A- <1>         cdecl draw_time, 72, 0, 0x0700, eax
    13 00000B80 48E8AA0800006683C4- <1>
    13 00000B89 10                  <1>
    14                              <1> 
    15 00000B8A EBE6                <1>         jmp .10L
    16                              <1> 
    17                              <1>         ;-----------------------------------------
    18                              <1>         ; データ
    19                              <1>         ;-----------------------------------------
    20 00000B8C 5461736B2D3100      <1> .s0     db "Task-1", 0
   177                                  %include "tasks/task_2.s"
     1                              <1> task_2:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 文字列の表示
     4                              <1>         ;-----------------------------------------
     5 00000B93 68[560C0000]6A076A- <1>         cdecl draw_str, 63, 1, 0x07, .s0
     5 00000B9B 016A3FE8E204000066- <1>
     5 00000BA4 83C410              <1>
     6                              <1> 
     7                              <1>         ;-----------------------------------------
     8                              <1>         ; 初期値の設定
     9                              <1>         ;-----------------------------------------
    10 00000BA7 DB05[440C0000]      <1>         fild dword [.c1000]
    11 00000BAD D9EB                <1>         fldpi
    12 00000BAF DA35[480C0000]      <1>         fidiv dword [.c180]
    13 00000BB5 D9EB                <1>         fldpi
    14 00000BB7 DCC0                <1>         fadd st0, st0
    15 00000BB9 D9EE                <1>         fldz
    16                              <1> 
    17                              <1> .10L:
    18                              <1> 
    19                              <1>         ;-----------------------------------------
    20                              <1>         ; sin(θ)
    21                              <1>         ;-----------------------------------------
    22 00000BBB D8C2                <1>         fadd st0, st2
    23 00000BBD D9F8                <1>         fprem
    24 00000BBF D9C0                <1>         fld st0
    25 00000BC1 D9FE                <1>         fsin
    26 00000BC3 D8CC                <1>         fmul st0, st4
    27                              <1> 
    28 00000BC5 DF35[4C0C0000]      <1>         fbstp [.bcd]
    29                              <1> 
    30                              <1>         ;-----------------------------------------
    31                              <1>         ; 値の表示
    32                              <1>         ;-----------------------------------------
    33 00000BCB A1[4C0C0000]        <1>         mov eax, [.bcd]
    34 00000BD0 89C3                <1>         mov ebx, eax
    35                              <1> 
    36 00000BD2 250F0F0000          <1>         and eax, 0x0F0F
    37 00000BD7 0D30300000          <1>         or eax, 0x3030
    38                              <1> 
    39 00000BDC C1EB04              <1>         shr ebx, 4
    40 00000BDF 81E30F0F0000        <1>         and ebx, 0x0F0F
    41 00000BE5 81CB30300000        <1>         or ebx, 0x3030
    42                              <1> 
    43 00000BEB 883D[5E0C0000]      <1>         mov [.s2 + 0], bh
    44 00000BF1 8825[600C0000]      <1>         mov [.s3 + 0], ah
    45 00000BF7 881D[610C0000]      <1>         mov [.s3 + 1], bl
    46 00000BFD A2[620C0000]        <1>         mov [.s3 + 2], al
    47                              <1> 
    48 00000C02 B807000000          <1>         mov eax, 7
    49 00000C07 0FA305[550C0000]    <1>         bt [.bcd + 9], eax
    50 00000C0E 7209                <1>         jc .10F
    51                              <1> 
    52 00000C10 C605[5D0C0000]2B    <1>         mov [.s1 + 0], byte '+'
    53 00000C17 EB07                <1>         jmp .10E
    54                              <1> .10F:
    55                              <1> 
    56 00000C19 C605[5D0C0000]2D    <1>         mov [.s1 + 0], byte '-'
    57                              <1> .10E:
    58                              <1> 
    59 00000C20 68[5D0C0000]6A076A- <1>         cdecl draw_str, 72, 1, 0x07, .s1
    59 00000C28 016A48E85504000066- <1>
    59 00000C31 83C410              <1>
    60                              <1> 
    61                              <1>         ;-----------------------------------------
    62                              <1>         ; ウェイト
    63                              <1>         ;-----------------------------------------
    64 00000C34 6A0AE8930C00006683- <1>         cdecl wait_tick, 10
    64 00000C3D C404                <1>
    65                              <1> 
    66 00000C3F E977FFFFFF          <1>         jmp .10L
    67                              <1> 
    68                              <1>         ;-----------------------------------------
    69                              <1>         ; データ
    70                              <1>         ;-----------------------------------------
    71                              <1> ALIGN 4, db 0
    72 00000C44 E8030000            <1> .c1000: dd 1000
    73 00000C48 B4000000            <1> .c180:  dd 180
    74                              <1> 
    75 00000C4C 00<rept>            <1> .bcd:   times 10 db 0x00
    76                              <1> 
    77 00000C56 5461736B2D3200      <1> .s0     db "Task-2", 0
    78 00000C5D 2D                  <1> .s1:    db "-"
    79 00000C5E 302E                <1> .s2:    db "0."
    80 00000C60 30303000            <1> .s3:    db "000", 0
   178                                  %include "tasks/task_3.s"
     1                              <1> task_3:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 00000C64 89E5                <1>         mov ebp, esp
     6                              <1> 
     7 00000C66 6A00                <1>         push dword 0
     8 00000C68 6A00                <1>         push dword 0
     9 00000C6A 6A00                <1>         push dword 0
    10 00000C6C 6A00                <1>         push dword 0
    11 00000C6E 6A00                <1>         push dword 0
    12                              <1> 
    13                              <1>         ;-----------------------------------------
    14                              <1>         ; 初期化
    15                              <1>         ;-----------------------------------------
    16 00000C70 BE00701000          <1>         mov esi, 0x0010_7000
    17                              <1> 
    18                              <1>         ;-----------------------------------------
    19                              <1>         ; タイトル表示
    20                              <1>         ;-----------------------------------------
    21 00000C75 8B06                <1>         mov eax, [esi + rose.x0]
    22 00000C77 8B5E04              <1>         mov ebx, [esi + rose.y0]
    23                              <1> 
    24 00000C7A C1E803              <1>         shr eax, 3
    25 00000C7D C1EB04              <1>         shr ebx, 4
    26 00000C80 4B                  <1>         dec ebx
    27 00000C81 8B4E24              <1>         mov ecx, [esi + rose.color_s]
    28 00000C84 8D5630              <1>         lea edx, [esi + rose.title]
    29                              <1> 
    30 00000C87 52515350E8F5030000- <1>         cdecl draw_str, eax, ebx, ecx, edx
    30 00000C90 6683C410            <1>
    31                              <1> 
    32                              <1>         ;-----------------------------------------
    33                              <1>         ; X軸の中点
    34                              <1>         ;-----------------------------------------
    35 00000C94 8B06                <1>         mov eax, [esi + rose.x0]
    36 00000C96 8B5E08              <1>         mov ebx, [esi + rose.x1]
    37 00000C99 29C3                <1>         sub ebx, eax
    38 00000C9B D1EB                <1>         shr ebx, 1
    39 00000C9D 01C3                <1>         add ebx, eax
    40 00000C9F 895DFC              <1>         mov [ebp - 4], ebx
    41                              <1> 
    42                              <1>         ;-----------------------------------------
    43                              <1>         ; Y軸の中点
    44                              <1>         ;-----------------------------------------
    45 00000CA2 8B4604              <1>         mov eax, [esi + rose.y0]
    46 00000CA5 8B5E0C              <1>         mov ebx, [esi + rose.y1]
    47 00000CA8 29C3                <1>         sub ebx, eax
    48 00000CAA D1EB                <1>         shr ebx, 1
    49 00000CAC 01C3                <1>         add ebx, eax
    50 00000CAE 895DF8              <1>         mov [ebp - 8], ebx
    51                              <1> 
    52                              <1>         ;-----------------------------------------
    53                              <1>         ; X軸の描画
    54                              <1>         ;-----------------------------------------
    55 00000CB1 8B06                <1>         mov eax, [esi + rose.x0]
    56 00000CB3 8B5DF8              <1>         mov ebx, [ebp - 8]
    57 00000CB6 8B4E08              <1>         mov ecx, [esi + rose.x1]
    58                              <1> 
    59 00000CB9 FF761853515350E863- <1>         cdecl draw_line, eax, ebx, ecx, ebx, dword [esi + rose.color_x]
    59 00000CC2 0500006683C414      <1>
    60                              <1> 
    61                              <1>         ;-----------------------------------------
    62                              <1>         ; Y軸の描画
    63                              <1>         ;-----------------------------------------
    64 00000CC9 8B4604              <1>         mov eax, [esi + rose.y0]
    65 00000CCC 8B5DFC              <1>         mov ebx, [ebp - 4]
    66 00000CCF 8B4E0C              <1>         mov ecx, [esi + rose.y1]
    67                              <1> 
    68 00000CD2 FF761C51535053E84A- <1>         cdecl draw_line, ebx, eax, ebx, ecx, dword [esi + rose.color_y]
    68 00000CDB 0500006683C414      <1>
    69                              <1> 
    70                              <1>         ;-----------------------------------------
    71                              <1>         ; 枠の描画
    72                              <1>         ;-----------------------------------------
    73 00000CE2 8B06                <1>         mov eax, [esi + rose.x0]
    74 00000CE4 8B5E04              <1>         mov ebx, [esi + rose.y0]
    75 00000CE7 8B4E08              <1>         mov ecx, [esi + rose.x1]
    76 00000CEA 8B560C              <1>         mov edx, [esi + rose.y1]
    77                              <1> 
    78 00000CED FF762052515350E807- <1>         cdecl draw_rect, eax, ebx, ecx, edx, dword [esi + rose.color_z]
    78 00000CF6 0600006683C414      <1>
    79                              <1> 
    80                              <1>         ;-----------------------------------------
    81                              <1>         ; 振幅をX軸の約95%とする
    82                              <1>         ;-----------------------------------------
    83 00000CFD 8B4608              <1>         mov eax, [esi + rose.x1]
    84 00000D00 2B06                <1>         sub eax, [esi + rose.x0]
    85 00000D02 D1E8                <1>         shr eax, 1
    86 00000D04 89C3                <1>         mov ebx, eax
    87 00000D06 C1EB04              <1>         shr ebx, 4
    88 00000D09 29D8                <1>         sub eax, ebx
    89                              <1> 
    90                              <1>         ;-----------------------------------------
    91                              <1>         ; FPUの初期化(バラ曲線の初期化)
    92                              <1>         ;-----------------------------------------
    93 00000D0B FF7614FF761050E84D- <1>         cdecl fpu_rose_init, eax, dword [esi + rose.n], dword [esi + rose.d]
    93 00000D14 0100006683C40C      <1>
    94                              <1> 
    95                              <1>         ;-----------------------------------------
    96                              <1>         ; メインループ
    97                              <1>         ;-----------------------------------------
    98                              <1> .10L:
    99                              <1> 
   100                              <1>         ;-----------------------------------------
   101                              <1>         ; 座標計算
   102                              <1>         ;-----------------------------------------
   103 00000D1B 8D5DF4              <1>         lea ebx, [ebp - 12]
   104 00000D1E 8D4DF0              <1>         lea ecx, [ebp - 16]
   105 00000D21 8B45EC              <1>         mov eax, [ebp - 20]
   106                              <1> 
   107 00000D24 505153E85201000066- <1>         cdecl fpu_rose_update, ebx, ecx, eax
   107 00000D2D 83C40C              <1>
   108                              <1> 
   109                              <1>         ;-----------------------------------------
   110                              <1>         ; 角度更新(r = r % 36000)
   111                              <1>         ;-----------------------------------------
   112 00000D30 BA00000000          <1>         mov edx, 0
   113 00000D35 40                  <1>         inc eax
   114 00000D36 BBA08C0000          <1>         mov ebx, 360 * 100
   115 00000D3B F7F3                <1>         div ebx
   116 00000D3D 8955EC              <1>         mov [ebp - 20], edx
   117                              <1> 
   118                              <1>         ;-----------------------------------------
   119                              <1>         ; ドット描画
   120                              <1>         ;-----------------------------------------
   121 00000D40 8B4DF4              <1>         mov ecx, [ebp - 12]
   122 00000D43 8B55F0              <1>         mov edx, [ebp - 16]
   123                              <1> 
   124 00000D46 034DFC              <1>         add ecx, [ebp - 4]
   125 00000D49 0355F8              <1>         add edx, [ebp - 8]
   126                              <1> 
   127 00000D4C 8B5E28              <1>         mov ebx, [esi + rose.color_f]
   128 00000D4F CD82                <1>         int 0x82
   129                              <1> 
   130                              <1>         ;-----------------------------------------
   131                              <1>         ; ウェイト
   132                              <1>         ;-----------------------------------------
   133 00000D51 6A02E8760B00006683- <1>         cdecl wait_tick, 2
   133 00000D5A C404                <1>
   134                              <1> 
   135                              <1>         ;-----------------------------------------
   136                              <1>         ; ドット描画
   137                              <1>         ;-----------------------------------------
   138 00000D5C 8B5E2C              <1>         mov ebx, [esi + rose.color_b]
   139 00000D5F CD82                <1>         int 0x82
   140                              <1> 
   141 00000D61 EBB8                <1>         jmp .10L
   142                              <1> 
   143                              <1>         ;-----------------------------------------
   144                              <1>         ; データ
   145                              <1>         ;-----------------------------------------
   146 00000D63 00                  <1> ALIGN 4, db 0
   147                              <1> DRAW_PARAM:
   148                              <1> .t3:
   149                              <1>     istruc rose
   150 00000D64 20000000            <1>         at rose.x0, dd 32
   151 00000D68 20000000            <1>         at rose.y0, dd 32
   152 00000D6C D0000000            <1>         at rose.x1, dd 208
   153 00000D70 D0000000            <1>         at rose.y1, dd 208
   154                              <1> 
   155 00000D74 02000000            <1>         at rose.n, dd 2
   156 00000D78 01000000            <1>         at rose.d, dd 1
   157                              <1> 
   158 00000D7C 07000000            <1>         at rose.color_x, dd 0x0007
   159 00000D80 07000000            <1>         at rose.color_y, dd 0x0007
   160 00000D84 0F000000            <1>         at rose.color_z, dd 0x000F
   161 00000D88 0F030000            <1>         at rose.color_s, dd 0x030F
   162 00000D8C 0F000000            <1>         at rose.color_f, dd 0x000F
   163 00000D90 03000000            <1>         at rose.color_b, dd 0x0003
   164                              <1> 
   165 00000D94 5461736B2D3300      <1>         at rose.title, db "Task-3", 0
   166 00000D9B 00<rept>            <1>     iend
   167                              <1> 
   168                              <1> .t4:
   169                              <1>     istruc rose
   170 00000DA4 F8000000            <1>         at rose.x0, dd 248
   171 00000DA8 20000000            <1>         at rose.y0, dd 32
   172 00000DAC A8010000            <1>         at rose.x1, dd 424
   173 00000DB0 D0000000            <1>         at rose.y1, dd 208
   174                              <1> 
   175 00000DB4 03000000            <1>         at rose.n, dd 3
   176 00000DB8 01000000            <1>         at rose.d, dd 1
   177                              <1> 
   178 00000DBC 07000000            <1>         at rose.color_x, dd 0x0007
   179 00000DC0 07000000            <1>         at rose.color_y, dd 0x0007
   180 00000DC4 0F000000            <1>         at rose.color_z, dd 0x000F
   181 00000DC8 0F040000            <1>         at rose.color_s, dd 0x040F
   182 00000DCC 0F000000            <1>         at rose.color_f, dd 0x000F
   183 00000DD0 04000000            <1>         at rose.color_b, dd 0x0004
   184                              <1> 
   185 00000DD4 5461736B2D3400      <1>         at rose.title, db "Task-4", 0
   186 00000DDB 00<rept>            <1>     iend
   187                              <1> 
   188                              <1> .t5:
   189                              <1>     istruc rose
   190 00000DE4 20000000            <1>         at rose.x0, dd 32
   191 00000DE8 10010000            <1>         at rose.y0, dd 272
   192 00000DEC D0000000            <1>         at rose.x1, dd 208
   193 00000DF0 C0010000            <1>         at rose.y1, dd 448
   194                              <1> 
   195 00000DF4 02000000            <1>         at rose.n, dd 2
   196 00000DF8 06000000            <1>         at rose.d, dd 6
   197                              <1> 
   198 00000DFC 07000000            <1>         at rose.color_x, dd 0x0007
   199 00000E00 07000000            <1>         at rose.color_y, dd 0x0007
   200 00000E04 0F000000            <1>         at rose.color_z, dd 0x000F
   201 00000E08 0F050000            <1>         at rose.color_s, dd 0x050F
   202 00000E0C 0F000000            <1>         at rose.color_f, dd 0x000F
   203 00000E10 05000000            <1>         at rose.color_b, dd 0x0005
   204                              <1> 
   205 00000E14 5461736B2D3500      <1>         at rose.title, db "Task-5", 0
   206 00000E1B 00<rept>            <1>     iend
   207                              <1> 
   208                              <1> .t6:
   209                              <1>     istruc rose
   210 00000E24 F8000000            <1>         at rose.x0, dd 248
   211 00000E28 10010000            <1>         at rose.y0, dd 272
   212 00000E2C A8010000            <1>         at rose.x1, dd 424
   213 00000E30 C0010000            <1>         at rose.y1, dd 448
   214                              <1> 
   215 00000E34 04000000            <1>         at rose.n, dd 4
   216 00000E38 06000000            <1>         at rose.d, dd 6
   217                              <1> 
   218 00000E3C 07000000            <1>         at rose.color_x, dd 0x0007
   219 00000E40 07000000            <1>         at rose.color_y, dd 0x0007
   220 00000E44 0F000000            <1>         at rose.color_z, dd 0x000F
   221 00000E48 0F060000            <1>         at rose.color_s, dd 0x060F
   222 00000E4C 0F000000            <1>         at rose.color_f, dd 0x000F
   223 00000E50 06000000            <1>         at rose.color_b, dd 0x0006
   224                              <1> 
   225 00000E54 5461736B2D3600      <1>         at rose.title, db "Task-6", 0
   226 00000E5B 00<rept>            <1>     iend
   227                              <1> 
   228                              <1> fpu_rose_init:
   229                              <1>         ;-----------------------------------------
   230                              <1>         ; 【スタックフレームの構築】
   231                              <1>         ;-----------------------------------------
   232 00000E64 55                  <1>         push ebp
   233 00000E65 89E5                <1>         mov ebp, esp
   234                              <1> 
   235 00000E67 68B4000000          <1>         push dword 180
   236                              <1> 
   237                              <1>         ;-----------------------------------------
   238                              <1>         ; FPUのスタックを設定
   239                              <1>         ;-----------------------------------------
   240 00000E6C D9EB                <1>         fldpi
   241 00000E6E DA75FC              <1>         fidiv dword [ebp - 4]
   242 00000E71 DB450C              <1>         fild dword [ebp + 12]
   243 00000E74 DA7510              <1>         fidiv dword [ebp + 16]
   244 00000E77 DB4508              <1>         fild dword [ebp + 8]
   245                              <1> 
   246                              <1>         ;-----------------------------------------
   247                              <1>         ; 【スタックフレームの破棄】
   248                              <1>         ;-----------------------------------------
   249 00000E7A 89EC                <1>         mov esp, ebp
   250 00000E7C 5D                  <1>         pop ebp
   251                              <1> 
   252 00000E7D C3                  <1>         ret
   253                              <1> 
   254                              <1> fpu_rose_update:
   255                              <1>         ;-----------------------------------------
   256                              <1>         ; 【スタックフレームの構築】
   257                              <1>         ;-----------------------------------------
   258 00000E7E 55                  <1>         push ebp
   259 00000E7F 89E5                <1>         mov ebp, esp
   260                              <1> 
   261                              <1>         ;-----------------------------------------
   262                              <1>         ; 【レジスタの保存】
   263                              <1>         ;-----------------------------------------
   264 00000E81 50                  <1>         push eax
   265 00000E82 53                  <1>         push ebx
   266                              <1> 
   267                              <1>         ;-----------------------------------------
   268                              <1>         ; X/Y座標の保存先を設定
   269                              <1>         ;-----------------------------------------
   270 00000E83 8B4508              <1>         mov eax, [ebp + 8]
   271 00000E86 8B5D0C              <1>         mov ebx, [ebp + 12]
   272                              <1> 
   273                              <1>         ;-----------------------------------------
   274                              <1>         ; ラディアンへの変換
   275                              <1>         ;-----------------------------------------
   276 00000E89 DB4510              <1>         fild dword [ebp + 16]
   277 00000E8C D8CB                <1>         fmul st0, st3
   278 00000E8E D9C0                <1>         fld st0
   279                              <1> 
   280 00000E90 D9FB                <1>         fsincos
   281 00000E92 D9CA                <1>         fxch st2
   282 00000E94 D8CC                <1>         fmul st0, st4
   283 00000E96 D9FE                <1>         fsin
   284 00000E98 D8CB                <1>         fmul st0, st3
   285                              <1> 
   286                              <1>         ;-----------------------------------------
   287                              <1>         ; x = A * sin(kθ) * cos(θ)
   288                              <1>         ;-----------------------------------------
   289 00000E9A D9CA                <1>         fxch st2
   290 00000E9C D8CA                <1>         fmul st0, st2
   291 00000E9E DB18                <1>         fistp dword [eax]
   292                              <1> 
   293                              <1>         ;-----------------------------------------
   294                              <1>         ; y = -A * sin(kθ) * sin(θ)
   295                              <1>         ;-----------------------------------------
   296 00000EA0 DEC9                <1>         fmulp st1, st0
   297 00000EA2 D9E0                <1>         fchs
   298 00000EA4 DB1B                <1>         fistp dword [ebx]
   299                              <1> 
   300                              <1>         ;-----------------------------------------
   301                              <1>         ; 【レジスタの復帰】
   302                              <1>         ;-----------------------------------------
   303 00000EA6 5B                  <1>         pop ebx
   304 00000EA7 58                  <1>         pop eax
   305                              <1> 
   306                              <1>         ;-----------------------------------------
   307                              <1>         ; 【スタックフレームの破棄】
   308                              <1>         ;-----------------------------------------
   309 00000EA8 89EC                <1>         mov esp, ebp
   310 00000EAA 5D                  <1>         pop ebp
   311                              <1> 
   312 00000EAB C3                  <1>         ret
   179                                  
   180                                  ;***********************************************************
   181                                  ;  モジュール
   182                                  ;***********************************************************
   183                                  %include "../modules/protect/vga.s"
     1                              <1> vga_set_read_plane:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 00000EAC 55                  <1>         push ebp
     6 00000EAD 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;-----------------------------------------
     9                              <1>         ; 【レジスタの保存】
    10                              <1>         ;-----------------------------------------
    11 00000EAF 50                  <1>         push eax
    12 00000EB0 52                  <1>         push edx
    13                              <1> 
    14                              <1>         ;-----------------------------------------
    15                              <1>         ; 読み込みプレーンの選択
    16                              <1>         ;-----------------------------------------
    17 00000EB1 8A6508              <1>         mov ah, [ebp + 8]
    18 00000EB4 80E403              <1>         and ah, 0x03
    19 00000EB7 B004                <1>         mov al, 0x04
    20 00000EB9 66BACE03            <1>         mov dx, 0x03CE
    21 00000EBD 66EF                <1>         out dx, ax
    22                              <1> 
    23                              <1>         ;-----------------------------------------
    24                              <1>         ; 【レジスタの復帰】
    25                              <1>         ;-----------------------------------------
    26 00000EBF 5A                  <1>         pop edx
    27 00000EC0 58                  <1>         pop eax
    28                              <1> 
    29                              <1>         ;-----------------------------------------
    30                              <1>         ; 【スタックフレームの破棄】
    31                              <1>         ;-----------------------------------------
    32 00000EC1 89EC                <1>         mov esp, ebp
    33 00000EC3 5D                  <1>         pop ebp
    34                              <1> 
    35 00000EC4 C3                  <1>         ret
    36                              <1> 
    37                              <1> vga_set_write_plane:
    38                              <1>         ;-----------------------------------------
    39                              <1>         ; 【スタックフレームの構築】
    40                              <1>         ;-----------------------------------------
    41 00000EC5 55                  <1>         push ebp
    42 00000EC6 89E5                <1>         mov ebp, esp
    43                              <1> 
    44                              <1>         ;-----------------------------------------
    45                              <1>         ; 【レジスタの保存】
    46                              <1>         ;-----------------------------------------
    47 00000EC8 50                  <1>         push eax
    48 00000EC9 52                  <1>         push edx
    49                              <1> 
    50                              <1>         ;-----------------------------------------
    51                              <1>         ; 書き込みプレーンの選択
    52                              <1>         ;-----------------------------------------
    53 00000ECA 8A6508              <1>         mov ah, [ebp + 8]
    54 00000ECD 80E40F              <1>         and ah, 0x0F
    55 00000ED0 B002                <1>         mov al, 0x02
    56 00000ED2 66BAC403            <1>         mov dx, 0x03C4
    57 00000ED6 66EF                <1>         out dx, ax
    58                              <1> 
    59                              <1>         ;-----------------------------------------
    60                              <1>         ; 【レジスタの復帰】
    61                              <1>         ;-----------------------------------------
    62 00000ED8 5A                  <1>         pop edx
    63 00000ED9 58                  <1>         pop eax
    64                              <1> 
    65                              <1>         ;-----------------------------------------
    66                              <1>         ; 【スタックフレームの破棄】
    67                              <1>         ;-----------------------------------------
    68 00000EDA 89EC                <1>         mov esp, ebp
    69 00000EDC 5D                  <1>         pop ebp
    70                              <1> 
    71 00000EDD C3                  <1>         ret
    72                              <1> 
    73                              <1> vram_font_copy:
    74                              <1>         ;-----------------------------------------
    75                              <1>         ; 【スタックフレームの構築】
    76                              <1>         ;-----------------------------------------
    77 00000EDE 55                  <1>         push ebp
    78 00000EDF 89E5                <1>         mov ebp, esp
    79                              <1> 
    80                              <1>         ;-----------------------------------------
    81                              <1>         ; 【レジスタの保存】
    82                              <1>         ;-----------------------------------------
    83 00000EE1 50                  <1>         push eax
    84 00000EE2 53                  <1>         push ebx
    85 00000EE3 51                  <1>         push ecx
    86 00000EE4 52                  <1>         push edx
    87 00000EE5 56                  <1>         push esi
    88 00000EE6 57                  <1>         push edi
    89                              <1> 
    90                              <1>         ;-----------------------------------------
    91                              <1>         ; マスクデータの作成
    92                              <1>         ;-----------------------------------------
    93 00000EE7 8B7508              <1>         mov esi, [ebp + 8]
    94 00000EEA 8B7D0C              <1>         mov edi, [ebp + 12]
    95 00000EED 0FB64510            <1>         movzx eax, byte [ebp + 16]
    96 00000EF1 0FB75D14            <1>         movzx ebx, word [ebp + 20]
    97                              <1> 
    98 00000EF5 84C7                <1>         test bh, al
    99 00000EF7 0F94C6              <1>         setz dh
   100 00000EFA FECE                <1>         dec dh
   101                              <1> 
   102 00000EFC 84C3                <1>         test bl, al
   103 00000EFE 0F94C2              <1>         setz dl
   104 00000F01 FECA                <1>         dec dl
   105                              <1> 
   106                              <1>         ;-----------------------------------------
   107                              <1>         ; 16ドットフォントのコピー
   108                              <1>         ;-----------------------------------------
   109 00000F03 FC                  <1>         cld
   110                              <1> 
   111 00000F04 B910000000          <1>         mov ecx, 16
   112                              <1> .10L:
   113                              <1> 
   114                              <1>         ;-----------------------------------------
   115                              <1>         ; フォントマスクの作成
   116                              <1>         ;-----------------------------------------
   117 00000F09 AC                  <1>         lodsb
   118 00000F0A 88C4                <1>         mov ah, al
   119 00000F0C F6D4                <1>         not ah
   120                              <1> 
   121                              <1>         ;-----------------------------------------
   122                              <1>         ; 前景色
   123                              <1>         ;-----------------------------------------
   124 00000F0E 20D0                <1>         and al, dl
   125                              <1> 
   126                              <1>         ;-----------------------------------------
   127                              <1>         ; 背景色
   128                              <1>         ;-----------------------------------------
   129 00000F10 F7C310000000        <1>         test ebx, 0x0010
   130 00000F16 7404                <1>         jz .11F
   131 00000F18 2227                <1>         and ah, [edi]
   132 00000F1A EB02                <1>         jmp .11E
   133                              <1> .11F:
   134 00000F1C 20F4                <1>         and ah, dh
   135                              <1> .11E:
   136                              <1> 
   137                              <1>         ;-----------------------------------------
   138                              <1>         ; 前景色と背景色をコピー
   139                              <1>         ;-----------------------------------------
   140 00000F1E 08E0                <1>         or al, ah
   141                              <1> 
   142                              <1>         ;-----------------------------------------
   143                              <1>         ; 新しい値を出力
   144                              <1>         ;-----------------------------------------
   145 00000F20 8807                <1>         mov [edi], al
   146                              <1> 
   147 00000F22 83C750              <1>         add edi, 80
   148 00000F25 E2E2                <1>         loop .10L
   149                              <1> .10E:
   150                              <1> 
   151                              <1>         ;-----------------------------------------
   152                              <1>         ; 【レジスタの復帰】
   153                              <1>         ;-----------------------------------------
   154 00000F27 5F                  <1>         pop edi
   155 00000F28 5E                  <1>         pop esi
   156 00000F29 5A                  <1>         pop edx
   157 00000F2A 59                  <1>         pop ecx
   158 00000F2B 5B                  <1>         pop ebx
   159 00000F2C 58                  <1>         pop eax
   160                              <1> 
   161                              <1>         ;-----------------------------------------
   162                              <1>         ; 【スタックフレームの破棄】
   163                              <1>         ;-----------------------------------------
   164 00000F2D 89EC                <1>         mov esp, ebp
   165 00000F2F 5D                  <1>         pop ebp
   166                              <1> 
   167 00000F30 C3                  <1>         ret
   168                              <1> 
   169                              <1> vram_bit_copy:
   170                              <1>         ;-----------------------------------------
   171                              <1>         ; 【スタックフレームの構築】
   172                              <1>         ;-----------------------------------------
   173 00000F31 55                  <1>         push ebp
   174 00000F32 89E5                <1>         mov ebp, esp
   175                              <1> 
   176                              <1>         ;-----------------------------------------
   177                              <1>         ; 【レジスタの保存】
   178                              <1>         ;-----------------------------------------
   179 00000F34 50                  <1>         push eax
   180 00000F35 53                  <1>         push ebx
   181 00000F36 57                  <1>         push edi
   182                              <1> 
   183                              <1>         ;-----------------------------------------
   184                              <1>         ; ビットのコピー
   185                              <1>         ;-----------------------------------------
   186 00000F37 8B7D0C              <1>         mov edi, [ebp + 12]
   187 00000F3A 0FB64510            <1>         movzx eax, byte [ebp + 16]
   188 00000F3E 0FB75D14            <1>         movzx ebx, word [ebp + 20]
   189                              <1> 
   190 00000F42 84C3                <1>         test bl, al
   191 00000F44 0F94C3              <1>         setz bl
   192 00000F47 FECB                <1>         dec bl
   193                              <1> 
   194                              <1>         ;-----------------------------------------
   195                              <1>         ; 反転処理
   196                              <1>         ;-----------------------------------------
   197 00000F49 8A4508              <1>         mov al, [ebp + 8]
   198 00000F4C 88C4                <1>         mov ah, al
   199 00000F4E F6D4                <1>         not ah
   200                              <1> 
   201                              <1>         ;-----------------------------------------
   202                              <1>         ; 描画処理
   203                              <1>         ;-----------------------------------------
   204 00000F50 2227                <1>         and ah, [edi]
   205 00000F52 20D8                <1>         and al, bl
   206 00000F54 08E0                <1>         or al, ah
   207 00000F56 8807                <1>         mov [edi], al
   208                              <1> 
   209                              <1>         ;-----------------------------------------
   210                              <1>         ; 【レジスタの復帰】
   211                              <1>         ;-----------------------------------------
   212 00000F58 5F                  <1>         pop edi
   213 00000F59 5B                  <1>         pop ebx
   214 00000F5A 58                  <1>         pop eax
   215                              <1> 
   216                              <1>         ;-----------------------------------------
   217                              <1>         ; 【スタックフレームの破棄】
   218                              <1>         ;-----------------------------------------
   219 00000F5B 89EC                <1>         mov esp, ebp
   220 00000F5D 5D                  <1>         pop ebp
   221                              <1> 
   222 00000F5E C3                  <1>         ret
   184                                  %include "../modules/protect/draw_char.s"
     1                              <1> draw_char:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 00000F5F 55                  <1>         push ebp
     6 00000F60 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;-----------------------------------------
     9                              <1>         ; 【レジスタの保存】
    10                              <1>         ;-----------------------------------------
    11 00000F62 50                  <1>         push eax
    12 00000F63 53                  <1>         push ebx
    13 00000F64 51                  <1>         push ecx
    14 00000F65 52                  <1>         push edx
    15 00000F66 56                  <1>         push esi
    16 00000F67 57                  <1>         push edi
    17                              <1> 
    18                              <1>         ;-----------------------------------------
    19                              <1>         ; テストアンドセット
    20                              <1>         ;-----------------------------------------
    21                              <1> %ifdef	USE_TEST_AND_SET
    22 00000F68 68[3C100000]E8AD08- <1>         cdecl test_and_set, IN_USE
    22 00000F70 00006683C404        <1>
    23                              <1> %endif
    24                              <1> 
    25                              <1>         ;-----------------------------------------
    26                              <1>         ; コピー元フォントアドレスを設定
    27                              <1>         ;-----------------------------------------
    28 00000F76 0FB67514            <1>         movzx esi, byte [ebp + 20]
    29 00000F7A C1E604              <1>         shl esi, 4
    30 00000F7D 0335[CC020000]      <1>         add esi, [FONT_ADR]
    31                              <1> 
    32                              <1>         ;-----------------------------------------
    33                              <1>         ; コピー先アドレスを取得
    34                              <1>         ; Adr = 0xA0000 + (640 / 8 * 16) * y + x
    35                              <1>         ;-----------------------------------------
    36 00000F83 8B7D0C              <1>         mov edi, [ebp + 12]
    37 00000F86 C1E708              <1>         shl edi, 8
    38 00000F89 8DBCBF00000A00      <1>         lea edi, [edi * 4 + edi + 0xA0000]
    39 00000F90 037D08              <1>         add edi, [ebp + 8]
    40                              <1> 
    41                              <1>         ;-----------------------------------------
    42                              <1>         ; 1文字分のフォントを出力
    43                              <1>         ;-----------------------------------------
    44 00000F93 0FB75D10            <1>         movzx ebx, word[ebp + 16]
    45                              <1> 
    46 00000F97 6A03E80EFFFFFF6683- <1>         cdecl vga_set_read_plane, 0x03
    46 00000FA0 C404                <1>
    47 00000FA2 6A08E81CFFFFFF6683- <1>         cdecl vga_set_write_plane, 0x08
    47 00000FAB C404                <1>
    48 00000FAD 536A085756E827FFFF- <1>         cdecl vram_font_copy, esi, edi, 0x08, ebx
    48 00000FB6 FF6683C410          <1>
    49                              <1> 
    50 00000FBB 6A02E8EAFEFFFF6683- <1>         cdecl vga_set_read_plane, 0x02
    50 00000FC4 C404                <1>
    51 00000FC6 6A04E8F8FEFFFF6683- <1>         cdecl vga_set_write_plane, 0x04
    51 00000FCF C404                <1>
    52 00000FD1 536A045756E803FFFF- <1>         cdecl vram_font_copy, esi, edi, 0x04, ebx
    52 00000FDA FF6683C410          <1>
    53                              <1> 
    54 00000FDF 6A01E8C6FEFFFF6683- <1>         cdecl vga_set_read_plane, 0x01
    54 00000FE8 C404                <1>
    55 00000FEA 6A02E8D4FEFFFF6683- <1>         cdecl vga_set_write_plane, 0x02
    55 00000FF3 C404                <1>
    56 00000FF5 536A025756E8DFFEFF- <1>         cdecl vram_font_copy, esi, edi, 0x02, ebx
    56 00000FFE FF6683C410          <1>
    57                              <1> 
    58 00001003 6A00E8A2FEFFFF6683- <1>         cdecl vga_set_read_plane, 0x00
    58 0000100C C404                <1>
    59 0000100E 6A01E8B0FEFFFF6683- <1>         cdecl vga_set_write_plane, 0x01
    59 00001017 C404                <1>
    60 00001019 536A015756E8BBFEFF- <1>         cdecl vram_font_copy, esi, edi, 0x01, ebx
    60 00001022 FF6683C410          <1>
    61                              <1> 
    62                              <1>         ;-----------------------------------------
    63                              <1>         ; 変数のクリア
    64                              <1>         ;-----------------------------------------
    65                              <1> %ifdef	USE_TEST_AND_SET
    66 00001027 C705[3C100000]0000- <1>         mov [IN_USE], dword 0
    66 0000102F 0000                <1>
    67                              <1> %endif
    68                              <1> 
    69                              <1>         ;-----------------------------------------
    70                              <1>         ; 【レジスタの復帰】
    71                              <1>         ;-----------------------------------------
    72 00001031 5F                  <1>         pop edi
    73 00001032 5E                  <1>         pop esi
    74 00001033 5A                  <1>         pop edx
    75 00001034 59                  <1>         pop ecx
    76 00001035 5B                  <1>         pop ebx
    77 00001036 58                  <1>         pop eax
    78                              <1> 
    79                              <1>         ;-----------------------------------------
    80                              <1>         ; 【スタックフレームの破棄】
    81                              <1>         ;-----------------------------------------
    82 00001037 89EC                <1>         mov esp, ebp
    83 00001039 5D                  <1>         pop ebp
    84                              <1> 
    85 0000103A C3                  <1>         ret
    86                              <1> 
    87 0000103B 00                  <1> ALIGN 4, db 0
    88 0000103C 00000000            <1> IN_USE:	dd 0
   185                                  %include "../modules/protect/draw_font.s"
     1                              <1> draw_font:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 00001040 55                  <1>         push ebp
     6 00001041 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;-----------------------------------------
     9                              <1>         ; 【レジスタの保存】
    10                              <1>         ;-----------------------------------------
    11 00001043 50                  <1>         push eax
    12 00001044 53                  <1>         push ebx
    13 00001045 51                  <1>         push ecx
    14 00001046 52                  <1>         push edx
    15 00001047 56                  <1>         push esi
    16 00001048 57                  <1>         push edi
    17                              <1> 
    18                              <1>         ;-----------------------------------------
    19                              <1>         ; 基準となる位置をレジスタに保存
    20                              <1>         ;-----------------------------------------
    21 00001049 8B7508              <1>         mov esi, [ebp + 8]
    22 0000104C 8B7D0C              <1>         mov edi, [ebp + 12]
    23                              <1> 
    24                              <1>         ;-----------------------------------------
    25                              <1>         ; フォントを一覧表示する
    26                              <1>         ;-----------------------------------------
    27 0000104F B900000000          <1>         mov ecx, 0
    28                              <1> .10L:
    29 00001054 81F900010000        <1>         cmp ecx, 256
    30 0000105A 731F                <1>         jae .10E
    31                              <1> 
    32 0000105C 89C8                <1>         mov eax, ecx
    33 0000105E 83E00F              <1>         and eax, 0x0F
    34 00001061 01F0                <1>         add eax, esi
    35                              <1> 
    36 00001063 89CB                <1>         mov ebx, ecx
    37 00001065 C1EB04              <1>         shr ebx, 4
    38 00001068 01FB                <1>         add ebx, edi
    39                              <1> 
    40 0000106A 516A075350E8EBFEFF- <1>         cdecl draw_char, eax, ebx, 0x07, ecx
    40 00001073 FF6683C410          <1>
    41                              <1> 
    42 00001078 41                  <1>         inc ecx
    43 00001079 EBD9                <1>         jmp .10L
    44                              <1> .10E:
    45                              <1> 
    46                              <1>         ;-----------------------------------------
    47                              <1>         ; 【レジスタの復帰】
    48                              <1>         ;-----------------------------------------
    49 0000107B 5F                  <1>         pop edi
    50 0000107C 5E                  <1>         pop esi
    51 0000107D 5A                  <1>         pop edx
    52 0000107E 59                  <1>         pop ecx
    53 0000107F 5B                  <1>         pop ebx
    54 00001080 58                  <1>         pop eax
    55                              <1> 
    56                              <1>         ;-----------------------------------------
    57                              <1>         ; 【スタックフレームの破棄】
    58                              <1>         ;-----------------------------------------
    59 00001081 89EC                <1>         mov esp, ebp
    60 00001083 5D                  <1>         pop ebp
    61                              <1> 
    62 00001084 C3                  <1>         ret
   186                                  %include "../modules/protect/draw_str.s"
     1                              <1> draw_str:
     2                              <1>     ;---------------------------
     3                              <1>     ; スタックフレーム構築
     4                              <1>     ;---------------------------
     5 00001085 55                  <1>     push ebp
     6 00001086 89E5                <1>     mov ebp, esp
     7                              <1> 
     8                              <1>     ;---------------------------
     9                              <1>     ; レジスタの保存
    10                              <1>     ;---------------------------
    11 00001088 50                  <1>     push eax
    12 00001089 53                  <1>     push ebx
    13 0000108A 51                  <1>     push ecx
    14 0000108B 52                  <1>     push edx
    15 0000108C 56                  <1>     push esi
    16                              <1> 
    17                              <1>     ;---------------------------
    18                              <1>     ; 文字列を描画する
    19                              <1>     ;---------------------------
    20 0000108D 8B4D08              <1>     mov ecx, [ebp + 8]              ; ECX = 列;
    21 00001090 8B550C              <1>     mov edx, [ebp + 12]             ; EDX = 行;
    22 00001093 0FB75D10            <1>     movzx ebx, word [ebp + 16]      ; EBX = 表示色;
    23 00001097 8B7514              <1>     mov esi, [ebp + 20]             ; ESI = 文字列へのアドレス;
    24                              <1> 
    25 0000109A FC                  <1>     cld                             ; DF = 0; // アドレス加算
    26                              <1> .10L:                               ; do
    27                              <1>                                     ; {
    28 0000109B AC                  <1>     lodsb                           ;   AL = *ESI++; // 文字を取得
    29 0000109C 3C00                <1>     cmp al, 0                       ;   if (0 == AL)
    30 0000109E 741A                <1>     je .10E                         ;       break;
    31                              <1> 
    32                              <1> %ifdef USE_SYSTEM_CALL
    33 000010A0 CD81                <1>     int 0x81                            ; sys_call(1, X, Y, 色, 文字)
    34                              <1> %else
    35                              <1>     cdecl draw_char, ecx, edx, ebx, eax ; draw_char();
    36                              <1> %endif
    37                              <1> 
    38 000010A2 41                  <1>     inc ecx                         ;   ECX = 0; // 列を加算
    39 000010A3 83F950              <1>     cmp ecx, 80                     ;   if (80 <= ECX) // 80文字以上?
    40 000010A6 7C10                <1>     jl .12E                         ;   {
    41 000010A8 B900000000          <1>     mov ecx, 0                      ;       ECX = 0; // 列を初期化
    42 000010AD 42                  <1>     inc edx                         ;       EDX++; // 行を加算
    43 000010AE 83FA1E              <1>     cmp edx, 30                     ;       if (30 <= EDX) // 30行以上?
    44 000010B1 7C05                <1>     jl .12E                         ;       {
    45 000010B3 BA00000000          <1>     mov edx, 0                      ;           EDX = 0; // 行を初期化
    46                              <1>                                     ;       }
    47                              <1> .12E:                               ;   }
    48 000010B8 EBE1                <1>     jmp .10L
    49                              <1> .10E:                               ; } while (1);
    50                              <1> 
    51                              <1>     ;-----------------------------------------
    52                              <1>     ; 【レジスタの復帰】
    53                              <1>     ;-----------------------------------------
    54 000010BA 5E                  <1>     pop esi
    55 000010BB 5A                  <1>     pop edx
    56 000010BC 59                  <1>     pop ecx
    57 000010BD 5B                  <1>     pop ebx
    58 000010BE 58                  <1>     pop eax
    59                              <1> 
    60                              <1>     ;-----------------------------------------
    61                              <1>     ; 【スタックフレームの破棄】
    62                              <1>     ;-----------------------------------------
    63 000010BF 89EC                <1>     mov esp, ebp
    64 000010C1 5D                  <1>     pop ebp
    65                              <1> 
    66 000010C2 C3                  <1>     ret
   187                                  %include "../modules/protect/draw_color_bar.s"
     1                              <1> draw_color_bar:
     2                              <1>     ;---------------------------
     3                              <1>     ; スタックフレーム構築
     4                              <1>     ;---------------------------
     5 000010C3 55                  <1>     push ebp
     6 000010C4 89E5                <1>     mov ebp, esp
     7                              <1> 
     8                              <1>     ;---------------------------
     9                              <1>     ; レジスタの保存
    10                              <1>     ;---------------------------
    11 000010C6 50                  <1>     push eax
    12 000010C7 53                  <1>     push ebx
    13 000010C8 51                  <1>     push ecx
    14 000010C9 52                  <1>     push edx
    15 000010CA 56                  <1>     push esi
    16                              <1> 
    17                              <1>     ;-----------------------------------------
    18                              <1>     ; 基準となる位置をレジスタに保存
    19                              <1>     ;-----------------------------------------
    20 000010CB 8B7508              <1>     mov esi, [ebp + 8]
    21 000010CE 8B7D0C              <1>     mov edi, [ebp + 12]
    22                              <1> 
    23                              <1>     ;---------------------------
    24                              <1>     ; カラーバーを表示
    25                              <1>     ;---------------------------
    26 000010D1 B900000000          <1>     mov ecx, 0                      ; for (ECX = 0;
    27                              <1> .10L:
    28 000010D6 83F910              <1>     cmp ecx, 16                     ;      ECX < 16;
    29 000010D9 732E                <1>     jae .10E                        ;
    30                              <1>                                     ;      ECX++)
    31                              <1>                                     ; {
    32 000010DB 89C8                <1>     mov eax, ecx                    ;   EAX = ECX;
    33 000010DD 83E001              <1>     and eax, 0x01                   ;   EAX &= 0x01;
    34 000010E0 C1E003              <1>     shl eax, 3                      ;   EAX *= 8; // 8文字分乗算
    35 000010E3 01F0                <1>     add eax, esi                    ;   EAX += X;
    36                              <1> 
    37 000010E5 89CB                <1>     mov ebx, ecx                    ;   EBX = ECX;
    38 000010E7 D1EB                <1>     shr ebx, 1                      ;   EBX /= 2
    39 000010E9 01FB                <1>     add ebx, edi                    ;   EBX += Y;
    40                              <1> 
    41 000010EB 89CA                <1>     mov edx, ecx                    ;   EDX = ECX;
    42 000010ED D1E2                <1>     shl edx, 1                      ;   EDX /= 2;
    43 000010EF 8B92[1C110000]      <1>     mov edx, [.t0 + edx]            ;   EDX += Y;
    44                              <1> 
    45 000010F5 68[13110000]525350- <1>     cdecl draw_str, eax, ebx, edx, .s0 ; draw_str();
    45 000010FD E883FFFFFF6683C410  <1>
    46                              <1> 
    47 00001106 41                  <1>     inc ecx                         ; // for (...ECX++)
    48 00001107 EBCD                <1>     jmp .10L
    49                              <1> .10E:                               ; }
    50                              <1> 
    51                              <1>     ;-----------------------------------------
    52                              <1>     ; 【レジスタの復帰】
    53                              <1>     ;-----------------------------------------
    54 00001109 5F                  <1>     pop edi
    55 0000110A 5E                  <1>     pop esi
    56 0000110B 5A                  <1>     pop edx
    57 0000110C 59                  <1>     pop ecx
    58 0000110D 5B                  <1>     pop ebx
    59 0000110E 58                  <1>     pop eax
    60                              <1> 
    61                              <1>     ;-----------------------------------------
    62                              <1>     ; 【スタックフレームの破棄】
    63                              <1>     ;-----------------------------------------
    64 0000110F 89EC                <1>     mov esp, ebp
    65 00001111 5D                  <1>     pop ebp
    66                              <1> 
    67 00001112 C3                  <1>     ret
    68                              <1> 
    69 00001113 202020202020202000  <1> .s0:    db '        ', 0
    70 0000111C 00000008            <1> .t0:    dw 0x0000, 0x0800
    71 00001120 00010009            <1>         dw 0x0100, 0x0900
    72 00001124 0002000A            <1>         dw 0x0200, 0x0A00
    73 00001128 0003000B            <1>         dw 0x0300, 0x0B00
    74 0000112C 0004000C            <1>         dw 0x0400, 0x0C00
    75 00001130 0005000D            <1>         dw 0x0500, 0x0D00
    76 00001134 0006000E            <1>         dw 0x0600, 0x0E00
    77 00001138 0007000F            <1>         dw 0x0700, 0x0F00
   188                                  %include "../modules/protect/draw_pixel.s"
     1                              <1> draw_pixel:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 0000113C 55                  <1>         push ebp
     6 0000113D 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;-----------------------------------------
     9                              <1>         ; 【レジスタの保存】
    10                              <1>         ;-----------------------------------------
    11 0000113F 50                  <1>         push eax
    12 00001140 53                  <1>         push ebx
    13 00001141 51                  <1>         push ecx
    14 00001142 57                  <1>         push edi
    15                              <1> 
    16                              <1>         ;-----------------------------------------
    17                              <1>         ; Y座標を80倍する(640/8)
    18                              <1>         ;-----------------------------------------
    19 00001143 8B7D0C              <1>         mov edi, [ebp + 12]
    20 00001146 C1E704              <1>         shl edi, 4
    21 00001149 8DBCBF00000A00      <1>         lea edi, [edi * 4 + edi + 0xA_0000]
    22                              <1> 
    23                              <1>         ;-----------------------------------------
    24                              <1>         ; X座標を1/8して加算
    25                              <1>         ;-----------------------------------------
    26 00001150 8B5D08              <1>         mov ebx, [ebp + 8]
    27 00001153 89D9                <1>         mov ecx, ebx
    28 00001155 C1EB03              <1>         shr ebx, 3
    29 00001158 01DF                <1>         add edi, ebx
    30                              <1> 
    31                              <1>         ;-----------------------------------------
    32                              <1>         ; X座標を8で割った余りからビット位置を計算
    33                              <1>         ; (0=0x80, 1=0x40, ..., 7=0x01)
    34                              <1>         ;-----------------------------------------
    35 0000115A 83E107              <1>         and ecx, 0x07
    36 0000115D BB80000000          <1>         mov ebx, 0x80
    37 00001162 D3EB                <1>         shr ebx, cl
    38                              <1> 
    39                              <1>         ;-----------------------------------------
    40                              <1>         ; 色指定
    41                              <1>         ;-----------------------------------------
    42 00001164 8B4D10              <1>         mov ecx, [ebp + 16]
    43                              <1> 
    44                              <1>         ;-----------------------------------------
    45                              <1>         ; プレーンごとに出力
    46                              <1>         ;-----------------------------------------
    47 00001167 6A03E83EFDFFFF6683- <1>         cdecl vga_set_read_plane, 0x03
    47 00001170 C404                <1>
    48 00001172 6A08E84CFDFFFF6683- <1>         cdecl vga_set_write_plane, 0x08
    48 0000117B C404                <1>
    49 0000117D 516A085753E8AAFDFF- <1>         cdecl vram_bit_copy, ebx, edi, 0x08, ecx
    49 00001186 FF6683C410          <1>
    50                              <1> 
    51 0000118B 6A02E81AFDFFFF6683- <1>         cdecl vga_set_read_plane, 0x02
    51 00001194 C404                <1>
    52 00001196 6A04E828FDFFFF6683- <1>         cdecl vga_set_write_plane, 0x04
    52 0000119F C404                <1>
    53 000011A1 516A045753E886FDFF- <1>         cdecl vram_bit_copy, ebx, edi, 0x04, ecx
    53 000011AA FF6683C410          <1>
    54                              <1> 
    55 000011AF 6A01E8F6FCFFFF6683- <1>         cdecl vga_set_read_plane, 0x01
    55 000011B8 C404                <1>
    56 000011BA 6A02E804FDFFFF6683- <1>         cdecl vga_set_write_plane, 0x02
    56 000011C3 C404                <1>
    57 000011C5 516A025753E862FDFF- <1>         cdecl vram_bit_copy, ebx, edi, 0x02, ecx
    57 000011CE FF6683C410          <1>
    58                              <1> 
    59 000011D3 6A00E8D2FCFFFF6683- <1>         cdecl vga_set_read_plane, 0x00
    59 000011DC C404                <1>
    60 000011DE 6A01E8E0FCFFFF6683- <1>         cdecl vga_set_write_plane, 0x01
    60 000011E7 C404                <1>
    61 000011E9 516A015753E83EFDFF- <1>         cdecl vram_bit_copy, ebx, edi, 0x01, ecx
    61 000011F2 FF6683C410          <1>
    62                              <1> 
    63                              <1>         ;-----------------------------------------
    64                              <1>         ; 【レジスタの復帰】
    65                              <1>         ;-----------------------------------------
    66 000011F7 5F                  <1>         pop edi
    67 000011F8 59                  <1>         pop ecx
    68 000011F9 5B                  <1>         pop ebx
    69 000011FA 58                  <1>         pop eax
    70                              <1> 
    71                              <1>         ;-----------------------------------------
    72                              <1>         ; 【スタックフレームの破棄】
    73                              <1>         ;-----------------------------------------
    74 000011FB 89EC                <1>         mov esp, ebp
    75 000011FD 5D                  <1>         pop ebp
    76                              <1> 
    77 000011FE C3                  <1>         ret
    78                              <1> 
    79 000011FF 202020202020202000  <1> .s0:    db '        ', 0
    80 00001208 00000008            <1> .t0:    dw 0x0000, 0x0800
    81 0000120C 00010009            <1>         dw 0x0100, 0x0900
    82 00001210 0002000A            <1>         dw 0x0200, 0x0A00
    83 00001214 0003000B            <1>         dw 0x0300, 0x0B00
    84 00001218 0004000C            <1>         dw 0x0400, 0x0C00
    85 0000121C 0005000D            <1>         dw 0x0500, 0x0D00
    86 00001220 0006000E            <1>         dw 0x0600, 0x0E00
    87 00001224 0007000F            <1>         dw 0x0700, 0x0F00
   189                                  %include "../modules/protect/draw_line.s"
     1                              <1> draw_line:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 00001228 55                  <1>         push ebp
     6 00001229 89E5                <1>         mov ebp, esp
     7                              <1> 
     8 0000122B 6A00                <1>         push dword 0
     9 0000122D 6A00                <1>         push dword 0
    10 0000122F 6A00                <1>         push dword 0
    11 00001231 6A00                <1>         push dword 0
    12 00001233 6A00                <1>         push dword 0
    13 00001235 6A00                <1>         push dword 0
    14 00001237 6A00                <1>         push dword 0
    15                              <1> 
    16                              <1>         ;-----------------------------------------
    17                              <1>         ; 【レジスタの保存】
    18                              <1>         ;-----------------------------------------
    19 00001239 50                  <1>         push eax
    20 0000123A 53                  <1>         push ebx
    21 0000123B 51                  <1>         push ecx
    22 0000123C 52                  <1>         push edx
    23 0000123D 56                  <1>         push esi
    24 0000123E 57                  <1>         push edi
    25                              <1> 
    26                              <1>         ;-----------------------------------------
    27                              <1>         ; 幅を計算(X軸)
    28                              <1>         ;-----------------------------------------
    29 0000123F 8B4508              <1>         mov eax, [ebp + 8]
    30 00001242 8B5D10              <1>         mov ebx, [ebp + 16]
    31 00001245 29C3                <1>         sub ebx, eax
    32 00001247 7D09                <1>         jge .10F
    33                              <1> 
    34 00001249 F7DB                <1>         neg ebx
    35 0000124B BEFFFFFFFF          <1>         mov esi, -1
    36 00001250 EB05                <1>         jmp .10E
    37                              <1> .10F:
    38 00001252 BE01000000          <1>         mov esi, 1
    39                              <1> .10E:
    40                              <1> 
    41                              <1>         ;-----------------------------------------
    42                              <1>         ; 高さを計算(Y軸)
    43                              <1>         ;-----------------------------------------
    44 00001257 8B4D0C              <1>         mov ecx, [ebp + 12]
    45 0000125A 8B5514              <1>         mov edx, [ebp + 20]
    46 0000125D 29CA                <1>         sub edx, ecx
    47 0000125F 7D09                <1>         jge .20F
    48                              <1> 
    49 00001261 F7DA                <1>         neg edx
    50 00001263 BFFFFFFFFF          <1>         mov edi, -1
    51 00001268 EB05                <1>         jmp .20E
    52                              <1> .20F:
    53 0000126A BF01000000          <1>         mov edi, 1
    54                              <1> .20E:
    55                              <1> 
    56                              <1>         ;-----------------------------------------
    57                              <1>         ; X軸
    58                              <1>         ;-----------------------------------------
    59 0000126F 8945F8              <1>         mov [ebp - 8], eax
    60 00001272 895DF4              <1>         mov [ebp - 12], ebx
    61 00001275 8975F0              <1>         mov [ebp - 16], esi
    62                              <1> 
    63                              <1>         ;-----------------------------------------
    64                              <1>         ; Y軸
    65                              <1>         ;-----------------------------------------
    66 00001278 894DEC              <1>         mov [ebp - 20], ecx
    67 0000127B 8955E8              <1>         mov [ebp - 24], edx
    68 0000127E 897DE4              <1>         mov [ebp - 28], edi
    69                              <1> 
    70                              <1>         ;-----------------------------------------
    71                              <1>         ; 基準軸を決める
    72                              <1>         ;-----------------------------------------
    73 00001281 39D3                <1>         cmp ebx, edx
    74 00001283 7F08                <1>         jg .22F
    75                              <1> 
    76 00001285 8D75EC              <1>         lea esi, [ebp - 20]
    77 00001288 8D7DF8              <1>         lea edi, [ebp - 8]
    78                              <1> 
    79 0000128B EB06                <1>         jmp .22E
    80                              <1> .22F:
    81 0000128D 8D75F8              <1>         lea esi, [ebp - 8]
    82 00001290 8D7DEC              <1>         lea edi, [ebp - 20]
    83                              <1> .22E:
    84                              <1> 
    85                              <1>         ;-----------------------------------------
    86                              <1>         ; 繰り返し回数(基準軸のドット数)
    87                              <1>         ;-----------------------------------------
    88 00001293 8B4EFC              <1>         mov ecx, [esi - 4]
    89 00001296 83F900              <1>         cmp ecx, 0
    90 00001299 7505                <1>         jnz .30E
    91 0000129B B901000000          <1>         mov ecx, 1
    92                              <1> .30E:
    93                              <1> 
    94                              <1>         ;-----------------------------------------
    95                              <1>         ; 線を描画
    96                              <1>         ;-----------------------------------------
    97                              <1> .50L:
    98                              <1> 
    99                              <1> %ifdef  USE_SYSTEM_CALL
   100 000012A0 89C8                <1>         mov eax, ecx
   101                              <1> 
   102 000012A2 8B5D18              <1>         mov ebx, [ebp + 24]
   103 000012A5 8B4DF8              <1>         mov ecx, [ebp - 8]
   104 000012A8 8B55EC              <1>         mov edx, [ebp - 20]
   105 000012AB CD82                <1>         int 0x82
   106                              <1> 
   107 000012AD 89C1                <1>         mov ecx, eax
   108                              <1> %else
   109                              <1>         cdecl draw_pixel, dword [ebp - 8], dword [ebp - 20], dword [ebp + 24]
   110                              <1> %endif
   111                              <1> 
   112 000012AF 8B46F8              <1>         mov eax, [esi - 8]
   113 000012B2 0106                <1>         add [esi - 0], eax
   114                              <1> 
   115 000012B4 8B45FC              <1>         mov eax, [ebp - 4]
   116 000012B7 0347FC              <1>         add eax, [edi - 4]
   117 000012BA 8B5EFC              <1>         mov ebx, [esi - 4]
   118                              <1> 
   119 000012BD 39D8                <1>         cmp eax, ebx
   120 000012BF 7C07                <1>         jl .52E
   121 000012C1 29D8                <1>         sub eax, ebx
   122                              <1> 
   123 000012C3 8B5FF8              <1>         mov ebx, [edi - 8]
   124 000012C6 011F                <1>         add [edi - 0], ebx
   125                              <1> .52E:
   126 000012C8 8945FC              <1>         mov [ebp - 4], eax
   127                              <1> 
   128 000012CB E2D3                <1>         loop .50L
   129                              <1> .50E:
   130                              <1> 
   131                              <1>         ;-----------------------------------------
   132                              <1>         ; 【レジスタの復帰】
   133                              <1>         ;-----------------------------------------
   134 000012CD 5F                  <1>         pop edi
   135 000012CE 5E                  <1>         pop esi
   136 000012CF 5A                  <1>         pop edx
   137 000012D0 59                  <1>         pop ecx
   138 000012D1 5B                  <1>         pop ebx
   139 000012D2 58                  <1>         pop eax
   140                              <1> 
   141                              <1>         ;-----------------------------------------
   142                              <1>         ; 【スタックフレームの破棄】
   143                              <1>         ;-----------------------------------------
   144 000012D3 89EC                <1>         mov esp, ebp
   145 000012D5 5D                  <1>         pop ebp
   146                              <1> 
   147 000012D6 C3                  <1>         ret
   148                              <1> 
   149 000012D7 202020202020202000  <1> .s0:    db '        ', 0
   150 000012E0 00000008            <1> .t0:    dw 0x0000, 0x0800
   151 000012E4 00010009            <1>         dw 0x0100, 0x0900
   152 000012E8 0002000A            <1>         dw 0x0200, 0x0A00
   153 000012EC 0003000B            <1>         dw 0x0300, 0x0B00
   154 000012F0 0004000C            <1>         dw 0x0400, 0x0C00
   155 000012F4 0005000D            <1>         dw 0x0500, 0x0D00
   156 000012F8 0006000E            <1>         dw 0x0600, 0x0E00
   157 000012FC 0007000F            <1>         dw 0x0700, 0x0F00
   190                                  %include "../modules/protect/draw_rect.s"
     1                              <1> draw_rect:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 00001300 55                  <1>         push ebp
     6 00001301 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;-----------------------------------------
     9                              <1>         ; 【レジスタの保存】
    10                              <1>         ;-----------------------------------------
    11 00001303 50                  <1>         push eax
    12 00001304 53                  <1>         push ebx
    13 00001305 51                  <1>         push ecx
    14 00001306 52                  <1>         push edx
    15 00001307 56                  <1>         push esi
    16                              <1> 
    17                              <1>         ;-----------------------------------------
    18                              <1>         ; 引数の取得
    19                              <1>         ;-----------------------------------------
    20 00001308 8B4508              <1>         mov eax, [ebp + 8]
    21 0000130B 8B5D0C              <1>         mov ebx, [ebp + 12]
    22 0000130E 8B4D10              <1>         mov ecx, [ebp + 16]
    23 00001311 8B5514              <1>         mov edx, [ebp + 20]
    24 00001314 8B7518              <1>         mov esi, [ebp + 24]
    25                              <1> 
    26                              <1>         ;-----------------------------------------
    27                              <1>         ; 座標軸の大小を確定
    28                              <1>         ;-----------------------------------------
    29 00001317 39C8                <1>         cmp eax, ecx
    30 00001319 7C01                <1>         jl .10E
    31 0000131B 91                  <1>         xchg eax, ecx
    32                              <1> .10E:
    33 0000131C 39D3                <1>         cmp ebx, edx
    34 0000131E 7C02                <1>         jl .20E
    35 00001320 87DA                <1>         xchg ebx, edx
    36                              <1> .20E:
    37                              <1> 
    38                              <1>         ;-----------------------------------------
    39                              <1>         ; 矩形を描画
    40                              <1>         ;-----------------------------------------
    41 00001322 5653515350E8FCFEFF- <1>         cdecl draw_line, eax, ebx, ecx, ebx, esi
    41 0000132B FF6683C414          <1>
    42 00001330 5652505350E8EEFEFF- <1>         cdecl draw_line, eax, ebx, eax, edx, esi
    42 00001339 FF6683C414          <1>
    43                              <1> 
    44 0000133E 4A                  <1>         dec edx
    45 0000133F 5652515250E8DFFEFF- <1>         cdecl draw_line, eax, edx, ecx, edx, esi
    45 00001348 FF6683C414          <1>
    46 0000134D 42                  <1>         inc edx
    47                              <1> 
    48 0000134E 49                  <1>         dec ecx
    49 0000134F 5652515351E8CFFEFF- <1>         cdecl draw_line, ecx, ebx, ecx, edx, esi
    49 00001358 FF6683C414          <1>
    50                              <1> 
    51                              <1>         ;-----------------------------------------
    52                              <1>         ; 【レジスタの復帰】
    53                              <1>         ;-----------------------------------------
    54 0000135D 5E                  <1>         pop esi
    55 0000135E 5A                  <1>         pop edx
    56 0000135F 59                  <1>         pop ecx
    57 00001360 5B                  <1>         pop ebx
    58 00001361 58                  <1>         pop eax
    59                              <1> 
    60                              <1>         ;-----------------------------------------
    61                              <1>         ; 【スタックフレームの破棄】
    62                              <1>         ;-----------------------------------------
    63 00001362 89EC                <1>         mov esp, ebp
    64 00001364 5D                  <1>         pop ebp
    65                              <1> 
    66 00001365 C3                  <1>         ret
   191                                  %include "../modules/protect/itoa.s"
     1                              <1> itoa:
     2                              <1>         ;---------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;---------------------------------------
     5 00001366 55                  <1>         push ebp
     6 00001367 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;---------------------------------------
     9                              <1>         ; 【レジスタの保存】
    10                              <1>         ;---------------------------------------
    11 00001369 50                  <1>         push eax
    12 0000136A 53                  <1>         push ebx
    13 0000136B 51                  <1>         push ecx
    14 0000136C 52                  <1>         push edx
    15 0000136D 56                  <1>         push esi
    16 0000136E 57                  <1>         push edi
    17                              <1> 
    18                              <1>         ;---------------------------------------
    19                              <1>         ; 引数を取得
    20                              <1>         ;---------------------------------------
    21 0000136F 8B4508              <1>         mov eax, [ebp + 8]
    22 00001372 8B750C              <1>         mov esi, [ebp + 12]
    23 00001375 8B4D10              <1>         mov ecx, [ebp + 16]
    24                              <1> 
    25 00001378 89F7                <1>         mov edi, esi
    26 0000137A 01CF                <1>         add edi, ecx
    27 0000137C 4F                  <1>         dec edi
    28                              <1> 
    29 0000137D 8B5D18              <1>         mov ebx, [ebp + 24]
    30                              <1> 
    31                              <1>         ;---------------------------------------
    32                              <1>         ; 符号付き判定
    33                              <1>         ;---------------------------------------
    34 00001380 F7C301000000        <1>         test ebx, 0b0001
    35                              <1> .10Q:
    36 00001386 7408                <1>         je .10E
    37 00001388 83F800              <1>         cmp eax, 0
    38                              <1> .12Q:
    39 0000138B 7D03                <1>         jge .12E
    40 0000138D 83CB02              <1>         or ebx, 0b0010
    41                              <1> .12E:
    42                              <1> .10E:
    43                              <1> 
    44                              <1>         ;---------------------------------------
    45                              <1>         ; 符号出力判定
    46                              <1>         ;---------------------------------------
    47 00001390 F7C302000000        <1>         test ebx, 0b0010
    48                              <1> .20Q:
    49 00001396 7410                <1>         je .20E
    50 00001398 83F800              <1>         cmp eax, 0
    51                              <1> .22Q:
    52 0000139B 7D07                <1>         jge .22F
    53 0000139D F7D8                <1>         neg eax
    54 0000139F C6062D              <1>         mov [esi], byte '-'
    55 000013A2 EB03                <1>         jmp .22E
    56                              <1> .22F:
    57 000013A4 C6062B              <1>         mov [esi], byte '+'
    58                              <1> .22E:
    59 000013A7 49                  <1>         dec ecx
    60                              <1> .20E:
    61                              <1> 
    62                              <1>         ;---------------------------------------
    63                              <1>         ; ASCII 変換
    64                              <1>         ;---------------------------------------
    65 000013A8 8B5D14              <1>         mov ebx, [ebp + 20]
    66                              <1> .30L:
    67 000013AB BA00000000          <1>         mov edx, 0
    68 000013B0 F7F3                <1>         div ebx
    69                              <1> 
    70 000013B2 89D6                <1>         mov esi, edx
    71 000013B4 8A96[DF130000]      <1>         mov dl, byte [.ascii + esi]
    72                              <1> 
    73 000013BA 8817                <1>         mov [edi], dl
    74 000013BC 4F                  <1>         dec edi
    75                              <1> 
    76 000013BD 83F800              <1>         cmp eax, 0
    77 000013C0 E0E9                <1>         loopnz .30L
    78                              <1> .30E:
    79                              <1> 
    80                              <1>         ;---------------------------------------
    81                              <1>         ; 空欄を埋める
    82                              <1>         ;---------------------------------------
    83 000013C2 83F900              <1>         cmp ecx, 0
    84                              <1> .40Q:
    85 000013C5 740E                <1>         je .40E
    86 000013C7 B020                <1>         mov al, ' '
    87 000013C9 66837D1804          <1>         cmp [ebp + 24], word 0b0100
    88                              <1> .42Q:
    89 000013CE 7502                <1>         jne .42E
    90 000013D0 B030                <1>         mov al, '0'
    91                              <1> .42E:
    92 000013D2 FD                  <1>         std
    93 000013D3 F3AA                <1>         rep stosb
    94                              <1> .40E:
    95                              <1> 
    96                              <1>         ;---------------------------------------
    97                              <1>         ; 【レジスタの復帰】
    98                              <1>         ;---------------------------------------
    99 000013D5 5F                  <1>         pop edi
   100 000013D6 5E                  <1>         pop esi
   101 000013D7 5A                  <1>         pop edx
   102 000013D8 59                  <1>         pop ecx
   103 000013D9 5B                  <1>         pop ebx
   104 000013DA 58                  <1>         pop eax
   105                              <1> 
   106                              <1>         ;---------------------------------------
   107                              <1>         ; 【スタックフレームの破棄】
   108                              <1>         ;---------------------------------------
   109 000013DB 89EC                <1>         mov esp, ebp
   110 000013DD 5D                  <1>         pop ebp
   111                              <1> 
   112 000013DE C3                  <1>         ret
   113                              <1> 
   114 000013DF 303132333435363738- <1> .ascii db "0123456789ABCDEF"
   114 000013E8 39414243444546      <1>
   192                                  %include "../modules/protect/rtc.s"
     1                              <1> rtc_get_time:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 000013EF 55                  <1>         push ebp
     6 000013F0 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;-----------------------------------------
     9                              <1>         ; 【レジスタの保存】
    10                              <1>         ;-----------------------------------------
    11 000013F2 53                  <1>         push ebx
    12                              <1> 
    13                              <1>         ;-----------------------------------------
    14                              <1>         ; RTCの読み込み
    15                              <1>         ;-----------------------------------------
    16 000013F3 B00A                <1>         mov al, 0x0A
    17 000013F5 E670                <1>         out 0x70, al
    18 000013F7 E471                <1>         in al, 0x71
    19 000013F9 A880                <1>         test al, 0x80
    20 000013FB 7407                <1>         je .10F
    21 000013FD B801000000          <1>         mov eax, 1
    22 00001402 EB27                <1>         jmp .10E
    23                              <1> .10F:
    24 00001404 B004                <1>         mov al, 0x04
    25 00001406 E670                <1>         out 0x70, al
    26 00001408 E471                <1>         in al, 0x71
    27                              <1> 
    28 0000140A C1E008              <1>         shl eax, 8
    29                              <1> 
    30 0000140D B002                <1>         mov al, 0x02
    31 0000140F E670                <1>         out 0x70, al
    32 00001411 E471                <1>         in al, 0x71
    33                              <1> 
    34 00001413 C1E008              <1>         shl eax, 8
    35                              <1> 
    36 00001416 B000                <1>         mov al, 0x00
    37 00001418 E670                <1>         out 0x70, al
    38 0000141A E471                <1>         in al, 0x71
    39                              <1> 
    40 0000141C 25FFFFFF00          <1>         and eax, 0x00_FF_FF_FF
    41                              <1> 
    42 00001421 8B5D08              <1>         mov ebx, [ebp + 8]
    43 00001424 8903                <1>         mov [ebx], eax
    44                              <1> 
    45 00001426 B800000000          <1>         mov eax, 0
    46                              <1> .10E:
    47                              <1> 
    48                              <1>         ;-----------------------------------------
    49                              <1>         ; 【レジスタの復帰】
    50                              <1>         ;-----------------------------------------
    51 0000142B 5B                  <1>         pop ebx
    52                              <1> 
    53                              <1>         ;-----------------------------------------
    54                              <1>         ; 【スタックフレームの破棄】
    55                              <1>         ;-----------------------------------------
    56 0000142C 89EC                <1>         mov esp, ebp
    57 0000142E 5D                  <1>         pop ebp
    58                              <1> 
    59 0000142F C3                  <1>         ret
   193                                  %include "../modules/protect/draw_time.s"
     1                              <1> draw_time:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 00001430 55                  <1>         push ebp
     6 00001431 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;-----------------------------------------
     9                              <1>         ; 【レジスタの保存】
    10                              <1>         ;-----------------------------------------
    11 00001433 50                  <1>         push eax
    12 00001434 53                  <1>         push ebx
    13                              <1> 
    14                              <1>         ;-----------------------------------------
    15                              <1>         ; 時刻の表示
    16                              <1>         ;-----------------------------------------
    17 00001435 8B4514              <1>         mov eax, [ebp + 20]
    18                              <1> 
    19 00001438 0FB6D8              <1>         movzx ebx, al
    20 0000143B 6A046A106A0268-     <1>         cdecl itoa, ebx, .sec, 2, 16, 0b0100
    20 00001442 [A2140000]53E81AFF- <1>
    20 0000144A FFFF6683C414        <1>
    21                              <1> 
    22 00001450 88E3                <1>         mov bl, ah
    23 00001452 6A046A106A0268-     <1>         cdecl itoa, ebx, .min, 2, 16, 0b0100
    23 00001459 [9F140000]53E803FF- <1>
    23 00001461 FFFF6683C414        <1>
    24                              <1> 
    25 00001467 C1E810              <1>         shr eax, 16
    26 0000146A 6A046A106A0268-     <1>         cdecl itoa, eax, .hour, 2, 16, 0b0100
    26 00001471 [9C140000]50E8EBFE- <1>
    26 00001479 FFFF6683C414        <1>
    27                              <1> 
    28 0000147F 68[9C140000]FF7510- <1>         cdecl draw_str, dword[ebp + 8], dword[ebp + 12], dword[ebp + 16], .hour
    28 00001487 FF750CFF7508E8F3FB- <1>
    28 00001490 FFFF6683C410        <1>
    29                              <1> 
    30                              <1>         ;-----------------------------------------
    31                              <1>         ; 【レジスタの復帰】
    32                              <1>         ;-----------------------------------------
    33 00001496 5B                  <1>         pop ebx
    34 00001497 58                  <1>         pop eax
    35                              <1> 
    36                              <1>         ;-----------------------------------------
    37                              <1>         ; 【スタックフレームの破棄】
    38                              <1>         ;-----------------------------------------
    39 00001498 89EC                <1>         mov esp, ebp
    40 0000149A 5D                  <1>         pop ebp
    41                              <1> 
    42 0000149B C3                  <1>         ret
    43                              <1> 
    44 0000149C 5A5A3A              <1> .hour:  db "ZZ:"
    45 0000149F 5A5A3A              <1> .min:   db "ZZ:"
    46 000014A2 5A5A00              <1> .sec:   db "ZZ", 0
   194                                  %include "../modules/protect/interrupt.s"
     1                              <1> ;***********************************************************
     2                              <1> ;  割り込みベクタの初期化
     3                              <1> ;***********************************************************
     4 000014A5 90<rept>            <1> ALIGN 4
     5 000014A8 FF07                <1> IDTR:   dw 8 * 256 - 1
     6 000014AA 00001000            <1>         dd VECT_BASE
     7                              <1> 
     8                              <1> ;***********************************************************
     9                              <1> ;  割り込みテーブルを初期化
    10                              <1> ;***********************************************************
    11                              <1> init_int:
    12                              <1>         ;-----------------------------------------
    13                              <1>         ; 【レジスタの保存】
    14                              <1>         ;-----------------------------------------
    15 000014AE 50                  <1>         push eax
    16 000014AF 53                  <1>         push ebx
    17 000014B0 51                  <1>         push ecx
    18 000014B1 57                  <1>         push edi
    19                              <1> 
    20                              <1>         ;-----------------------------------------
    21                              <1>         ; すべての割り込みにデフォルト処理を設定
    22                              <1>         ;-----------------------------------------
    23 000014B2 8D05[DF140000]      <1>         lea eax, [int_default]
    24 000014B8 BB008E0800          <1>         mov ebx, 0x0008_8E00
    25 000014BD 6693                <1>         xchg ax, bx
    26                              <1> 
    27 000014BF B900010000          <1>         mov ecx, 256
    28 000014C4 BF00001000          <1>         mov edi, VECT_BASE
    29                              <1> 
    30                              <1> .10L:
    31 000014C9 891F                <1>         mov [edi + 0], ebx
    32 000014CB 894704              <1>         mov [edi + 4], eax
    33 000014CE 83C708              <1>         add edi, 8
    34 000014D1 E2F6                <1>         loop .10L
    35                              <1> 
    36                              <1>         ;-----------------------------------------
    37                              <1>         ; 割り込みディスクリプタの設定
    38                              <1>         ;-----------------------------------------
    39 000014D3 0F011D[A8140000]    <1>         lidt [IDTR]
    40                              <1> 
    41                              <1>         ;-----------------------------------------
    42                              <1>         ; 【レジスタの復帰】
    43                              <1>         ;-----------------------------------------
    44 000014DA 5F                  <1>         pop edi
    45 000014DB 59                  <1>         pop ecx
    46 000014DC 5B                  <1>         pop ebx
    47 000014DD 58                  <1>         pop eax
    48                              <1> 
    49 000014DE C3                  <1>         ret
    50                              <1> 
    51                              <1> int_default:
    52 000014DF 9C                  <1>         pushf                                           ; // EFLAGS(IF == 0)
    53 000014E0 0E                  <1>         push cs
    54 000014E1 68[FD140000]        <1>         push int_stop
    55                              <1> 
    56 000014E6 B8[EC140000]        <1>         mov eax, .s0
    57 000014EB CF                  <1>         iret
    58                              <1> 
    59 000014EC 203C2020202053544F- <1> .s0:    db " <    STOP    > ", 0
    59 000014F5 50202020203E2000    <1>
    60                              <1> 
    61                              <1> int_stop:
    62 000014FD FB                  <1>         sti
    63                              <1>         
    64                              <1>         ;-----------------------------------------
    65                              <1>         ; EAXで示される文字列を表示
    66                              <1>         ;-----------------------------------------
    67 000014FE 50680F0600006A0F6A- <1>         cdecl draw_str, 25, 15, 0x060F, eax
    67 00001507 19E878FBFFFF6683C4- <1>
    67 00001510 10                  <1>
    68                              <1> 
    69                              <1>         ;-----------------------------------------
    70                              <1>         ; スタックのデータを文字列に変換
    71                              <1>         ;-----------------------------------------
    72 00001511 8B0424              <1>         mov eax, [esp + 0]
    73 00001514 6A046A106A0868-     <1>         cdecl itoa, eax, .p1, 8, 16, 0b0100
    73 0000151B [D9150000]50E841FE- <1>
    73 00001523 FFFF6683C414        <1>
    74                              <1> 
    75 00001529 8B442404            <1>         mov eax, [esp + 4]
    76 0000152D 6A046A106A0868-     <1>         cdecl itoa, eax, .p2, 8, 16, 0b0100
    76 00001534 [EA150000]50E828FE- <1>
    76 0000153C FFFF6683C414        <1>
    77                              <1> 
    78 00001542 8B442408            <1>         mov eax, [esp + 8]
    79 00001546 6A046A106A0868-     <1>         cdecl itoa, eax, .p3, 8, 16, 0b0100
    79 0000154D [FB150000]50E80FFE- <1>
    79 00001555 FFFF6683C414        <1>
    80                              <1> 
    81 0000155B 8B44240C            <1>         mov eax, [esp +12]
    82 0000155F 6A046A106A0868-     <1>         cdecl itoa, eax, .p4, 8, 16, 0b0100
    82 00001566 [0C160000]50E8F6FD- <1>
    82 0000156E FFFF6683C414        <1>
    83                              <1> 
    84                              <1>         ;-----------------------------------------
    85                              <1>         ; 文字列の表示
    86                              <1>         ;-----------------------------------------
    87 00001574 68[D2150000]68040F- <1>         cdecl draw_str, 25, 16, 0x0F04, .s1
    87 0000157C 00006A106A19E8FEFA- <1>
    87 00001585 FFFF6683C410        <1>
    88 0000158B 68[E3150000]68040F- <1>         cdecl draw_str, 25, 17, 0x0F04, .s2
    88 00001593 00006A116A19E8E7FA- <1>
    88 0000159C FFFF6683C410        <1>
    89 000015A2 68[F4150000]68040F- <1>         cdecl draw_str, 25, 18, 0x0F04, .s3
    89 000015AA 00006A126A19E8D0FA- <1>
    89 000015B3 FFFF6683C410        <1>
    90 000015B9 68[05160000]68040F- <1>         cdecl draw_str, 25, 19, 0x0F04, .s4
    90 000015C1 00006A136A19E8B9FA- <1>
    90 000015CA FFFF6683C410        <1>
    91                              <1> 
    92                              <1>         ;-----------------------------------------
    93                              <1>         ; 無限ループ
    94                              <1>         ;-----------------------------------------
    95 000015D0 EBFE                <1>         jmp $
    96                              <1> 
    97 000015D2 4553502B20303A      <1> .s1:    db "ESP+ 0:"
    98 000015D9 5F5F5F5F5F5F5F5F20- <1> .p1:    db "________ ", 0
    98 000015E2 00                  <1>
    99 000015E3 2020202B20343A      <1> .s2:    db "   + 4:"
   100 000015EA 5F5F5F5F5F5F5F5F20- <1> .p2:    db "________ ", 0
   100 000015F3 00                  <1>
   101 000015F4 2020202B20383A      <1> .s3:    db "   + 8:"
   102 000015FB 5F5F5F5F5F5F5F5F20- <1> .p3:    db "________ ", 0
   102 00001604 00                  <1>
   103 00001605 2020202B31323A      <1> .s4:    db "   +12:"
   104 0000160C 5F5F5F5F5F5F5F5F20- <1> .p4:    db "________ ", 0
   104 00001615 00                  <1>
   105                              <1> 
   106                              <1> int_zero_div:
   107 00001616 9C                  <1>         pushf
   108 00001617 0E                  <1>         push cs
   109 00001618 68[FD140000]        <1>         push int_stop
   110                              <1> 
   111 0000161D B8[23160000]        <1>         mov eax, .s0
   112 00001622 CF                  <1>         iret
   113                              <1> 
   114 00001623 203C20205A45524F20- <1> .s0:    db " <  ZERO DIV  > ", 0
   114 0000162C 44495620203E2000    <1>
   195                                  %include "../modules/protect/pic.s"
     1                              <1> init_pic:
     2                              <1>         ;------------------------------
     3                              <1>         ; レジスタの保存
     4                              <1>         ;------------------------------
     5 00001634 50                  <1>         push eax
     6                              <1> 
     7                              <1>         ;------------------------------
     8                              <1>         ; マスタの設定
     9                              <1>         ;------------------------------
    10                              <1>         outp 0x20, 0x11                     ; // MASTER.ICW1 = 0x11;
    10 00001635 B011                <2>  mov al, %2
    10 00001637 E620                <2>  out %1, al
    11                              <1>         outp 0x21, 0x20                     ; // MASTER.ICW2 = 0x20;
    11 00001639 B020                <2>  mov al, %2
    11 0000163B E621                <2>  out %1, al
    12                              <1>         outp 0x21, 0x04                     ; // MASTER.ICW3 = 0x04;
    12 0000163D B004                <2>  mov al, %2
    12 0000163F E621                <2>  out %1, al
    13                              <1>         outp 0x21, 0x05                     ; // MASTER.ICW4 = 0x05;
    13 00001641 B005                <2>  mov al, %2
    13 00001643 E621                <2>  out %1, al
    14                              <1>         outp 0x21, 0xFF                     ; // マスタ割り込みマスク
    14 00001645 B0FF                <2>  mov al, %2
    14 00001647 E621                <2>  out %1, al
    15                              <1> 
    16                              <1>         ;------------------------------
    17                              <1>         ; スレーブの設定
    18                              <1>         ;------------------------------
    19                              <1>         outp 0xA0, 0x11                     ; // SLAVE.ICW1 = 0x11;
    19 00001649 B011                <2>  mov al, %2
    19 0000164B E6A0                <2>  out %1, al
    20                              <1>         outp 0xA1, 0x28                     ; // SLAVE.ICW1 = 0x28;
    20 0000164D B028                <2>  mov al, %2
    20 0000164F E6A1                <2>  out %1, al
    21                              <1>         outp 0xA1, 0x02                     ; // SLAVE.ICW1 = 0x02;
    21 00001651 B002                <2>  mov al, %2
    21 00001653 E6A1                <2>  out %1, al
    22                              <1>         outp 0xA1, 0x01                     ; // SLAVE.ICW1 = 0x01;
    22 00001655 B001                <2>  mov al, %2
    22 00001657 E6A1                <2>  out %1, al
    23                              <1>         outp 0xA1, 0xFF                     ; // スレーブ割り込みマスク
    23 00001659 B0FF                <2>  mov al, %2
    23 0000165B E6A1                <2>  out %1, al
    24                              <1> 
    25                              <1>         ;------------------------------
    26                              <1>         ; レジスタの復帰
    27                              <1>         ;------------------------------
    28 0000165D 58                  <1>         pop eax
    29                              <1> 
    30 0000165E C3                  <1>         ret
   196                                  %include "../modules/protect/int_rtc.s"
     1                              <1> int_rtc:
     2                              <1>         ;-----------------------------
     3                              <1>         ; レジスタの保存
     4                              <1>         ;-----------------------------
     5 0000165F 60                  <1>         pusha
     6 00001660 1E                  <1>         push ds
     7 00001661 06                  <1>         push es
     8                              <1> 
     9                              <1>         ;-----------------------------
    10                              <1>         ; データ用セグメントセレクタの設定
    11                              <1>         ;-----------------------------
    12 00001662 66B81000            <1>         mov ax, 0x0010
    13 00001666 8ED8                <1>         mov ds, ax
    14 00001668 8EC0                <1>         mov es, ax
    15                              <1> 
    16                              <1>         ;-----------------------------
    17                              <1>         ; RTCから時刻を取得
    18                              <1>         ;-----------------------------
    19 0000166A 68[D0020000]E87BFD- <1>         cdecl rtc_get_time, RTC_TIME        ; EAX = get_time(&RTC_TIME);
    19 00001672 FFFF6683C404        <1>
    20                              <1> 
    21                              <1>         ;-----------------------------
    22                              <1>         ; RTCの割り込み要因を取得
    23                              <1>         ;-----------------------------
    24                              <1>         outp 0x70, 0x0C                     ; outp(0x70, 0x0C); // レジスタCを選択
    24 00001678 B00C                <2>  mov al, %2
    24 0000167A E670                <2>  out %1, al
    25 0000167C E471                <1>         in al, 0x71                         ; AL = port(0x71);
    26                              <1> 
    27                              <1>         ;-----------------------------
    28                              <1>         ; 割り込みフラグをクリア(EOI)
    29                              <1>         ;-----------------------------
    30 0000167E B020                <1>         mov al, 0x20                        ; AL = EOIコマンド;
    31 00001680 E6A0                <1>         out 0xA0, al                        ; outp(0xA0, AL); // スレーブPIC
    32 00001682 E620                <1>         out 0x20, al                        ; outp(0x20, AL); // マスタPIC
    33                              <1> 
    34                              <1>         ;-----------------------------
    35                              <1>         ; レジスタの復帰
    36                              <1>         ;-----------------------------
    37 00001684 07                  <1>         pop es
    38 00001685 1F                  <1>         pop ds
    39 00001686 61                  <1>         popa
    40                              <1> 
    41 00001687 CF                  <1>         iret                                ; 割り込み処理の終了
    42                              <1> 
    43                              <1> rtc_int_en:
    44                              <1>         ;-----------------------------
    45                              <1>         ; スタックフレームの構築
    46                              <1>         ;-----------------------------
    47 00001688 55                  <1>         push ebp
    48 00001689 89E5                <1>         mov ebp, esp
    49                              <1> 
    50                              <1>         ;-----------------------------
    51                              <1>         ; レジスタの保存
    52                              <1>         ;-----------------------------
    53 0000168B 50                  <1>         push eax
    54                              <1> 
    55                              <1>         ;-----------------------------
    56                              <1>         ; 割り込み許可設定
    57                              <1>         ;-----------------------------
    58                              <1>         outp 0x70, 0x0B                     ; outp(0x70, AL); // レジスタBを選択
    58 0000168C B00B                <2>  mov al, %2
    58 0000168E E670                <2>  out %1, al
    59                              <1> 
    60 00001690 E471                <1>         in al, 0x71                         ; AL = port(0x71); // レジスタBの
    61 00001692 0A4508              <1>         or al, [ebp + 8]                    ; AL |= ビット; // 指定されたビットをセット
    62                              <1> 
    63 00001695 E671                <1>         out 0x71, al                        ; outp(0x71, AL); // レジスタBに書き込み
    64                              <1> 
    65                              <1>         ;-----------------------------
    66                              <1>         ; レジスタの復帰
    67                              <1>         ;-----------------------------
    68 00001697 58                  <1>         pop eax
    69                              <1> 
    70                              <1>         ;-----------------------------
    71                              <1>         ; スタックフレームの破棄
    72                              <1>         ;-----------------------------
    73 00001698 89EC                <1>         mov esp, ebp
    74 0000169A 5D                  <1>         pop ebp
    75                              <1> 
    76 0000169B C3                  <1>         ret
   197                                  %include "../modules/protect/int_keyboard.s"
     1                              <1> int_keyboard:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【レジスタの保存】
     4                              <1>         ;-----------------------------------------
     5 0000169C 60                  <1>         pusha
     6 0000169D 1E                  <1>         push ds
     7 0000169E 06                  <1>         push es
     8                              <1> 
     9                              <1>         ;-----------------------------------------
    10                              <1>         ; データ用セグメントの設定
    11                              <1>         ;-----------------------------------------
    12 0000169F 66B81000            <1>         mov ax, 0x0010
    13 000016A3 8ED8                <1>         mov ds, ax
    14 000016A5 8EC0                <1>         mov es, ax
    15                              <1> 
    16                              <1>         ;-----------------------------------------
    17                              <1>         ; KBCのバッファ読み取り
    18                              <1>         ;-----------------------------------------
    19 000016A7 E460                <1>         in al, 0x60
    20                              <1> 
    21                              <1>         ;-----------------------------------------
    22                              <1>         ; キーコードの保存
    23                              <1>         ;-----------------------------------------
    24 000016A9 5068[C0160000]E854- <1>         cdecl ring_wr, _KEY_BUFF, eax
    24 000016B1 0000006683C408      <1>
    25                              <1> 
    26                              <1>         ;-----------------------------------------
    27                              <1>         ; 割り込み終了コマンド送信
    28                              <1>         ;-----------------------------------------
    29                              <1>         outp 0x20, 0x20
    29 000016B8 B020                <2>  mov al, %2
    29 000016BA E620                <2>  out %1, al
    30                              <1> 
    31                              <1>         ;-----------------------------------------
    32                              <1>         ; 【レジスタの復帰】
    33                              <1>         ;-----------------------------------------
    34 000016BC 07                  <1>         pop es
    35 000016BD 1F                  <1>         pop ds
    36 000016BE 61                  <1>         popa
    37                              <1> 
    38 000016BF CF                  <1>         iret
    39                              <1> 
    40                              <1> ALIGN 4, db 0
    41 000016C0 00<rept>            <1> _KEY_BUFF: times ring_buff_size db 0
   198                                  %include "../modules/protect/ring_buff.s"
     1                              <1> ring_rd:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 000016D8 55                  <1>         push ebp
     6 000016D9 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;-----------------------------------------
     9                              <1>         ; 【レジスタの保存】
    10                              <1>         ;-----------------------------------------
    11 000016DB 53                  <1>         push ebx
    12 000016DC 56                  <1>         push esi
    13 000016DD 57                  <1>         push edi
    14                              <1> 
    15                              <1>         ;-----------------------------------------
    16                              <1>         ; 引数を取得
    17                              <1>         ;-----------------------------------------
    18 000016DE 8B7508              <1>         mov esi, [ebp + 8]
    19 000016E1 8B7D0C              <1>         mov edi, [ebp + 12]
    20                              <1> 
    21                              <1>         ;-----------------------------------------
    22                              <1>         ; 読み込み位置を確認
    23                              <1>         ;-----------------------------------------
    24 000016E4 B800000000          <1>         mov eax, 0
    25 000016E9 8B1E                <1>         mov ebx, [esi + ring_buff.rp]
    26 000016EB 3B5E04              <1>         cmp ebx, [esi + ring_buff.wp]
    27 000016EE 7411                <1>         je .10E
    28                              <1> 
    29 000016F0 8A441E08            <1>         mov al, [esi + ring_buff.item + ebx]
    30                              <1> 
    31 000016F4 8807                <1>         mov [edi], al
    32                              <1> 
    33 000016F6 43                  <1>         inc ebx
    34 000016F7 83E30F              <1>         and ebx, RING_INDEX_MASK
    35 000016FA 891E                <1>         mov [esi + ring_buff.rp], ebx
    36                              <1> 
    37 000016FC B801000000          <1>         mov eax, 1
    38                              <1> .10E:
    39                              <1> 
    40                              <1>         ;-----------------------------------------
    41                              <1>         ; 【レジスタの復帰】
    42                              <1>         ;-----------------------------------------
    43 00001701 5F                  <1>         pop edi
    44 00001702 5E                  <1>         pop esi
    45 00001703 5B                  <1>         pop ebx
    46                              <1> 
    47                              <1>         ;-----------------------------------------
    48                              <1>         ; 【スタックフレームの破棄】
    49                              <1>         ;-----------------------------------------
    50 00001704 89EC                <1>         mov esp, ebp
    51 00001706 5D                  <1>         pop ebp
    52                              <1> 
    53 00001707 C3                  <1>         ret
    54                              <1> 
    55                              <1> ring_wr:
    56                              <1>         ;-----------------------------------------
    57                              <1>         ; 【スタックフレームの構築】
    58                              <1>         ;-----------------------------------------
    59 00001708 55                  <1>         push ebp
    60 00001709 89E5                <1>         mov ebp, esp
    61                              <1> 
    62                              <1>         ;-----------------------------------------
    63                              <1>         ; 【レジスタの保存】
    64                              <1>         ;-----------------------------------------
    65 0000170B 53                  <1>         push ebx
    66 0000170C 51                  <1>         push ecx
    67 0000170D 56                  <1>         push esi
    68                              <1> 
    69                              <1>         ;-----------------------------------------
    70                              <1>         ; 引数を取得
    71                              <1>         ;-----------------------------------------
    72 0000170E 8B7508              <1>         mov esi, [ebp + 8]
    73                              <1> 
    74                              <1>         ;-----------------------------------------
    75                              <1>         ; 書き込み位置を確認
    76                              <1>         ;-----------------------------------------
    77 00001711 B800000000          <1>         mov eax, 0
    78 00001716 8B5E04              <1>         mov ebx, [esi + ring_buff.wp]
    79 00001719 89D9                <1>         mov ecx, ebx
    80 0000171B 41                  <1>         inc ecx
    81 0000171C 83E10F              <1>         and ecx, RING_INDEX_MASK
    82                              <1> 
    83 0000171F 3B0E                <1>         cmp ecx, [esi + ring_buff.rp]
    84 00001721 740F                <1>         je .10E
    85                              <1> 
    86 00001723 8A450C              <1>         mov al, [ebp +12]
    87                              <1> 
    88 00001726 88441E08            <1>         mov [esi + ring_buff.item + ebx], al
    89 0000172A 894E04              <1>         mov [esi + ring_buff.wp], ecx
    90 0000172D B801000000          <1>         mov eax, 1
    91                              <1> .10E:
    92                              <1> 
    93                              <1>         ;-----------------------------------------
    94                              <1>         ; 【レジスタの復帰】
    95                              <1>         ;-----------------------------------------
    96 00001732 5E                  <1>         pop esi
    97 00001733 59                  <1>         pop ecx
    98 00001734 5B                  <1>         pop ebx
    99                              <1> 
   100                              <1>         ;-----------------------------------------
   101                              <1>         ; 【スタックフレームの破棄】
   102                              <1>         ;-----------------------------------------
   103 00001735 89EC                <1>         mov esp, ebp
   104 00001737 5D                  <1>         pop ebp
   105                              <1> 
   106 00001738 C3                  <1>         ret
   107                              <1> 
   108                              <1> draw_key:
   109                              <1>         ;-----------------------------------------
   110                              <1>         ; 【スタックフレームの構築】
   111                              <1>         ;-----------------------------------------
   112 00001739 55                  <1>         push ebp
   113 0000173A 89E5                <1>         mov ebp, esp
   114                              <1> 
   115                              <1>         ;-----------------------------------------
   116                              <1>         ; 【レジスタの保存】
   117                              <1>         ;-----------------------------------------
   118 0000173C 60                  <1>         pusha
   119                              <1> 
   120                              <1>         ;-----------------------------------------
   121                              <1>         ; 引数を取得
   122                              <1>         ;-----------------------------------------
   123 0000173D 8B5508              <1>         mov edx, [ebp + 8]
   124 00001740 8B7D0C              <1>         mov edi, [ebp + 12]
   125 00001743 8B7510              <1>         mov esi, [ebp + 16]
   126                              <1> 
   127                              <1>         ;-----------------------------------------
   128                              <1>         ; リングバッファの情報を取得
   129                              <1>         ;-----------------------------------------
   130 00001746 8B1E                <1>         mov ebx, [esi + ring_buff.rp]
   131 00001748 8D7608              <1>         lea esi, [esi + ring_buff.item]
   132 0000174B B910000000          <1>         mov ecx, RING_ITEM_SIZE
   133                              <1> 
   134                              <1>         ;-----------------------------------------
   135                              <1>         ; 表示
   136                              <1>         ;-----------------------------------------
   137                              <1> .10L:
   138 00001750 4B                  <1>         dec ebx
   139 00001751 83E30F              <1>         and ebx, RING_INDEX_MASK
   140 00001754 8A041E              <1>         mov al, [esi + ebx]
   141                              <1> 
   142 00001757 6A046A106A0268-     <1>         cdecl itoa, eax, .tmp, 2, 16, 0b0100
   142 0000175E [88170000]50E8FEFB- <1>
   142 00001766 FFFF6683C414        <1>
   143 0000176C 68[88170000]6A0257- <1>         cdecl draw_str, edx, edi, 0x02, .tmp
   143 00001774 52E80BF9FFFF6683C4- <1>
   143 0000177D 10                  <1>
   144                              <1> 
   145 0000177E 83C203              <1>         add edx, 3
   146                              <1> 
   147 00001781 E2CD                <1>         loop .10L
   148                              <1> .10E:
   149                              <1> 
   150                              <1>         ;-----------------------------------------
   151                              <1>         ; 【レジスタの復帰】
   152                              <1>         ;-----------------------------------------
   153 00001783 61                  <1>         popa
   154                              <1> 
   155                              <1>         ;-----------------------------------------
   156                              <1>         ; 【スタックフレームの破棄】
   157                              <1>         ;-----------------------------------------
   158 00001784 89EC                <1>         mov esp, ebp
   159 00001786 5D                  <1>         pop ebp
   160                              <1> 
   161 00001787 C3                  <1>         ret
   162                              <1> 
   163 00001788 2D2D2000            <1> .tmp:   db "-- ", 0
   199                                  %include "../modules/protect/timer.s"
     1                              <1> int_en_timer0:
     2                              <1>         ;-------------------------
     3                              <1>         ; レジスタの保存
     4                              <1>         ;-------------------------
     5 0000178C 50                  <1>         push eax
     6                              <1> 
     7                              <1>         ;-------------------------
     8                              <1>         ; タイマー
     9                              <1>         ;-------------------------
    10                              <1>         outp 0x43, 0b_00_11_010_0
    10 0000178D B034                <2>  mov al, %2
    10 0000178F E643                <2>  out %1, al
    11                              <1>         outp 0x40, 0x9C
    11 00001791 B09C                <2>  mov al, %2
    11 00001793 E640                <2>  out %1, al
    12                              <1>         outp 0x40, 0x2E
    12 00001795 B02E                <2>  mov al, %2
    12 00001797 E640                <2>  out %1, al
    13                              <1> 
    14                              <1>         ;-------------------------
    15                              <1>         ; レジスタの復帰
    16                              <1>         ;-------------------------
    17 00001799 58                  <1>         pop eax
    18                              <1> 
    19 0000179A C3                  <1>         ret
   200                                  %include "../modules/protect/draw_rotation_bar.s"
     1                              <1> draw_rotation_bar:
     2                              <1>         ;-----------------------------
     3                              <1>         ; レジスタの保存
     4                              <1>         ;-----------------------------
     5 0000179B 50                  <1>         push eax
     6                              <1> 
     7                              <1>         ;-----------------------------
     8                              <1>         ; 周期動作
     9                              <1>         ;-----------------------------
    10 0000179C A1[F00A0000]        <1>         mov eax, [TIMER_COUNT]
    11 000017A1 C1E804              <1>         shr eax, 4
    12 000017A4 3B05[CC170000]      <1>         cmp eax, [.index]
    13 000017AA 741E                <1>         je .10E
    14                              <1> 
    15 000017AC A3[CC170000]        <1>         mov [.index], eax
    16 000017B1 83E003              <1>         and eax, 0x03
    17                              <1> 
    18 000017B4 8A80[D0170000]      <1>         mov al, [.table + eax]
    19 000017BA 506A0F6A1D6A00E899- <1>         cdecl draw_char, 0, 29, 0x000F, eax
    19 000017C3 F7FFFF6683C410      <1>
    20                              <1> .10E:
    21                              <1> 
    22                              <1>         ;-----------------------------
    23                              <1>         ; レジスタの復帰
    24                              <1>         ;-----------------------------
    25 000017CA 58                  <1>         pop eax
    26                              <1> 
    27 000017CB C3                  <1>         ret
    28                              <1> 
    29                              <1> ALIGN 4, db 0
    30 000017CC 00000000            <1> .index: dd 0
    31 000017D0 7C2F2D5C            <1> .table: db "|/-\"
   201                                  %include "../modules/protect/call_gate.s"
     1                              <1> call_gate:
     2                              <1>         ;-------------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;-------------------------------------
     5                              <1>                                                     ; ---------|-----
     6                              <1>                                                     ; EBP + 12 | X
     7                              <1>                                                     ; EBP + 16 | Y
     8                              <1>                                                     ; EBP + 20 | 色
     9                              <1>                                                     ; EBP + 24 | 文字
    10                              <1>                                                     ;----------------
    11                              <1>                                                     ; EBP +  8 | CS  コードセグメント
    12 000017D4 55                  <1>         push ebp                                    ; EBP +  4 | EIP 戻り値
    13 000017D5 89E5                <1>         mov ebp, esp                                ; EBP +  0 | EBP 元の値
    14                              <1>                                                     ;----------------
    15                              <1>         ;-------------------------------------
    16                              <1>         ; レジスタの保存
    17                              <1>         ;-------------------------------------
    18 000017D7 60                  <1>         pusha
    19 000017D8 1E                  <1>         push ds
    20 000017D9 06                  <1>         push es
    21                              <1> 
    22                              <1>         ;-------------------------------------
    23                              <1>         ; データ用セグメントの設定
    24                              <1>         ;-------------------------------------
    25 000017DA 66B81000            <1>         mov ax, 0x0010
    26 000017DE 8ED8                <1>         mov ds, ax
    27 000017E0 8EC0                <1>         mov es, ax
    28                              <1> 
    29                              <1>         ;-------------------------------------
    30                              <1>         ; 文字を表示
    31                              <1>         ;-------------------------------------
    32 000017E2 8B450C              <1>         mov eax, dword [ebp + 12]                   ; EAX = X
    33 000017E5 8B5D10              <1>         mov ebx, dword [ebp + 16]                   ; EBX = Y
    34 000017E8 8B4D14              <1>         mov ecx, dword [ebp + 20]                   ; ECX = 色
    35 000017EB 8B5518              <1>         mov edx, dword [ebp + 24]                   ; EDX = 文字
    36 000017EE 52515350E88EF8FFFF- <1>         cdecl draw_str, eax, ebx, ecx, edx          ; draw_str()
    36 000017F7 6683C410            <1>
    37                              <1> 
    38                              <1>         ;-------------------------------------
    39                              <1>         ; レジスタの復帰
    40                              <1>         ;-------------------------------------
    41 000017FB 07                  <1>         pop es
    42 000017FC 1F                  <1>         pop ds
    43 000017FD 61                  <1>         popa
    44                              <1> 
    45                              <1>         ;-------------------------------------
    46                              <1>         ; スタックフレームの破棄
    47                              <1>         ;-------------------------------------
    48 000017FE 89EC                <1>         mov esp, ebp
    49 00001800 5D                  <1>         pop ebp
    50                              <1> 
    51 00001801 CA1000              <1>         retf 4 * 4
   202                                  %include "../modules/protect/trap_gate.s"
     1                              <1> trap_gate_81:
     2                              <1>         ;--------------------------------
     3                              <1>         ; 1文字出力
     4                              <1>         ;--------------------------------
     5 00001804 50535251E852F7FFFF- <1>         cdecl draw_char, ecx, edx, ebx, eax     ; // 1文字出力
     5 0000180D 6683C410            <1>
     6                              <1> 
     7 00001811 CF                  <1>         iret
     8                              <1> 
     9                              <1> trap_gate_82:
    10                              <1>         ;--------------------------------
    11                              <1>         ; 点を描画
    12                              <1>         ;--------------------------------
    13 00001812 535251E822F9FFFF66- <1>         cdecl draw_pixel, ecx, edx, ebx         ; // 点の描画
    13 0000181B 83C40C              <1>
    14                              <1> 
    15 0000181E CF                  <1>         iret
   203                                  %include "../modules/protect/test_and_set.s"
     1                              <1> test_and_set:
     2                              <1>         ;-------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;-------------------------------
     5                              <1>                                             ; EBP + 8 | ローカル変数のアドレス
     6                              <1>                                             ;---------|--------------------
     7 0000181F 55                  <1>         push ebp                            ; EBP + 4 | EIP
     8 00001820 89E5                <1>         mov ebp, esp                        ; EBP + 0 | EBP
     9                              <1>                                             ;---------| EBP
    10                              <1>         ;-------------------------------
    11                              <1>         ; レジスタの保存
    12                              <1>         ;-------------------------------
    13 00001822 50                  <1>         push eax
    14 00001823 53                  <1>         push ebx
    15                              <1> 
    16                              <1>         ;-------------------------------
    17                              <1>         ; テストアンドセット
    18                              <1>         ;-------------------------------
    19 00001824 B800000000          <1>         mov eax, 0                          ; local = 0;
    20 00001829 8B5D08              <1>         mov ebx, [ebp + 8]                  ; global = アドレス;
    21                              <1> 
    22                              <1> .10L:                                       ; for (;;)
    23                              <1>                                             ; {
    24 0000182C F00FAB03            <1>         lock bts [ebx], eax                 ;   CF = TEST_AND_SET(IN_USE, 1);
    25 00001830 7307                <1>         jnc .10E                            ;   if (0 == CF)
    26                              <1>                                             ;       break;
    27                              <1>                                             ;
    28                              <1> .12L:                                       ;   for (;;)
    29                              <1>                                             ;   {
    30 00001832 0FA303              <1>         bt [ebx], eax                       ;       CF = TEST(IN_USE, 1);
    31 00001835 72FB                <1>         jc .12L                             ;       if (0 == CF)
    32                              <1>                                             ;           break;
    33 00001837 EBF3                <1>         jmp .10L                            ;   }
    34                              <1> .10E:                                       ; }
    35                              <1> 
    36                              <1>         ;--------------------------------
    37                              <1>         ; レジスタの復帰
    38                              <1>         ;--------------------------------
    39 00001839 5B                  <1>         pop ebx
    40 0000183A 58                  <1>         pop eax
    41                              <1> 
    42                              <1>         ;--------------------------------
    43                              <1>         ; スタックフレームの破棄
    44                              <1>         ;--------------------------------
    45 0000183B 89EC                <1>         mov esp, ebp
    46 0000183D 5D                  <1>         pop ebp
    47                              <1> 
    48 0000183E C3                  <1>         ret
   204                                  %include "../modules/protect/int_nm.s"
     1                              <1> int_nm:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【レジスタの保存】
     4                              <1>         ;-----------------------------------------
     5 0000183F 60                  <1>         pusha
     6 00001840 1E                  <1>         push ds
     7 00001841 06                  <1>         push es
     8                              <1> 
     9                              <1>         ;-----------------------------------------
    10                              <1>         ; カーネル用セレクタを設定
    11                              <1>         ;-----------------------------------------
    12 00001842 66B81000            <1>         mov ax, DS_KERNEL
    13 00001846 8ED8                <1>         mov ds, ax
    14 00001848 8EC0                <1>         mov es, ax
    15                              <1> 
    16                              <1>         ;-----------------------------------------
    17                              <1>         ; タスクスイッチフラグをクリア
    18                              <1>         ;-----------------------------------------
    19 0000184A 0F06                <1>         clts
    20                              <1> 
    21                              <1>         ;-----------------------------------------
    22                              <1>         ; 前回/今回FPUを使用するタスク
    23                              <1>         ;-----------------------------------------
    24 0000184C 8B3D[98180000]      <1>         mov edi, [.last_tss]
    25 00001852 0F00CE              <1>         str esi
    26 00001855 83E6F8              <1>         and esi, ~0x0007
    27                              <1> 
    28                              <1>         ;-----------------------------------------
    29                              <1>         ; FPUの初回利用をチェック
    30                              <1>         ;-----------------------------------------
    31 00001858 83FF00              <1>         cmp edi, 0
    32 0000185B 7420                <1>         je .10F
    33                              <1> 
    34 0000185D 39FE                <1>         cmp esi, edi
    35 0000185F 741A                <1>         je .12E
    36                              <1> 
    37 00001861 FA                  <1>         cli
    38                              <1> 
    39                              <1>         ;-----------------------------------------
    40                              <1>         ; 前回のFPUコンテキストを保存
    41                              <1>         ;-----------------------------------------
    42 00001862 89FB                <1>         mov ebx, edi
    43 00001864 E833000000          <1>         call get_tss_base
    44 00001869 E841000000          <1>         call save_fpu_context
    45                              <1> 
    46                              <1>         ;-----------------------------------------
    47                              <1>         ; 今回のFPUコンテキストを復帰
    48                              <1>         ;-----------------------------------------
    49 0000186E 89F3                <1>         mov ebx, esi
    50 00001870 E827000000          <1>         call get_tss_base
    51 00001875 E843000000          <1>         call load_fpu_context
    52                              <1> 
    53 0000187A FB                  <1>         sti
    54                              <1> .12E:
    55 0000187B EB0E                <1>         jmp .10E
    56                              <1> .10F:
    57 0000187D FA                  <1>         cli
    58                              <1> 
    59                              <1>         ;-----------------------------------------
    60                              <1>         ; 今回のFPUコンテキストを復帰
    61                              <1>         ;-----------------------------------------
    62 0000187E 89F3                <1>         mov ebx, esi
    63 00001880 E817000000          <1>         call get_tss_base
    64 00001885 E833000000          <1>         call load_fpu_context
    65                              <1> 
    66 0000188A FB                  <1>         sti
    67                              <1> .10E:
    68 0000188B 8935[98180000]      <1>         mov [.last_tss], esi
    69                              <1> 
    70                              <1>         ;-----------------------------------------
    71                              <1>         ; 【レジスタの復帰】
    72                              <1>         ;-----------------------------------------
    73 00001891 07                  <1>         pop es
    74 00001892 1F                  <1>         pop ds
    75 00001893 61                  <1>         popa
    76                              <1> 
    77 00001894 CF                  <1>         iret
    78                              <1> 
    79 00001895 00<rept>            <1> ALIGN 4, db 0
    80 00001898 00000000            <1> .last_tss: dd 0
    81                              <1> 
    82                              <1> get_tss_base:
    83 0000189C 8B83[BE080000]      <1>         mov eax, [GDT + ebx + 2]
    84 000018A2 C1E008              <1>         shl eax, 8
    85 000018A5 8A83[C3080000]      <1>         mov al,  [GDT + ebx + 7]
    86 000018AB C1C808              <1>         ror eax, 8
    87                              <1> 
    88 000018AE C3                  <1>         ret
    89                              <1> 
    90                              <1> save_fpu_context:
    91 000018AF DD7068              <1>         fnsave [eax + 104]
    92 000018B2 C780D4000000010000- <1>         mov [eax + 104 + 108], dword 1
    92 000018BB 00                  <1>
    93                              <1> 
    94 000018BC C3                  <1>         ret
    95                              <1> 
    96                              <1> load_fpu_context:
    97 000018BD 83B8D400000000      <1>         cmp [eax + 104 + 108], dword 0
    98 000018C4 7504                <1>         jne .10F
    99 000018C6 DBE3                <1>         fninit
   100 000018C8 EB03                <1>         jmp .10E
   101                              <1> .10F:
   102 000018CA DD6068              <1>         frstor [eax + 104]
   103                              <1> .10E:
   104 000018CD C3                  <1>         ret
   205                                  %include "../modules/protect/wait_tick.s"
     1                              <1> wait_tick:
     2                              <1>         ;------------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;------------------------------------
     5                              <1>                                                 ;-----------
     6                              <1>                                                 ; EBP + 8 | ウェイト
     7                              <1>                                                 ;-----------
     8 000018CE 55                  <1>         push EBP                                ; EBP + 4 | EIP(戻り番地)
     9 000018CF 89E5                <1>         mov ebp, esp                            ; EBP + 0 | EBP(元の値)
    10                              <1>                                                 ;---------|----------
    11                              <1> 
    12                              <1>         ;-----------------------------------
    13                              <1>         ; レジスタの保存
    14                              <1>         ;-----------------------------------
    15 000018D1 50                  <1>         push eax
    16 000018D2 51                  <1>         push ecx
    17                              <1> 
    18                              <1>         ;-----------------------------------
    19                              <1>         ; ウェイト
    20                              <1>         ;-----------------------------------
    21 000018D3 8B4D08              <1>         mov ecx, [ebp + 8]                      ; ECX = ウェイト回数
    22 000018D6 A1[F00A0000]        <1>         mov eax, [TIMER_COUNT]                  ; EAX = TIMER;
    23                              <1>                                                 ; do
    24                              <1>                                                 ; {
    25 000018DB 3905[F00A0000]      <1> .10L:   cmp [TIMER_COUNT], eax                  ;   while(TIMER != EAX)
    26 000018E1 74F8                <1>         je .10L
    27 000018E3 40                  <1>         inc eax                                 ;       EAX++;
    28 000018E4 E2F5                <1>         loop .10L                               ; } while (--ECX);
    29                              <1> 
    30                              <1>         ;-----------------------------------
    31                              <1>         ; レジスタの復帰
    32                              <1>         ;-----------------------------------
    33 000018E6 59                  <1>         pop ecx
    34 000018E7 58                  <1>         pop eax
    35                              <1> 
    36                              <1>         ;-----------------------------------
    37                              <1>         ; スタックフレーム
    38                              <1>         ;-----------------------------------
    39 000018E8 89EC                <1>         mov esp, ebp
    40 000018EA 5D                  <1>         pop ebp
    41                              <1> 
    42 000018EB C3                  <1>         ret
   206                                  %include "../modules/protect/memcpy.s"
     1                              <1> memcpy:
     2                              <1>     ; スタックフレームの構築
     3 000018EC 55                  <1>     push ebp
     4 000018ED 89E5                <1>     mov ebp, esp
     5                              <1> 
     6                              <1>     ; レジスタの保存
     7 000018EF 51                  <1>     push ecx
     8 000018F0 56                  <1>     push esi
     9 000018F1 57                  <1>     push edi
    10                              <1> 
    11                              <1>     ; バイト単位でのコピー
    12 000018F2 FC                  <1>     cld
    13 000018F3 8B7D08              <1>     mov edi, [ebp + 8]
    14 000018F6 8B750C              <1>     mov esi, [ebp + 12]
    15 000018F9 8B4D10              <1>     mov ecx, [ebp + 16]
    16                              <1> 
    17 000018FC F3A4                <1>     rep movsb
    18                              <1> 
    19                              <1>     ; レジスタの復帰
    20 000018FE 5F                  <1>     pop edi
    21 000018FF 5E                  <1>     pop esi
    22 00001900 59                  <1>     pop ecx
    23                              <1> 
    24                              <1>     ; スタックフレームの破棄
    25 00001901 89EC                <1>     mov esp, ebp
    26 00001903 5D                  <1>     pop ebp
    27                              <1> 
    28 00001904 C3                  <1>     ret
   207                                  
   208                                  ;***********************************************************
   209                                  ;  パディング
   210                                  ;***********************************************************
   211 00001905 00<rept>                        times KERNEL_SIZE - ($ - $$) db 0
   212                                  
   213                                  ;***********************************************************
   214                                  ;  FAT
   215                                  ;***********************************************************
   216                                  %include "fat.s"
     1                              <1> ;***********************************************************
     2                              <1> ;  FAT:FAT-1
     3                              <1> ;***********************************************************
     4                              <1>         times (FAT1_START) - ($ - $$) db 0x00
     5                              <1> ;-----------------------------------------------------------
     6                              <1> FAT1:
     7 00002000 FFFF                <1>         db 0xFF, 0xFF
     8 00002002 FFFF                <1>         dw 0xFFFF
     9 00002004 FFFF                <1>         dw 0xFFFF
    10                              <1> 
    11                              <1> ;***********************************************************
    12                              <1> ;  FAT:FAT-2
    13                              <1> ;***********************************************************
    14 00002006 00<rept>            <1>         times (FAT2_START) - ($ - $$) db 0x00
    15                              <1> ;-----------------------------------------------------------
    16                              <1> FAT2:
    17 00022000 FFFF                <1>         db 0xFF, 0xFF
    18 00022002 FFFF                <1>         dw 0xFFFF
    19 00022004 FFFF                <1>         dw 0xFFFF
    20                              <1> 
    21                              <1> ;***********************************************************
    22                              <1> ;  FAT:ルートディレクトリ領域
    23                              <1> ;***********************************************************
    24 00022006 00<rept>            <1>         times (ROOT_START) - ($ - $$) db 0x00
    25                              <1> ;-----------------------------------------------------------
    26                              <1> FAT_ROOT:
    27 00042000 424F4F5441424C4544- <1>         db 'BOOTABLE', 'DSK'
    27 00042009 534B                <1>
    28 0004200B 28                  <1>         db ATTR_ARCHIVE | ATTR_VOLUME_ID
    29 0004200C 00                  <1>         db 0x00
    30 0004200D 00                  <1>         db 0x00
    31 0004200E 0000                <1>         dw (0 << 11) | (0 << 5) | (0 / 2)
    32 00042010 0100                <1>         dw (0 << 9) | (0 << 5) | (1)
    33 00042012 0100                <1>         dw (0 << 9) | (0 << 5) | (1)
    34 00042014 0000                <1>         dw 0x0000
    35 00042016 0000                <1>         dw (0 << 11) | (0 << 5) | (0 / 2)
    36 00042018 0100                <1>         dw (0 << 9) | (0 << 5) | (1)
    37 0004201A 0000                <1>         dw 0
    38 0004201C 00000000            <1>         dd 0
    39                              <1> 
    40 00042020 5350454349414C2054- <1>         db 'SPECIAL ', 'TXT'
    40 00042029 5854                <1>
    41 0004202B 20                  <1>         db ATTR_ARCHIVE
    42 0004202C 00                  <1>         db 0x00
    43 0004202D 00                  <1>         db 0
    44 0004202E 0000                <1>         dw (0 << 11) | (0 << 5) | (0 / 2)
    45 00042030 2100                <1>         dw (0 << 9) | (1 << 5) | (1)
    46 00042032 2100                <1>         dw (0 << 9) | (1 << 5) | (1)
    47 00042034 0000                <1>         dw 0x0000
    48 00042036 0000                <1>         dw (0 << 11) | (0 << 5) | (0 / 2)
    49 00042038 2100                <1>         dw (0 << 9) | (1 << 5) | (1)
    50 0004203A 0200                <1>         dw 2
    51 0004203C 0B000000            <1>         dd FILE.end - FILE
    52                              <1> 
    53                              <1> ;***********************************************************
    54                              <1> ;  FAT:データ領域
    55                              <1> ;***********************************************************
    56 00042040 00<rept>            <1>         times FILE_START - ($ - $$) db 0x00
    57                              <1> ;-----------------------------------------------------------
    58 00046000 68656C6C6F2C204641- <1> FILE:   db 'hello, FAT!'
    58 00046009 5421                <1>
    59 0004600B 00                  <1> .end:   db 0
    60                              <1> 
    61 0004600C 00<rept>            <1> ALIGN 512, db 0x00
    62 00046200 00<rept>            <1>         times (512 * 63) db 0x00
