     1                                  ;***********************************************************
     2                                  ;  マクロ
     3                                  ;***********************************************************
     4                                  %define USE_SYSTEM_CALL
     5                                  %define USE_TEST_AND_SET
     6                                  
     7                                  %include "../include/define.s"
     1                              <1> BOOT_SIZE           equ (1024 * 8)                      ; ブートコードサイズ
     2                              <1> KERNEL_SIZE         equ (1024 * 8)                      ; カーネルサイズ
     3                              <1> 
     4                              <1> BOOT_LOAD           equ 0x7C00                          ; ブートプログラムのロード位置
     5                              <1> BOOT_END            equ (BOOT_LOAD + BOOT_SIZE)
     6                              <1> 
     7                              <1> SECT_SIZE           equ (512)                           ; セクタサイズ
     8                              <1> 
     9                              <1> BOOT_SECT           equ (BOOT_SIZE / SECT_SIZE)         ; ブートプログラムのセクタ数
    10                              <1> KERNEL_SECT         equ (KERNEL_SIZE / SECT_SIZE)
    11                              <1> 
    12                              <1> E820_RECORD_SIZE    equ 20
    13                              <1> 
    14                              <1> KERNEL_LOAD         equ 0x0010_1000
    15                              <1> 
    16                              <1> VECT_BASE           equ 0x0010_0000
    17                              <1> 
    18                              <1> STACK_BASE          equ 0x0010_3000                     ; タスク用スタックエリア
    19                              <1> STACK_SIZE          equ 1024                            ; スタックサイズ
    20                              <1> 
    21                              <1> SP_TASK_0           equ STACK_BASE + (STACK_SIZE * 1)
    22                              <1> SP_TASK_1           equ STACK_BASE + (STACK_SIZE * 2)
    23                              <1> SP_TASK_2           equ STACK_BASE + (STACK_SIZE * 3)
    24                              <1> SP_TASK_3           equ STACK_BASE + (STACK_SIZE * 4)
    25                              <1> SP_TASK_4           equ STACK_BASE + (STACK_SIZE * 5)
    26                              <1> SP_TASK_5           equ STACK_BASE + (STACK_SIZE * 6)
    27                              <1> SP_TASK_6           equ STACK_BASE + (STACK_SIZE * 7)
    28                              <1> 
    29                              <1> CR3_BASE            equ 0x0010_5000                     ; ページ変換テーブル：タスク３用
    30                              <1> 
    31                              <1> PARAM_TASK_4        equ 0x0010_8000
    32                              <1> PARAM_TASK_5        equ 0x0010_9000
    33                              <1> PARAM_TASK_6        equ 0x0010_A000
    34                              <1> 
    35                              <1> CR3_TASK_4          equ 0x0020_0000
    36                              <1> CR3_TASK_5          equ 0x0020_2000
    37                              <1> CR3_TASK_6          equ 0x0020_4000
    38                              <1> 
    39                              <1> FAT_SIZE            equ (1024 * 128)
    40                              <1> ROOT_SIZE           equ (1024 * 16)
    41                              <1> 
    42                              <1> FAT1_START          equ (KERNEL_SIZE)
    43                              <1> FAT2_START          equ (FAT1_START + FAT_SIZE)
    44                              <1> ROOT_START          equ (FAT2_START + FAT_SIZE)
    45                              <1> FILE_START          equ (ROOT_START + ROOT_SIZE)
    46                              <1> 
    47                              <1> ATTR_VOLUME_ID      equ 0x08
    48                              <1> ATTR_ARCHIVE        equ 0x20
     8                                  %include "../include/macro.s"
     1                              <1> %macro cdecl 1-*.nolist
     2                              <1> 
     3                              <1>     %rep %0 - 1
     4                              <1>         push %{-1:-1}
     5                              <1>         %rotate - 1
     6                              <1>     %endrep
     7                              <1>     %rotate - 1
     8                              <1> 
     9                              <1>         call %1
    10                              <1> 
    11                              <1>     %if 1 < %0
    12                              <1>         add sp, (__BITS__ >> 3) * (%0 - 1)
    13                              <1>     %endif
    14                              <1> 
    15                              <1> %endmacro
    16                              <1> 
    17                              <1> %macro set_vect 1-*.nolist
    18                              <1>         push eax
    19                              <1>         push edi
    20                              <1> 
    21                              <1>         mov edi, VECT_BASE + (%1 * 8)
    22                              <1>         mov eax, %2
    23                              <1> 
    24                              <1> 	%if 3 == %0
    25                              <1> 		mov [edi + 4], %3
    26                              <1> 	%endif
    27                              <1> 
    28                              <1>         mov [edi + 0], ax
    29                              <1>         shr eax, 16
    30                              <1>         mov [edi + 6], ax
    31                              <1> 
    32                              <1>         pop edi
    33                              <1>         pop eax
    34                              <1> %endmacro
    35                              <1> 
    36                              <1> %macro outp 2
    37                              <1>         mov al, %2
    38                              <1>         out %1, al
    39                              <1> %endmacro
    40                              <1> 
    41                              <1> %macro set_desc 2-*
    42                              <1>         push eax
    43                              <1>         push edi
    44                              <1> 
    45                              <1>         mov edi, %1             ; ディスクリプタアドレス
    46                              <1>         mov eax, %2             ; ベースアドレス
    47                              <1> 
    48                              <1>     %if 3 == %0
    49                              <1>         mov [edi + 0], %3       ; リミット
    50                              <1>     %endif
    51                              <1> 
    52                              <1>         mov [edi + 2], ax       ; ベース([15: 0])
    53                              <1>         shr eax, 16
    54                              <1>         mov [edi + 4], al       ; ベース([23:16])
    55                              <1>         mov [edi + 7], ah       ; ベース([31:24])
    56                              <1> 
    57                              <1>         pop edi
    58                              <1>         pop eax
    59                              <1> %endmacro
    60                              <1> 
    61                              <1> %macro set_gate 2-*
    62                              <1>         push eax
    63                              <1>         push edi
    64                              <1> 
    65                              <1>         mov edi, %1             ; ディスクリプタアドレス
    66                              <1>         mov eax, %2             ; ベースアドレス
    67                              <1> 
    68                              <1>         mov [edi + 0], ax       ; ベース([15: 0])
    69                              <1>         shr eax, 16
    70                              <1>         mov [edi + 6], ax       ; ベース([31:16])
    71                              <1> 
    72                              <1>         pop edi
    73                              <1>         pop eax
    74                              <1> %endmacro
    75                              <1> 
    76                              <1> struc drive
    77 00000000 <res 00000002>      <1>     .no resw 1      ; ドライブ番号
    78 00000002 <res 00000002>      <1>     .cyln resw 1    ; シリンダ
    79 00000004 <res 00000002>      <1>     .head resw 1    ; ヘッド
    80 00000006 <res 00000002>      <1>     .sect resw 1    ; セクタ
    81                              <1> endstruc
    82                              <1> 
    83                              <1> %define RING_ITEM_SIZE (1 << 4)
    84                              <1> %define RING_INDEX_MASK (RING_ITEM_SIZE - 1)
    85                              <1> 
    86                              <1> struc ring_buff
    87 00000000 <res 00000004>      <1>     .rp resd 1                  ; RP:読み込み位置
    88 00000004 <res 00000004>      <1>     .wp resd 1                  ; WP:書き込み位置　
    89 00000008 <res 00000010>      <1>     .item resb RING_ITEM_SIZE   ; バッファ
    90                              <1> endstruc
    91                              <1> 
    92                              <1> struc rose
    93 00000000 <res 00000004>      <1>     .x0 resd 1
    94 00000004 <res 00000004>      <1>     .y0 resd 1
    95 00000008 <res 00000004>      <1>     .x1 resd 1
    96 0000000C <res 00000004>      <1>     .y1 resd 1
    97                              <1> 
    98 00000010 <res 00000004>      <1>     .n resd 1
    99 00000014 <res 00000004>      <1>     .d resd 1
   100                              <1> 
   101 00000018 <res 00000004>      <1>     .color_x resd 1
   102 0000001C <res 00000004>      <1>     .color_y resd 1
   103 00000020 <res 00000004>      <1>     .color_z resd 1
   104 00000024 <res 00000004>      <1>     .color_s resd 1
   105 00000028 <res 00000004>      <1>     .color_f resd 1
   106 0000002C <res 00000004>      <1>     .color_b resd 1
   107                              <1> 
   108 00000030 <res 00000010>      <1>     .title resb 16
   109                              <1> endstruc
     9                                  
    10                                          ORG KERNEL_LOAD
    11                                  
    12                                  [BITS 32]
    13                                  ;***********************************************************
    14                                  ;  エントリポイント
    15                                  ;***********************************************************
    16                                  kernel:
    17                                          ;------------------------------------------
    18                                          ; フォントアドレスを取得
    19                                          ;------------------------------------------
    20 00000000 BE007E0000                      mov esi, BOOT_LOAD + SECT_SIZE
    21 00000005 0FB706                          movzx eax, word[esi + 0]
    22 00000008 0FB75E02                        movzx ebx, word[esi + 2]
    23 0000000C C1E004                          shl eax, 4
    24 0000000F 01D8                            add eax, ebx
    25 00000011 A3[F8020000]                    mov [FONT_ADR], eax
    26                                  
    27                                          ;------------------------------------------
    28                                          ; TSSディスクリプタの設定
    29                                          ;------------------------------------------
    30                                          set_desc GDT.tss_0, TSS_0
    30 00000016 50                  <1>  push eax
    30 00000017 57                  <1>  push edi
    30                              <1> 
    30 00000018 BF[18090000]        <1>  mov edi, %1
    30 0000001D B8[00030000]        <1>  mov eax, %2
    30                              <1> 
    30                              <1>  %if 3 == %0
    30                              <1>  mov [edi + 0], %3
    30                              <1>  %endif
    30                              <1> 
    30 00000022 66894702            <1>  mov [edi + 2], ax
    30 00000026 C1E810              <1>  shr eax, 16
    30 00000029 884704              <1>  mov [edi + 4], al
    30 0000002C 886707              <1>  mov [edi + 7], ah
    30                              <1> 
    30 0000002F 5F                  <1>  pop edi
    30 00000030 58                  <1>  pop eax
    31                                          set_desc GDT.tss_1, TSS_1
    31 00000031 50                  <1>  push eax
    31 00000032 57                  <1>  push edi
    31                              <1> 
    31 00000033 BF[20090000]        <1>  mov edi, %1
    31 00000038 B8[D8030000]        <1>  mov eax, %2
    31                              <1> 
    31                              <1>  %if 3 == %0
    31                              <1>  mov [edi + 0], %3
    31                              <1>  %endif
    31                              <1> 
    31 0000003D 66894702            <1>  mov [edi + 2], ax
    31 00000041 C1E810              <1>  shr eax, 16
    31 00000044 884704              <1>  mov [edi + 4], al
    31 00000047 886707              <1>  mov [edi + 7], ah
    31                              <1> 
    31 0000004A 5F                  <1>  pop edi
    31 0000004B 58                  <1>  pop eax
    32                                          set_desc GDT.tss_2, TSS_2
    32 0000004C 50                  <1>  push eax
    32 0000004D 57                  <1>  push edi
    32                              <1> 
    32 0000004E BF[28090000]        <1>  mov edi, %1
    32 00000053 B8[B0040000]        <1>  mov eax, %2
    32                              <1> 
    32                              <1>  %if 3 == %0
    32                              <1>  mov [edi + 0], %3
    32                              <1>  %endif
    32                              <1> 
    32 00000058 66894702            <1>  mov [edi + 2], ax
    32 0000005C C1E810              <1>  shr eax, 16
    32 0000005F 884704              <1>  mov [edi + 4], al
    32 00000062 886707              <1>  mov [edi + 7], ah
    32                              <1> 
    32 00000065 5F                  <1>  pop edi
    32 00000066 58                  <1>  pop eax
    33                                          set_desc GDT.tss_3, TSS_3
    33 00000067 50                  <1>  push eax
    33 00000068 57                  <1>  push edi
    33                              <1> 
    33 00000069 BF[30090000]        <1>  mov edi, %1
    33 0000006E B8[88050000]        <1>  mov eax, %2
    33                              <1> 
    33                              <1>  %if 3 == %0
    33                              <1>  mov [edi + 0], %3
    33                              <1>  %endif
    33                              <1> 
    33 00000073 66894702            <1>  mov [edi + 2], ax
    33 00000077 C1E810              <1>  shr eax, 16
    33 0000007A 884704              <1>  mov [edi + 4], al
    33 0000007D 886707              <1>  mov [edi + 7], ah
    33                              <1> 
    33 00000080 5F                  <1>  pop edi
    33 00000081 58                  <1>  pop eax
    34                                          set_desc GDT.tss_4, TSS_4
    34 00000082 50                  <1>  push eax
    34 00000083 57                  <1>  push edi
    34                              <1> 
    34 00000084 BF[38090000]        <1>  mov edi, %1
    34 00000089 B8[60060000]        <1>  mov eax, %2
    34                              <1> 
    34                              <1>  %if 3 == %0
    34                              <1>  mov [edi + 0], %3
    34                              <1>  %endif
    34                              <1> 
    34 0000008E 66894702            <1>  mov [edi + 2], ax
    34 00000092 C1E810              <1>  shr eax, 16
    34 00000095 884704              <1>  mov [edi + 4], al
    34 00000098 886707              <1>  mov [edi + 7], ah
    34                              <1> 
    34 0000009B 5F                  <1>  pop edi
    34 0000009C 58                  <1>  pop eax
    35                                          set_desc GDT.tss_5, TSS_5
    35 0000009D 50                  <1>  push eax
    35 0000009E 57                  <1>  push edi
    35                              <1> 
    35 0000009F BF[40090000]        <1>  mov edi, %1
    35 000000A4 B8[38070000]        <1>  mov eax, %2
    35                              <1> 
    35                              <1>  %if 3 == %0
    35                              <1>  mov [edi + 0], %3
    35                              <1>  %endif
    35                              <1> 
    35 000000A9 66894702            <1>  mov [edi + 2], ax
    35 000000AD C1E810              <1>  shr eax, 16
    35 000000B0 884704              <1>  mov [edi + 4], al
    35 000000B3 886707              <1>  mov [edi + 7], ah
    35                              <1> 
    35 000000B6 5F                  <1>  pop edi
    35 000000B7 58                  <1>  pop eax
    36                                          set_desc GDT.tss_6, TSS_6
    36 000000B8 50                  <1>  push eax
    36 000000B9 57                  <1>  push edi
    36                              <1> 
    36 000000BA BF[48090000]        <1>  mov edi, %1
    36 000000BF B8[10080000]        <1>  mov eax, %2
    36                              <1> 
    36                              <1>  %if 3 == %0
    36                              <1>  mov [edi + 0], %3
    36                              <1>  %endif
    36                              <1> 
    36 000000C4 66894702            <1>  mov [edi + 2], ax
    36 000000C8 C1E810              <1>  shr eax, 16
    36 000000CB 884704              <1>  mov [edi + 4], al
    36 000000CE 886707              <1>  mov [edi + 7], ah
    36                              <1> 
    36 000000D1 5F                  <1>  pop edi
    36 000000D2 58                  <1>  pop eax
    37                                  
    38                                          ;------------------------------------------
    39                                          ; コールゲートの設定
    40                                          ;------------------------------------------
    41                                          set_gate GDT.call_gate, call_gate
    41 000000D3 50                  <1>  push eax
    41 000000D4 57                  <1>  push edi
    41                              <1> 
    41 000000D5 BF[50090000]        <1>  mov edi, %1
    41 000000DA B8[00180000]        <1>  mov eax, %2
    41                              <1> 
    41 000000DF 668907              <1>  mov [edi + 0], ax
    41 000000E2 C1E810              <1>  shr eax, 16
    41 000000E5 66894706            <1>  mov [edi + 6], ax
    41                              <1> 
    41 000000E9 5F                  <1>  pop edi
    41 000000EA 58                  <1>  pop eax
    42                                  
    43                                          ;------------------------------------------
    44                                          ; LDTの設定
    45                                          ;------------------------------------------
    46                                          set_desc GDT.ldt, LDT, word LDT_LIMIT
    46 000000EB 50                  <1>  push eax
    46 000000EC 57                  <1>  push edi
    46                              <1> 
    46 000000ED BF[10090000]        <1>  mov edi, %1
    46 000000F2 B8[5E090000]        <1>  mov eax, %2
    46                              <1> 
    46                              <1>  %if 3 == %0
    46 000000F7 66C7075F00          <1>  mov [edi + 0], %3
    46                              <1>  %endif
    46                              <1> 
    46 000000FC 66894702            <1>  mov [edi + 2], ax
    46 00000100 C1E810              <1>  shr eax, 16
    46 00000103 884704              <1>  mov [edi + 4], al
    46 00000106 886707              <1>  mov [edi + 7], ah
    46                              <1> 
    46 00000109 5F                  <1>  pop edi
    46 0000010A 58                  <1>  pop eax
    47                                  
    48                                          ;------------------------------------------
    49                                          ; GDTをロード(再設定)
    50                                          ;------------------------------------------
    51 0000010B 0F0115[58090000]                lgdt [GDTR]
    52                                  
    53                                          ;------------------------------------------
    54                                          ; スタックの設定
    55                                          ;------------------------------------------
    56 00000112 BC00341000                      mov esp, SP_TASK_0
    57                                  
    58                                          ;------------------------------------------
    59                                          ; タスクレジスタの初期化
    60                                          ;------------------------------------------
    61 00000117 66B83000                        mov ax, SS_TASK_0
    62 0000011B 0F00D8                          ltr ax
    63                                  
    64                                          ;------------------------------------------
    65                                          ; 初期化
    66                                          ;------------------------------------------
    67 0000011E E8B7130000                      cdecl init_int
    68 00000123 E838150000                      cdecl init_pic
    69 00000128 E8CC080000                      cdecl init_page
    70                                  
    71 0000012D 5057BF00001000B8-               set_vect 0x00, int_zero_div
    71 00000135 [42160000]668907C1-
    71 0000013D E810668947065F58   
    72 00000145 5057BF38001000B8-               set_vect 0x07, int_nm
    72 0000014D [6B180000]668907C1-
    72 00000155 E810668947065F58   
    73 0000015D 5057BF70001000B8-               set_vect 0x0E, int_pf
    73 00000165 [240B0000]668907C1-
    73 0000016D E810668947065F58   
    74 00000175 5057BF00011000B8-               set_vect 0x20, int_timer
    74 0000017D [9B0A0000]668907C1-
    74 00000185 E810668947065F58   
    75 0000018D 5057BF08011000B8-               set_vect 0x21, int_keyboard
    75 00000195 [C8160000]668907C1-
    75 0000019D E810668947065F58   
    76 000001A5 5057BF40011000B8-               set_vect 0x28, int_rtc
    76 000001AD [8B160000]668907C1-
    76 000001B5 E810668947065F58   
    77 000001BD 5057BF08041000B8-               set_vect 0x81, trap_gate_81, word 0xEF00
    77 000001C5 [30180000]66C74704-
    77 000001CD 00EF668907C1E81066-
    77 000001D6 8947065F58         
    78 000001DB 5057BF10041000B8-               set_vect 0x82, trap_gate_82, word 0xEF00
    78 000001E3 [3E180000]66C74704-
    78 000001EB 00EF668907C1E81066-
    78 000001F4 8947065F58         
    79                                  
    80                                          ;------------------------------------------
    81                                          ; デバイスの割り込み許可
    82                                          ;------------------------------------------
    83 000001F9 6A10E8B41400006683-             cdecl rtc_int_en, 0x10
    83 00000202 C404               
    84 00000204 E8AF150000                      cdecl int_en_timer0
    85                                  
    86                                          ;------------------------------------------
    87                                          ; IMR(割り込みマスクレジスタ)の設定
    88                                          ;------------------------------------------
    89                                          outp 0x21, 0b_1111_1000
    89 00000209 B0F8                <1>  mov al, %2
    89 0000020B E621                <1>  out %1, al
    90                                          outp 0xA1, 0b_1111_1110
    90 0000020D B0FE                <1>  mov al, %2
    90 0000020F E6A1                <1>  out %1, al
    91                                  
    92                                          ;------------------------------------------
    93                                          ; ページングの有効化
    94                                          ;------------------------------------------
    95 00000211 B800501000                      mov eax, CR3_BASE
    96 00000216 0F22D8                          mov cr3, eax
    97                                  
    98 00000219 0F20C0                          mov eax, cr0
    99 0000021C 0D00000080                      or eax, (1 << 31)
   100 00000221 0F22C0                          mov cr0, eax
   101 00000224 EB00                            jmp $ + 2
   102                                  
   103                                          ;------------------------------------------
   104                                          ; CPUの割り込み許可
   105                                          ;------------------------------------------
   106 00000226 FB                              sti
   107                                  
   108                                          ;------------------------------------------
   109                                          ; フォントの一覧表示
   110                                          ;------------------------------------------
   111 00000227 6A0D6A3FE83C0E0000-             cdecl draw_font, 63, 13
   111 00000230 6683C408           
   112 00000234 6A046A3FE8B20E0000-             cdecl draw_color_bar, 63, 4
   112 0000023D 6683C408           
   113                                  
   114                                          ;------------------------------------------
   115                                          ; 文字列の表示
   116                                          ;------------------------------------------
   117 00000241 68[DE020000]680F01-             cdecl draw_str, 25, 14, 0x010F, .s0
   117 00000249 00006A0E6A19E85D0E-
   117 00000252 00006683C410       
   118                                  
   119                                  .10L:
   120                                  
   121                                          ;------------------------------------------
   122                                          ; 回転する棒を表示
   123                                          ;------------------------------------------
   124 00000258 E86A150000                      cdecl draw_rotation_bar
   125                                  
   126                                          ;------------------------------------------
   127                                          ; キーコードの取得
   128                                          ;------------------------------------------
   129 0000025D 68[F0020000]68-                 cdecl ring_rd, _KEY_BUFF, .int_key
   129 00000263 [EC160000]E8981400-
   129 0000026B 006683C408         
   130 00000270 83F800                          cmp eax, 0
   131 00000273 7464                            je .10E
   132                                  
   133                                          ;------------------------------------------
   134                                          ; キーコードの表示
   135                                          ;------------------------------------------
   136 00000275 68[EC160000]6A1D6A-             cdecl draw_key, 2, 29, _KEY_BUFF
   136 0000027D 02E8E21400006683C4-
   136 00000286 0C                 
   137                                  
   138                                          ;------------------------------------------
   139                                          ; キー押下時の処理
   140                                          ;------------------------------------------
   141 00000287 A0[F0020000]                    mov al, [.int_key]
   142 0000028C 3C02                            cmp al, 0x02
   143 0000028E 7522                            jne .12E
   144                                  
   145                                          ;------------------------------------------
   146                                          ; ファイル読み込み
   147                                          ;------------------------------------------
   148 00000290 FF15F09B0000                    call [BOOT_LOAD + BOOT_SIZE - 16]
   149                                  
   150                                          ;------------------------------------------
   151                                          ; ファイルの内容を表示
   152                                          ;------------------------------------------
   153 00000296 BE00780000                      mov esi, 0x7800
   154 0000029B C6462000                        mov [esi + 32], byte 0
   155 0000029F 5668040F00006A006A-             cdecl draw_str, 0, 0, 0x0F04, esi
   155 000002A8 00E8030E00006683C4-
   155 000002B1 10                 
   156                                  .12E:
   157                                  
   158                                          ;------------------------------------------
   159                                          ; CTAL + ALT + ENDキー
   160                                          ;------------------------------------------
   161 000002B2 A0[F0020000]                    mov al, [.int_key]
   162 000002B7 50E8741600006683C4-             cdecl ctrl_alt_end, eax
   162 000002C0 04                 
   163 000002C1 83F800                          cmp eax, 0
   164 000002C4 7413                            je .14E
   165                                  
   166 000002C6 B800000000                      mov eax, 0
   167 000002CB 0FAB05[F4020000]                bts [.once], eax
   168 000002D2 7205                            jc .14E
   169 000002D4 E8D8160000                      cdecl power_off
   170                                  
   171                                  .14E:
   172                                  .10E:
   173 000002D9 E97AFFFFFF                      jmp .10L
   174                                  
   175 000002DE 2048656C6C6F2C206B-     .s0:    db " Hello, kernel! ", 0
   175 000002E7 65726E656C212000   
   176                                  
   177 000002EF 00                      ALIGN 4, db 0
   178 000002F0 00000000                .int_key: dd 0
   179 000002F4 00000000                .once:  dd 0
   180                                  
   181                                  ALIGN 4, db 0
   182 000002F8 00000000                FONT_ADR: dd 0
   183 000002FC 00000000                RTC_TIME: dd 0
   184                                  
   185                                  ;***********************************************************
   186                                  ;  タスク
   187                                  ;***********************************************************
   188                                  %include "descriptor.s"
     1                              <1> ;***********************************************************
     2                              <1> ;  TSS
     3                              <1> ;***********************************************************
     4                              <1> TSS_0:
     5 00000300 00000000            <1> .link:    dd 0
     6 00000304 00321000            <1> .esp0:    dd SP_TASK_0 - 512
     7 00000308 10000000            <1> .ss0:     dd DS_KERNEL
     8 0000030C 00000000            <1> .esp1:    dd 0
     9 00000310 00000000            <1> .ss1:     dd 0
    10 00000314 00000000            <1> .esp2:    dd 0
    11 00000318 00000000            <1> .ss2:     dd 0
    12 0000031C 00501000            <1> .cr3:     dd CR3_BASE
    13 00000320 00000000            <1> .eip:     dd 0
    14 00000324 00000000            <1> .eflags:  dd 0
    15 00000328 00000000            <1> .eax:     dd 0
    16 0000032C 00000000            <1> .ecx:     dd 0
    17 00000330 00000000            <1> .edx:     dd 0
    18 00000334 00000000            <1> .ebx:     dd 0
    19 00000338 00000000            <1> .esp:     dd 0
    20 0000033C 00000000            <1> .ebp:     dd 0
    21 00000340 00000000            <1> .esi:     dd 0
    22 00000344 00000000            <1> .edi:     dd 0
    23 00000348 00000000            <1> .es:      dd 0
    24 0000034C 00000000            <1> .cs:      dd 0
    25 00000350 00000000            <1> .ss:      dd 0
    26 00000354 00000000            <1> .ds:      dd 0
    27 00000358 00000000            <1> .fs:      dd 0
    28 0000035C 00000000            <1> .gs:      dd 0
    29 00000360 00000000            <1> .ldt:     dd 0
    30 00000364 00000000            <1> .io:      dd 0
    31 00000368 00<rept>            <1> .fp_save: times 108 + 4 db 0
    32                              <1> 
    33                              <1> TSS_1:
    34 000003D8 00000000            <1> .link:    dd 0
    35 000003DC 00361000            <1> .esp0:    dd SP_TASK_1 - 512
    36 000003E0 10000000            <1> .ss0:     dd DS_KERNEL
    37 000003E4 00000000            <1> .esp1:    dd 0
    38 000003E8 00000000            <1> .ss1:     dd 0
    39 000003EC 00000000            <1> .esp2:    dd 0
    40 000003F0 00000000            <1> .ss2:     dd 0
    41 000003F4 00501000            <1> .cr3:     dd CR3_BASE
    42 000003F8 [8A0B0000]          <1> .eip:     dd task_1
    43 000003FC 02020000            <1> .eflags:  dd 0x0202
    44 00000400 00000000            <1> .eax:     dd 0
    45 00000404 00000000            <1> .ecx:     dd 0
    46 00000408 00000000            <1> .edx:     dd 0
    47 0000040C 00000000            <1> .ebx:     dd 0
    48 00000410 00381000            <1> .esp:     dd SP_TASK_1
    49 00000414 00000000            <1> .ebp:     dd 0
    50 00000418 00000000            <1> .esi:     dd 0
    51 0000041C 00000000            <1> .edi:     dd 0
    52 00000420 27000000            <1> .es:      dd DS_TASK_1
    53 00000424 1F000000            <1> .cs:      dd CS_TASK_1
    54 00000428 27000000            <1> .ss:      dd DS_TASK_1
    55 0000042C 27000000            <1> .ds:      dd DS_TASK_1
    56 00000430 27000000            <1> .fs:      dd DS_TASK_1
    57 00000434 27000000            <1> .gs:      dd DS_TASK_1
    58 00000438 28000000            <1> .ldt:     dd SS_LDT
    59 0000043C 00000000            <1> .io:      dd 0
    60 00000440 00<rept>            <1> .fp_save: times 108 + 4 db 0
    61                              <1> 
    62                              <1> TSS_2:
    63 000004B0 00000000            <1> .link:    dd 0
    64 000004B4 003A1000            <1> .esp0:    dd SP_TASK_2 - 512
    65 000004B8 10000000            <1> .ss0:     dd DS_KERNEL
    66 000004BC 00000000            <1> .esp1:    dd 0
    67 000004C0 00000000            <1> .ss1:	    dd 0
    68 000004C4 00000000            <1> .esp2:    dd 0
    69 000004C8 00000000            <1> .ss2:     dd 0
    70 000004CC 00501000            <1> .cr3:     dd CR3_BASE
    71 000004D0 [BF0B0000]          <1> .eip:     dd task_2
    72 000004D4 02020000            <1> .eflags:  dd 0x0202
    73 000004D8 00000000            <1> .eax:     dd 0
    74 000004DC 00000000            <1> .ecx:     dd 0
    75 000004E0 00000000            <1> .edx:     dd 0
    76 000004E4 00000000            <1> .ebx:			dd 0
    77 000004E8 003C1000            <1> .esp:			dd SP_TASK_2
    78 000004EC 00000000            <1> .ebp:			dd 0
    79 000004F0 00000000            <1> .esi:			dd 0
    80 000004F4 00000000            <1> .edi:			dd 0
    81 000004F8 37000000            <1> .es:			dd DS_TASK_2
    82 000004FC 2F000000            <1> .cs:			dd CS_TASK_2
    83 00000500 37000000            <1> .ss:			dd DS_TASK_2
    84 00000504 37000000            <1> .ds:			dd DS_TASK_2
    85 00000508 37000000            <1> .fs:			dd DS_TASK_2
    86 0000050C 37000000            <1> .gs:			dd DS_TASK_2
    87 00000510 28000000            <1> .ldt:			dd SS_LDT
    88 00000514 00000000            <1> .io:			dd 0
    89 00000518 00<rept>            <1> .fp_save: times 108 + 4 db 0
    90                              <1> 
    91                              <1> TSS_3:
    92 00000588 00000000            <1> .link:    dd 0
    93 0000058C 003E1000            <1> .esp0:    dd SP_TASK_3 - 512
    94 00000590 10000000            <1> .ss0:     dd DS_KERNEL
    95 00000594 00000000            <1> .esp1:    dd 0
    96 00000598 00000000            <1> .ss1:     dd 0
    97 0000059C 00000000            <1> .esp2:    dd 0
    98 000005A0 00000000            <1> .ss2:     dd 0
    99 000005A4 00501000            <1> .cr3:     dd CR3_BASE
   100 000005A8 [900C0000]          <1> .eip:     dd task_3
   101 000005AC 02020000            <1> .eflags:  dd 0x0202
   102 000005B0 00000000            <1> .eax:     dd 0
   103 000005B4 00000000            <1> .ecx:     dd 0
   104 000005B8 00000000            <1> .edx:     dd 0
   105 000005BC 00000000            <1> .ebx:     dd 0
   106 000005C0 00401000            <1> .esp:     dd SP_TASK_3
   107 000005C4 00000000            <1> .ebp:     dd 0
   108 000005C8 00000000            <1> .esi:     dd 0
   109 000005CC 00000000            <1> .edi:     dd 0
   110 000005D0 47000000            <1> .es:      dd DS_TASK_3
   111 000005D4 3F000000            <1> .cs:      dd CS_TASK_3
   112 000005D8 47000000            <1> .ss:      dd DS_TASK_3
   113 000005DC 47000000            <1> .ds:      dd DS_TASK_3
   114 000005E0 47000000            <1> .fs:      dd DS_TASK_3
   115 000005E4 47000000            <1> .gs:      dd DS_TASK_3
   116 000005E8 28000000            <1> .ldt:     dd SS_LDT
   117 000005EC 00000000            <1> .io:      dd 0
   118 000005F0 00<rept>            <1> .fp_save: times 108 + 4 db 0
   119                              <1> 
   120                              <1> TSS_4:
   121 00000660 00000000            <1> .link:    dd 0
   122 00000664 00421000            <1> .esp0:    dd SP_TASK_4 - 512
   123 00000668 10000000            <1> .ss0:     dd DS_KERNEL
   124 0000066C 00000000            <1> .esp1:    dd 0
   125 00000670 00000000            <1> .ss1:     dd 0
   126 00000674 00000000            <1> .esp2:    dd 0
   127 00000678 00000000            <1> .ss2:     dd 0
   128 0000067C 00002000            <1> .cr3:     dd CR3_TASK_4
   129 00000680 [900C0000]          <1> .eip:     dd task_3
   130 00000684 02020000            <1> .eflags:  dd 0x0202
   131 00000688 00000000            <1> .eax:     dd 0
   132 0000068C 00000000            <1> .ecx:     dd 0
   133 00000690 00000000            <1> .edx:     dd 0
   134 00000694 00000000            <1> .ebx:     dd 0
   135 00000698 00441000            <1> .esp:     dd SP_TASK_4
   136 0000069C 00000000            <1> .ebp:     dd 0
   137 000006A0 00000000            <1> .esi:     dd 0
   138 000006A4 00000000            <1> .edi:     dd 0
   139 000006A8 4F000000            <1> .es:      dd DS_TASK_4
   140 000006AC 3F000000            <1> .cs:      dd CS_TASK_3
   141 000006B0 4F000000            <1> .ss:      dd DS_TASK_4
   142 000006B4 4F000000            <1> .ds:      dd DS_TASK_4
   143 000006B8 4F000000            <1> .fs:      dd DS_TASK_4
   144 000006BC 4F000000            <1> .gs:      dd DS_TASK_4
   145 000006C0 28000000            <1> .ldt:     dd SS_LDT
   146 000006C4 00000000            <1> .io:      dd 0
   147 000006C8 00<rept>            <1> .fp_save: times 108 + 4 db 0
   148                              <1> 
   149                              <1> TSS_5:
   150 00000738 00000000            <1> .link:    dd 0
   151 0000073C 00461000            <1> .esp0:    dd SP_TASK_5 - 512
   152 00000740 10000000            <1> .ss0:     dd DS_KERNEL
   153 00000744 00000000            <1> .esp1:    dd 0
   154 00000748 00000000            <1> .ss1:     dd 0
   155 0000074C 00000000            <1> .esp2:    dd 0
   156 00000750 00000000            <1> .ss2:     dd 0
   157 00000754 00202000            <1> .cr3:     dd CR3_TASK_5
   158 00000758 [900C0000]          <1> .eip:     dd task_3
   159 0000075C 02020000            <1> .eflags:  dd 0x0202
   160 00000760 00000000            <1> .eax:     dd 0
   161 00000764 00000000            <1> .ecx:     dd 0
   162 00000768 00000000            <1> .edx:     dd 0
   163 0000076C 00000000            <1> .ebx:     dd 0
   164 00000770 00481000            <1> .esp:     dd SP_TASK_5
   165 00000774 00000000            <1> .ebp:     dd 0
   166 00000778 00000000            <1> .esi:     dd 0
   167 0000077C 00000000            <1> .edi:     dd 0
   168 00000780 57000000            <1> .es:      dd DS_TASK_5
   169 00000784 3F000000            <1> .cs:      dd CS_TASK_3
   170 00000788 57000000            <1> .ss:      dd DS_TASK_5
   171 0000078C 57000000            <1> .ds:      dd DS_TASK_5
   172 00000790 57000000            <1> .fs:      dd DS_TASK_5
   173 00000794 57000000            <1> .gs:      dd DS_TASK_5
   174 00000798 28000000            <1> .ldt:     dd SS_LDT
   175 0000079C 00000000            <1> .io:      dd 0
   176 000007A0 00<rept>            <1> .fp_save: times 108 + 4 db 0
   177                              <1> 
   178                              <1> TSS_6:
   179 00000810 00000000            <1> .link:    dd 0
   180 00000814 004A1000            <1> .esp0:    dd SP_TASK_6 - 512
   181 00000818 10000000            <1> .ss0:     dd DS_KERNEL
   182 0000081C 00000000            <1> .esp1:    dd 0
   183 00000820 00000000            <1> .ss1:     dd 0
   184 00000824 00000000            <1> .esp2:    dd 0
   185 00000828 00000000            <1> .ss2:     dd 0
   186 0000082C 00402000            <1> .cr3:     dd CR3_TASK_6
   187 00000830 [900C0000]          <1> .eip:     dd task_3
   188 00000834 02020000            <1> .eflags:  dd 0x0202
   189 00000838 00000000            <1> .eax:     dd 0
   190 0000083C 00000000            <1> .ecx:     dd 0
   191 00000840 00000000            <1> .edx:     dd 0
   192 00000844 00000000            <1> .ebx:     dd 0
   193 00000848 004C1000            <1> .esp:     dd SP_TASK_6
   194 0000084C 00000000            <1> .ebp:     dd 0
   195 00000850 00000000            <1> .esi:     dd 0
   196 00000854 00000000            <1> .edi:     dd 0
   197 00000858 5F000000            <1> .es:      dd DS_TASK_6
   198 0000085C 3F000000            <1> .cs:      dd CS_TASK_3
   199 00000860 5F000000            <1> .ss:      dd DS_TASK_6
   200 00000864 5F000000            <1> .ds:      dd DS_TASK_6
   201 00000868 5F000000            <1> .fs:      dd DS_TASK_6
   202 0000086C 5F000000            <1> .gs:      dd DS_TASK_6
   203 00000870 28000000            <1> .ldt:     dd SS_LDT
   204 00000874 00000000            <1> .io:      dd 0
   205 00000878 00<rept>            <1> .fp_save:	times 108 + 4 db 0
   206                              <1> 
   207                              <1> ;***********************************************************
   208                              <1> ;  グローバルディスクリプタテーブル
   209                              <1> ;***********************************************************
   210 000008E8 0000000000000000    <1> GDT:        dq 0x0000000000000000
   211 000008F0 FFFF0000009ACF00    <1> .cs_kernel: dq 0x00CF9A000000FFFF
   212 000008F8 FFFF00000092CF00    <1> .ds_kernel: dq 0x00CF92000000FFFF
   213 00000900 FFFF0000009A0F00    <1> .cs_bit16:  dq 0x000F9A000000FFFF
   214 00000908 FFFF000000920F00    <1> .ds_bit16:  dq 0x000F92000000FFFF
   215 00000910 0000000000820000    <1> .ldt        dq 0x0000820000000000
   216 00000918 6700000000890000    <1> .tss_0:     dq 0x0000890000000067
   217 00000920 6700000000890000    <1> .tss_1:     dq 0x0000890000000067
   218 00000928 6700000000890000    <1> .tss_2:     dq 0x0000890000000067
   219 00000930 6700000000890000    <1> .tss_3:     dq 0x0000890000000067
   220 00000938 6700000000890000    <1> .tss_4:     dq 0x0000890000000067
   221 00000940 6700000000890000    <1> .tss_5:     dq 0x0000890000000067
   222 00000948 6700000000890000    <1> .tss_6:     dq 0x0000890000000067
   223 00000950 0000080004EC0000    <1> .call_gate: dq 0x0000EC0400080000
   224                              <1> .end:
   225                              <1> 
   226                              <1> CS_KERNEL   equ .cs_kernel - GDT
   227                              <1> DS_KERNEL   equ .ds_kernel - GDT
   228                              <1> SS_LDT      equ .ldt - GDT
   229                              <1> SS_TASK_0   equ .tss_0 - GDT
   230                              <1> SS_TASK_1   equ .tss_1 - GDT
   231                              <1> SS_TASK_2   equ .tss_2 - GDT
   232                              <1> SS_TASK_3   equ .tss_3 - GDT
   233                              <1> SS_TASK_4   equ .tss_4 - GDT
   234                              <1> SS_TASK_5   equ .tss_5 - GDT
   235                              <1> SS_TASK_6   equ .tss_6 - GDT
   236                              <1> SS_GATE_0   equ .call_gate - GDT
   237                              <1> 
   238 00000958 6F00                <1> GDTR:   dw GDT.end - GDT - 1
   239 0000095A [E8080000]          <1>         dd GDT
   240                              <1> 
   241                              <1> ;***********************************************************
   242                              <1> ;  ローカルディスクリプタテーブル
   243                              <1> ;***********************************************************
   244 0000095E 0000000000000000    <1> LDT:        dq 0x0000000000000000
   245 00000966 FFFF0000009ACF00    <1> .cs_task_0: dq 0x00CF9A000000FFFF
   246 0000096E FFFF00000092CF00    <1> .ds_task_0: dq 0x00CF92000000FFFF
   247 00000976 FFFF000000FACF00    <1> .cs_task_1: dq 0x00CFFA000000FFFF
   248 0000097E FFFF000000F2CF00    <1> .ds_task_1: dq 0x00CFF2000000FFFF
   249 00000986 FFFF000000FACF00    <1> .cs_task_2: dq 0x00CFFA000000FFFF
   250 0000098E FFFF000000F2CF00    <1> .ds_task_2: dq 0x00CFF2000000FFFF
   251 00000996 FFFF000000FACF00    <1> .cs_task_3: dq 0x00CFFA000000FFFF
   252 0000099E FFFF000000F2CF00    <1> .ds_task_3: dq 0x00CFF2000000FFFF
   253 000009A6 FFFF000000F2CF00    <1> .ds_task_4: dq 0x00CFF2000000FFFF
   254 000009AE FFFF000000F2CF00    <1> .ds_task_5: dq 0x00CFF2000000FFFF
   255 000009B6 FFFF000000F2CF00    <1> .ds_task_6: dq 0x00CFF2000000FFFF
   256                              <1> .end:
   257                              <1> 
   258                              <1> CS_TASK_0   equ (.cs_task_0 - LDT) | 4
   259                              <1> DS_TASK_0   equ (.ds_task_0 - LDT) | 4
   260                              <1> CS_TASK_1   equ (.cs_task_1 - LDT) | 4 | 3
   261                              <1> DS_TASK_1   equ (.ds_task_1 - LDT) | 4 | 3
   262                              <1> CS_TASK_2   equ	(.cs_task_2 - LDT) | 4 | 3
   263                              <1> DS_TASK_2   equ (.ds_task_2 - LDT) | 4 | 3
   264                              <1> CS_TASK_3   equ (.cs_task_3 - LDT) | 4 | 3
   265                              <1> DS_TASK_3   equ (.ds_task_3 - LDT) | 4 | 3
   266                              <1> DS_TASK_4   equ (.ds_task_4 - LDT) | 4 | 3
   267                              <1> DS_TASK_5   equ (.ds_task_5 - LDT) | 4 | 3
   268                              <1> DS_TASK_6   equ (.ds_task_6 - LDT) | 4 | 3
   269                              <1> 
   270                              <1> LDT_LIMIT   equ .end - LDT - 1
   189                                  %include "modules/paging.s"
     1                              <1> page_set_4m:
     2                              <1>         ;---------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;---------------------------------
     5 000009BE 55                  <1>         push ebp
     6 000009BF 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;---------------------------------
     9                              <1>         ; レジスタの保存
    10                              <1>         ;---------------------------------
    11 000009C1 60                  <1>         pusha
    12                              <1> 
    13                              <1>         ;---------------------------------
    14                              <1>         ; ページディレクトリの作成(P=0)
    15                              <1>         ;---------------------------------
    16 000009C2 FC                  <1>         cld                                 ; // DFクリア (+方向)
    17 000009C3 8B7D08              <1>         mov edi, [ebp + 8]                  ; EDI = ページディレクトリの先頭;
    18 000009C6 B800000000          <1>         mov eax, 0x00000000                 ; EAX = 0; // P = 0
    19 000009CB B900040000          <1>         mov ecx, 1024                       ; count = 1024;
    20 000009D0 F3AB                <1>         rep stosd                           ; while (count--) *dst++ = 属性;
    21                              <1> 
    22                              <1>         ;---------------------------------
    23                              <1>         ; 先頭のエントリを設定
    24                              <1>         ;---------------------------------
    25 000009D2 89F8                <1>         mov eax, edi                        ; EAX = EDI; // ページディレクトリの直後
    26 000009D4 2500F0FFFF          <1>         and eax, ~0x0000_0FFF               ; EAX &= ~0FFF; // 物理アドレスの指定
    27 000009D9 83C807              <1>         or eax, 7                           ; EAX |= 7; // RWの許可
    28 000009DC 898700F0FFFF        <1>         mov [edi - (1024 * 4)], eax         ; // 先頭のエントリを設定
    29                              <1> 
    30                              <1>         ;---------------------------------
    31                              <1>         ; ページテーブルの設置(リニア)
    32                              <1>         ;---------------------------------
    33 000009E2 B807000000          <1>         mov eax, 0x00000007                 ; // 物理アドレスの指定とRWの許可
    34 000009E7 B900040000          <1>         mov ecx, 1024                       ; count = 1024;
    35                              <1>                                             ; do
    36                              <1> .10L:                                       ; {
    37 000009EC AB                  <1>         stosd                               ;   *dst++ = 属性;
    38 000009ED 0500100000          <1>         add eax, 0x00001000                 ;   adr += 0x1000;
    39 000009F2 E2F8                <1>         loop .10L                           ; } while(--count)
    40                              <1> 
    41                              <1>         ;---------------------------------
    42                              <1>         ; レジスタの復帰
    43                              <1>         ;---------------------------------
    44 000009F4 61                  <1>         popa
    45                              <1> 
    46                              <1>         ;---------------------------------
    47                              <1>         ; スタックフレームの破棄
    48                              <1>         ;---------------------------------
    49 000009F5 89EC                <1>         mov esp, ebp
    50 000009F7 5D                  <1>         pop ebp
    51                              <1> 
    52 000009F8 C3                  <1>         ret
    53                              <1> 
    54                              <1> init_page:
    55                              <1>         ;---------------------------------
    56                              <1>         ; レジスタの保存
    57                              <1>         ;---------------------------------
    58 000009F9 60                  <1>         pusha
    59                              <1> 
    60                              <1>         ;---------------------------------
    61                              <1>         ; ページ変換テーブルの作成
    62                              <1>         ;---------------------------------
    63 000009FA 6800501000E8BAFFFF- <1>         cdecl page_set_4m, CR3_BASE         ; // ページ変換テーブルの作成：タスク3用
    63 00000A03 FF6683C404          <1>
    64 00000A08 6800002000E8ACFFFF- <1>         cdecl page_set_4m, CR3_TASK_4       ; // ページ変換テーブルの作成：タスク3用
    64 00000A11 FF6683C404          <1>
    65 00000A16 6800202000E89EFFFF- <1>         cdecl page_set_4m, CR3_TASK_5       ; // ページ変換テーブルの作成：タスク3用
    65 00000A1F FF6683C404          <1>
    66 00000A24 6800402000E890FFFF- <1>         cdecl page_set_4m, CR3_TASK_6       ; // ページ変換テーブルの作成：タスク3用
    66 00000A2D FF6683C404          <1>
    67                              <1> 
    68                              <1>         ;---------------------------------
    69                              <1>         ; ページテーブルの設定
    70                              <1>         ;---------------------------------
    71 00000A32 C7051C641000000000- <1>         mov [0x00106000 + 0x107 * 4], dword 0;
    71 00000A3B 00                  <1>
    72                              <1> 
    73                              <1>         ;---------------------------------
    74                              <1>         ; アドレス変換設定
    75                              <1>         ;---------------------------------
    76 00000A3C C7051C142000078010- <1>         mov [0x0020_1000 + 0x107 * 4], dword PARAM_TASK_4 + 7
    76 00000A45 00                  <1>
    77 00000A46 C7051C342000079010- <1>         mov [0x0020_3000 + 0x107 * 4], dword PARAM_TASK_5 + 7
    77 00000A4F 00                  <1>
    78 00000A50 C7051C54200007A010- <1>         mov [0x0020_5000 + 0x107 * 4], dword PARAM_TASK_6 + 7
    78 00000A59 00                  <1>
    79                              <1> 
    80                              <1>         ;---------------------------------
    81                              <1>         ; 描画パラメータの設定
    82                              <1>         ;---------------------------------
    83 00000A5A 6A4068[D00D0000]68- <1>         cdecl memcpy, PARAM_TASK_4, DRAW_PARAM.t4, rose_size
    83 00000A62 00801000E8AD0E0000- <1>
    83 00000A6B 6683C40C            <1>
    84 00000A6F 6A4068[100E0000]68- <1>         cdecl memcpy, PARAM_TASK_5, DRAW_PARAM.t5, rose_size
    84 00000A77 00901000E8980E0000- <1>
    84 00000A80 6683C40C            <1>
    85 00000A84 6A4068[500E0000]68- <1>         cdecl memcpy, PARAM_TASK_6, DRAW_PARAM.t6, rose_size
    85 00000A8C 00A01000E8830E0000- <1>
    85 00000A95 6683C40C            <1>
    86                              <1> 
    87                              <1>         ;---------------------------------
    88                              <1>         ; レジスタの復帰
    89                              <1>         ;---------------------------------
    90 00000A99 61                  <1>         popa
    91                              <1> 
    92 00000A9A C3                  <1>         ret
   190                                  %include "modules/int_timer.s"
     1                              <1> int_timer:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【レジスタの保存】
     4                              <1>         ;-----------------------------------------
     5 00000A9B 60                  <1>         pushad
     6 00000A9C 1E                  <1>         push ds
     7 00000A9D 06                  <1>         push es
     8                              <1> 
     9                              <1>         ;-----------------------------------------
    10                              <1>         ; データ用セグメントの設定
    11                              <1>         ;-----------------------------------------
    12 00000A9E 66B81000            <1>         mov ax, 0x0010
    13 00000AA2 8ED8                <1>         mov ds, ax
    14 00000AA4 8EC0                <1>         mov es, ax
    15                              <1> 
    16                              <1>         ;-----------------------------------------
    17                              <1>         ; TICK
    18                              <1>         ;-----------------------------------------
    19 00000AA6 FF05[1C0B0000]      <1>         inc dword [TIMER_COUNT]
    20                              <1> 
    21                              <1>         ;-----------------------------------------
    22                              <1>         ; 割り込みフラグをクリア(EOI)
    23                              <1>         ;-----------------------------------------
    24                              <1>         outp 0x20, 0x20
    24 00000AAC B020                <2>  mov al, %2
    24 00000AAE E620                <2>  out %1, al
    25                              <1> 
    26                              <1>         ;-----------------------------------------
    27                              <1>         ; タスクの切り替え
    28                              <1>         ;-----------------------------------------
    29 00000AB0 660F00C8            <1>         str ax
    30 00000AB4 6683F830            <1>         cmp ax, SS_TASK_0
    31 00000AB8 7427                <1>         je .11L
    32 00000ABA 6683F838            <1>         cmp ax, SS_TASK_1
    33 00000ABE 742A                <1>         je .12L
    34 00000AC0 6683F840            <1>         cmp ax, SS_TASK_2
    35 00000AC4 742D                <1>         je .13L
    36 00000AC6 6683F848            <1>         cmp ax, SS_TASK_3
    37 00000ACA 7430                <1>         je .14L
    38 00000ACC 6683F850            <1>         cmp ax, SS_TASK_4
    39 00000AD0 7433                <1>         je .15L
    40 00000AD2 6683F858            <1>         cmp ax, SS_TASK_5
    41 00000AD6 7436                <1>         je .16L
    42                              <1> 
    43 00000AD8 EA000000003000      <1>         jmp SS_TASK_0:0
    44 00000ADF EB36                <1>         jmp .10E
    45                              <1> .11L:
    46 00000AE1 EA000000003800      <1>         jmp SS_TASK_1:0
    47 00000AE8 EB2D                <1>         jmp .10E
    48                              <1> .12L:
    49 00000AEA EA000000004000      <1>         jmp SS_TASK_2:0
    50 00000AF1 EB24                <1>         jmp .10E
    51                              <1> .13L:
    52 00000AF3 EA000000004800      <1>         jmp SS_TASK_3:0
    53 00000AFA EB1B                <1>         jmp .10E
    54                              <1> .14L:
    55 00000AFC EA000000005000      <1>         jmp SS_TASK_4:0
    56 00000B03 EB12                <1>         jmp .10E
    57                              <1> .15L:
    58 00000B05 EA000000005800      <1>         jmp SS_TASK_5:0
    59 00000B0C EB09                <1>         jmp .10E
    60                              <1> .16L:
    61 00000B0E EA000000006000      <1>         jmp SS_TASK_6:0
    62 00000B15 EB00                <1>         jmp .10E
    63                              <1> .10E:
    64                              <1> 
    65                              <1>         ;-----------------------------------------
    66                              <1>         ; 【レジスタの復帰】
    67                              <1>         ;-----------------------------------------
    68 00000B17 07                  <1>         pop es
    69 00000B18 1F                  <1>         pop ds
    70 00000B19 61                  <1>         popad
    71                              <1> 
    72 00000B1A CF                  <1>         iret
    73                              <1> 
    74 00000B1B 00                  <1> ALIGN 4, db 0
    75 00000B1C 0000000000000000    <1> TIMER_COUNT:  dq 0
   191                                  %include "modules/int_pf.s"
     1                              <1> int_pf:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 00000B24 55                  <1>         push ebp
     6 00000B25 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;-----------------------------------------
     9                              <1>         ; 【レジスタの保存】
    10                              <1>         ;-----------------------------------------
    11 00000B27 60                  <1>         pusha
    12 00000B28 1E                  <1>         push ds
    13 00000B29 06                  <1>         push es
    14                              <1> 
    15                              <1>         ;-----------------------------------------
    16                              <1>         ; 例外を生成したアドレスの確認
    17                              <1>         ;-----------------------------------------
    18 00000B2A 0F20D0              <1>         mov eax, cr2
    19 00000B2D 2500F0FFFF          <1>         and eax, ~0x0FFF
    20 00000B32 3D00701000          <1>         cmp eax, 0x0010_7000
    21 00000B37 7521                <1>         jne .10F
    22                              <1> 
    23                              <1>         ;-----------------------------------------
    24                              <1>         ; 描画パラメータをコピー
    25                              <1>         ;-----------------------------------------
    26 00000B39 C7051C641000077010- <1>         mov [0x00106000 + 0x107 * 4], dword 0x00107007
    26 00000B42 00                  <1>
    27 00000B43 6A4068[900D0000]68- <1>         cdecl memcpy, 0x0010_7000, DRAW_PARAM, rose_size
    27 00000B4B 00701000E8C40D0000- <1>
    27 00000B54 6683C40C            <1>
    28                              <1> 
    29 00000B58 EB15                <1>         jmp .10E
    30                              <1> .10F:
    31                              <1> 
    32                              <1>         ;-----------------------------------------
    33                              <1>         ; スタックの調整
    34                              <1>         ;-----------------------------------------
    35 00000B5A 83C404              <1>         add esp, 4
    36 00000B5D 83C404              <1>         add esp, 4
    37 00000B60 61                  <1>         popa
    38 00000B61 5D                  <1>         pop ebp
    39                              <1> 
    40                              <1>         ;-----------------------------------------
    41                              <1>         ; タスク終了処理
    42                              <1>         ;-----------------------------------------
    43 00000B62 9C                  <1>         pushf
    44 00000B63 0E                  <1>         push cs
    45 00000B64 68[29150000]        <1>         push int_stop
    46                              <1> 
    47 00000B69 B8[790B0000]        <1>         mov eax, .s0
    48 00000B6E CF                  <1>         iret
    49                              <1> .10E:
    50                              <1> 
    51                              <1>         ;-----------------------------------------
    52                              <1>         ; 【レジスタの復帰】
    53                              <1>         ;-----------------------------------------
    54 00000B6F 07                  <1>         pop es
    55 00000B70 1F                  <1>         pop ds
    56 00000B71 61                  <1>         popa
    57                              <1> 
    58                              <1>         ;-----------------------------------------
    59                              <1>         ; 【スタックフレームの破棄】
    60                              <1>         ;-----------------------------------------
    61 00000B72 89EC                <1>         mov esp, ebp
    62 00000B74 5D                  <1>         pop ebp
    63                              <1> 
    64                              <1>         ;-----------------------------------------
    65                              <1>         ; エラーコードの破棄
    66                              <1>         ;-----------------------------------------
    67 00000B75 83C404              <1>         add esp, 4
    68 00000B78 CF                  <1>         iret
    69                              <1> 
    70 00000B79 203C20504147452046- <1> .s0     db " < PAGE FAULT > ", 0
    70 00000B82 41554C54203E2000    <1>
   192                                  %include "tasks/task_1.s"
     1                              <1> task_1:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 文字列の表示
     4                              <1>         ;-----------------------------------------
     5 00000B8A 68[B80B0000]6A076A- <1>         cdecl draw_str, 63, 0, 0x07, .s0
     5 00000B92 006A3FE81705000066- <1>
     5 00000B9B 83C410              <1>
     6                              <1> 
     7                              <1> .10L:
     8                              <1> 
     9                              <1>         ;-----------------------------------------
    10                              <1>         ; 時刻の表示
    11                              <1>         ;-----------------------------------------
    12 00000B9E A1[FC020000]        <1>         mov eax, [RTC_TIME]
    13 00000BA3 5068000700006A006A- <1>         cdecl draw_time, 72, 0, 0x0700, eax
    13 00000BAC 48E8AA0800006683C4- <1>
    13 00000BB5 10                  <1>
    14                              <1> 
    15 00000BB6 EBE6                <1>         jmp .10L
    16                              <1> 
    17                              <1>         ;-----------------------------------------
    18                              <1>         ; データ
    19                              <1>         ;-----------------------------------------
    20 00000BB8 5461736B2D3100      <1> .s0     db "Task-1", 0
   193                                  %include "tasks/task_2.s"
     1                              <1> task_2:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 文字列の表示
     4                              <1>         ;-----------------------------------------
     5 00000BBF 68[820C0000]6A076A- <1>         cdecl draw_str, 63, 1, 0x07, .s0
     5 00000BC7 016A3FE8E204000066- <1>
     5 00000BD0 83C410              <1>
     6                              <1> 
     7                              <1>         ;-----------------------------------------
     8                              <1>         ; 初期値の設定
     9                              <1>         ;-----------------------------------------
    10 00000BD3 DB05[700C0000]      <1>         fild dword [.c1000]
    11 00000BD9 D9EB                <1>         fldpi
    12 00000BDB DA35[740C0000]      <1>         fidiv dword [.c180]
    13 00000BE1 D9EB                <1>         fldpi
    14 00000BE3 DCC0                <1>         fadd st0, st0
    15 00000BE5 D9EE                <1>         fldz
    16                              <1> 
    17                              <1> .10L:
    18                              <1> 
    19                              <1>         ;-----------------------------------------
    20                              <1>         ; sin(θ)
    21                              <1>         ;-----------------------------------------
    22 00000BE7 D8C2                <1>         fadd st0, st2
    23 00000BE9 D9F8                <1>         fprem
    24 00000BEB D9C0                <1>         fld st0
    25 00000BED D9FE                <1>         fsin
    26 00000BEF D8CC                <1>         fmul st0, st4
    27                              <1> 
    28 00000BF1 DF35[780C0000]      <1>         fbstp [.bcd]
    29                              <1> 
    30                              <1>         ;-----------------------------------------
    31                              <1>         ; 値の表示
    32                              <1>         ;-----------------------------------------
    33 00000BF7 A1[780C0000]        <1>         mov eax, [.bcd]
    34 00000BFC 89C3                <1>         mov ebx, eax
    35                              <1> 
    36 00000BFE 250F0F0000          <1>         and eax, 0x0F0F
    37 00000C03 0D30300000          <1>         or eax, 0x3030
    38                              <1> 
    39 00000C08 C1EB04              <1>         shr ebx, 4
    40 00000C0B 81E30F0F0000        <1>         and ebx, 0x0F0F
    41 00000C11 81CB30300000        <1>         or ebx, 0x3030
    42                              <1> 
    43 00000C17 883D[8A0C0000]      <1>         mov [.s2 + 0], bh
    44 00000C1D 8825[8C0C0000]      <1>         mov [.s3 + 0], ah
    45 00000C23 881D[8D0C0000]      <1>         mov [.s3 + 1], bl
    46 00000C29 A2[8E0C0000]        <1>         mov [.s3 + 2], al
    47                              <1> 
    48 00000C2E B807000000          <1>         mov eax, 7
    49 00000C33 0FA305[810C0000]    <1>         bt [.bcd + 9], eax
    50 00000C3A 7209                <1>         jc .10F
    51                              <1> 
    52 00000C3C C605[890C0000]2B    <1>         mov [.s1 + 0], byte '+'
    53 00000C43 EB07                <1>         jmp .10E
    54                              <1> .10F:
    55                              <1> 
    56 00000C45 C605[890C0000]2D    <1>         mov [.s1 + 0], byte '-'
    57                              <1> .10E:
    58                              <1> 
    59 00000C4C 68[890C0000]6A076A- <1>         cdecl draw_str, 72, 1, 0x07, .s1
    59 00000C54 016A48E85504000066- <1>
    59 00000C5D 83C410              <1>
    60                              <1> 
    61                              <1>         ;-----------------------------------------
    62                              <1>         ; ウェイト
    63                              <1>         ;-----------------------------------------
    64 00000C60 6A0AE8930C00006683- <1>         cdecl wait_tick, 10
    64 00000C69 C404                <1>
    65                              <1> 
    66 00000C6B E977FFFFFF          <1>         jmp .10L
    67                              <1> 
    68                              <1>         ;-----------------------------------------
    69                              <1>         ; データ
    70                              <1>         ;-----------------------------------------
    71                              <1> ALIGN 4, db 0
    72 00000C70 E8030000            <1> .c1000: dd 1000
    73 00000C74 B4000000            <1> .c180:  dd 180
    74                              <1> 
    75 00000C78 00<rept>            <1> .bcd:   times 10 db 0x00
    76                              <1> 
    77 00000C82 5461736B2D3200      <1> .s0     db "Task-2", 0
    78 00000C89 2D                  <1> .s1:    db "-"
    79 00000C8A 302E                <1> .s2:    db "0."
    80 00000C8C 30303000            <1> .s3:    db "000", 0
   194                                  %include "tasks/task_3.s"
     1                              <1> task_3:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 00000C90 89E5                <1>         mov ebp, esp
     6                              <1> 
     7 00000C92 6A00                <1>         push dword 0
     8 00000C94 6A00                <1>         push dword 0
     9 00000C96 6A00                <1>         push dword 0
    10 00000C98 6A00                <1>         push dword 0
    11 00000C9A 6A00                <1>         push dword 0
    12                              <1> 
    13                              <1>         ;-----------------------------------------
    14                              <1>         ; 初期化
    15                              <1>         ;-----------------------------------------
    16 00000C9C BE00701000          <1>         mov esi, 0x0010_7000
    17                              <1> 
    18                              <1>         ;-----------------------------------------
    19                              <1>         ; タイトル表示
    20                              <1>         ;-----------------------------------------
    21 00000CA1 8B06                <1>         mov eax, [esi + rose.x0]
    22 00000CA3 8B5E04              <1>         mov ebx, [esi + rose.y0]
    23                              <1> 
    24 00000CA6 C1E803              <1>         shr eax, 3
    25 00000CA9 C1EB04              <1>         shr ebx, 4
    26 00000CAC 4B                  <1>         dec ebx
    27 00000CAD 8B4E24              <1>         mov ecx, [esi + rose.color_s]
    28 00000CB0 8D5630              <1>         lea edx, [esi + rose.title]
    29                              <1> 
    30 00000CB3 52515350E8F5030000- <1>         cdecl draw_str, eax, ebx, ecx, edx
    30 00000CBC 6683C410            <1>
    31                              <1> 
    32                              <1>         ;-----------------------------------------
    33                              <1>         ; X軸の中点
    34                              <1>         ;-----------------------------------------
    35 00000CC0 8B06                <1>         mov eax, [esi + rose.x0]
    36 00000CC2 8B5E08              <1>         mov ebx, [esi + rose.x1]
    37 00000CC5 29C3                <1>         sub ebx, eax
    38 00000CC7 D1EB                <1>         shr ebx, 1
    39 00000CC9 01C3                <1>         add ebx, eax
    40 00000CCB 895DFC              <1>         mov [ebp - 4], ebx
    41                              <1> 
    42                              <1>         ;-----------------------------------------
    43                              <1>         ; Y軸の中点
    44                              <1>         ;-----------------------------------------
    45 00000CCE 8B4604              <1>         mov eax, [esi + rose.y0]
    46 00000CD1 8B5E0C              <1>         mov ebx, [esi + rose.y1]
    47 00000CD4 29C3                <1>         sub ebx, eax
    48 00000CD6 D1EB                <1>         shr ebx, 1
    49 00000CD8 01C3                <1>         add ebx, eax
    50 00000CDA 895DF8              <1>         mov [ebp - 8], ebx
    51                              <1> 
    52                              <1>         ;-----------------------------------------
    53                              <1>         ; X軸の描画
    54                              <1>         ;-----------------------------------------
    55 00000CDD 8B06                <1>         mov eax, [esi + rose.x0]
    56 00000CDF 8B5DF8              <1>         mov ebx, [ebp - 8]
    57 00000CE2 8B4E08              <1>         mov ecx, [esi + rose.x1]
    58                              <1> 
    59 00000CE5 FF761853515350E863- <1>         cdecl draw_line, eax, ebx, ecx, ebx, dword [esi + rose.color_x]
    59 00000CEE 0500006683C414      <1>
    60                              <1> 
    61                              <1>         ;-----------------------------------------
    62                              <1>         ; Y軸の描画
    63                              <1>         ;-----------------------------------------
    64 00000CF5 8B4604              <1>         mov eax, [esi + rose.y0]
    65 00000CF8 8B5DFC              <1>         mov ebx, [ebp - 4]
    66 00000CFB 8B4E0C              <1>         mov ecx, [esi + rose.y1]
    67                              <1> 
    68 00000CFE FF761C51535053E84A- <1>         cdecl draw_line, ebx, eax, ebx, ecx, dword [esi + rose.color_y]
    68 00000D07 0500006683C414      <1>
    69                              <1> 
    70                              <1>         ;-----------------------------------------
    71                              <1>         ; 枠の描画
    72                              <1>         ;-----------------------------------------
    73 00000D0E 8B06                <1>         mov eax, [esi + rose.x0]
    74 00000D10 8B5E04              <1>         mov ebx, [esi + rose.y0]
    75 00000D13 8B4E08              <1>         mov ecx, [esi + rose.x1]
    76 00000D16 8B560C              <1>         mov edx, [esi + rose.y1]
    77                              <1> 
    78 00000D19 FF762052515350E807- <1>         cdecl draw_rect, eax, ebx, ecx, edx, dword [esi + rose.color_z]
    78 00000D22 0600006683C414      <1>
    79                              <1> 
    80                              <1>         ;-----------------------------------------
    81                              <1>         ; 振幅をX軸の約95%とする
    82                              <1>         ;-----------------------------------------
    83 00000D29 8B4608              <1>         mov eax, [esi + rose.x1]
    84 00000D2C 2B06                <1>         sub eax, [esi + rose.x0]
    85 00000D2E D1E8                <1>         shr eax, 1
    86 00000D30 89C3                <1>         mov ebx, eax
    87 00000D32 C1EB04              <1>         shr ebx, 4
    88 00000D35 29D8                <1>         sub eax, ebx
    89                              <1> 
    90                              <1>         ;-----------------------------------------
    91                              <1>         ; FPUの初期化(バラ曲線の初期化)
    92                              <1>         ;-----------------------------------------
    93 00000D37 FF7614FF761050E84D- <1>         cdecl fpu_rose_init, eax, dword [esi + rose.n], dword [esi + rose.d]
    93 00000D40 0100006683C40C      <1>
    94                              <1> 
    95                              <1>         ;-----------------------------------------
    96                              <1>         ; メインループ
    97                              <1>         ;-----------------------------------------
    98                              <1> .10L:
    99                              <1> 
   100                              <1>         ;-----------------------------------------
   101                              <1>         ; 座標計算
   102                              <1>         ;-----------------------------------------
   103 00000D47 8D5DF4              <1>         lea ebx, [ebp - 12]
   104 00000D4A 8D4DF0              <1>         lea ecx, [ebp - 16]
   105 00000D4D 8B45EC              <1>         mov eax, [ebp - 20]
   106                              <1> 
   107 00000D50 505153E85201000066- <1>         cdecl fpu_rose_update, ebx, ecx, eax
   107 00000D59 83C40C              <1>
   108                              <1> 
   109                              <1>         ;-----------------------------------------
   110                              <1>         ; 角度更新(r = r % 36000)
   111                              <1>         ;-----------------------------------------
   112 00000D5C BA00000000          <1>         mov edx, 0
   113 00000D61 40                  <1>         inc eax
   114 00000D62 BBA08C0000          <1>         mov ebx, 360 * 100
   115 00000D67 F7F3                <1>         div ebx
   116 00000D69 8955EC              <1>         mov [ebp - 20], edx
   117                              <1> 
   118                              <1>         ;-----------------------------------------
   119                              <1>         ; ドット描画
   120                              <1>         ;-----------------------------------------
   121 00000D6C 8B4DF4              <1>         mov ecx, [ebp - 12]
   122 00000D6F 8B55F0              <1>         mov edx, [ebp - 16]
   123                              <1> 
   124 00000D72 034DFC              <1>         add ecx, [ebp - 4]
   125 00000D75 0355F8              <1>         add edx, [ebp - 8]
   126                              <1> 
   127 00000D78 8B5E28              <1>         mov ebx, [esi + rose.color_f]
   128 00000D7B CD82                <1>         int 0x82
   129                              <1> 
   130                              <1>         ;-----------------------------------------
   131                              <1>         ; ウェイト
   132                              <1>         ;-----------------------------------------
   133 00000D7D 6A02E8760B00006683- <1>         cdecl wait_tick, 2
   133 00000D86 C404                <1>
   134                              <1> 
   135                              <1>         ;-----------------------------------------
   136                              <1>         ; ドット描画
   137                              <1>         ;-----------------------------------------
   138 00000D88 8B5E2C              <1>         mov ebx, [esi + rose.color_b]
   139 00000D8B CD82                <1>         int 0x82
   140                              <1> 
   141 00000D8D EBB8                <1>         jmp .10L
   142                              <1> 
   143                              <1>         ;-----------------------------------------
   144                              <1>         ; データ
   145                              <1>         ;-----------------------------------------
   146 00000D8F 00                  <1> ALIGN 4, db 0
   147                              <1> DRAW_PARAM:
   148                              <1> .t3:
   149                              <1>     istruc rose
   150 00000D90 20000000            <1>         at rose.x0, dd 32
   151 00000D94 20000000            <1>         at rose.y0, dd 32
   152 00000D98 D0000000            <1>         at rose.x1, dd 208
   153 00000D9C D0000000            <1>         at rose.y1, dd 208
   154                              <1> 
   155 00000DA0 02000000            <1>         at rose.n, dd 2
   156 00000DA4 01000000            <1>         at rose.d, dd 1
   157                              <1> 
   158 00000DA8 07000000            <1>         at rose.color_x, dd 0x0007
   159 00000DAC 07000000            <1>         at rose.color_y, dd 0x0007
   160 00000DB0 0F000000            <1>         at rose.color_z, dd 0x000F
   161 00000DB4 0F030000            <1>         at rose.color_s, dd 0x030F
   162 00000DB8 0F000000            <1>         at rose.color_f, dd 0x000F
   163 00000DBC 03000000            <1>         at rose.color_b, dd 0x0003
   164                              <1> 
   165 00000DC0 5461736B2D3300      <1>         at rose.title, db "Task-3", 0
   166 00000DC7 00<rept>            <1>     iend
   167                              <1> 
   168                              <1> .t4:
   169                              <1>     istruc rose
   170 00000DD0 F8000000            <1>         at rose.x0, dd 248
   171 00000DD4 20000000            <1>         at rose.y0, dd 32
   172 00000DD8 A8010000            <1>         at rose.x1, dd 424
   173 00000DDC D0000000            <1>         at rose.y1, dd 208
   174                              <1> 
   175 00000DE0 03000000            <1>         at rose.n, dd 3
   176 00000DE4 01000000            <1>         at rose.d, dd 1
   177                              <1> 
   178 00000DE8 07000000            <1>         at rose.color_x, dd 0x0007
   179 00000DEC 07000000            <1>         at rose.color_y, dd 0x0007
   180 00000DF0 0F000000            <1>         at rose.color_z, dd 0x000F
   181 00000DF4 0F040000            <1>         at rose.color_s, dd 0x040F
   182 00000DF8 0F000000            <1>         at rose.color_f, dd 0x000F
   183 00000DFC 04000000            <1>         at rose.color_b, dd 0x0004
   184                              <1> 
   185 00000E00 5461736B2D3400      <1>         at rose.title, db "Task-4", 0
   186 00000E07 00<rept>            <1>     iend
   187                              <1> 
   188                              <1> .t5:
   189                              <1>     istruc rose
   190 00000E10 20000000            <1>         at rose.x0, dd 32
   191 00000E14 10010000            <1>         at rose.y0, dd 272
   192 00000E18 D0000000            <1>         at rose.x1, dd 208
   193 00000E1C C0010000            <1>         at rose.y1, dd 448
   194                              <1> 
   195 00000E20 02000000            <1>         at rose.n, dd 2
   196 00000E24 06000000            <1>         at rose.d, dd 6
   197                              <1> 
   198 00000E28 07000000            <1>         at rose.color_x, dd 0x0007
   199 00000E2C 07000000            <1>         at rose.color_y, dd 0x0007
   200 00000E30 0F000000            <1>         at rose.color_z, dd 0x000F
   201 00000E34 0F050000            <1>         at rose.color_s, dd 0x050F
   202 00000E38 0F000000            <1>         at rose.color_f, dd 0x000F
   203 00000E3C 05000000            <1>         at rose.color_b, dd 0x0005
   204                              <1> 
   205 00000E40 5461736B2D3500      <1>         at rose.title, db "Task-5", 0
   206 00000E47 00<rept>            <1>     iend
   207                              <1> 
   208                              <1> .t6:
   209                              <1>     istruc rose
   210 00000E50 F8000000            <1>         at rose.x0, dd 248
   211 00000E54 10010000            <1>         at rose.y0, dd 272
   212 00000E58 A8010000            <1>         at rose.x1, dd 424
   213 00000E5C C0010000            <1>         at rose.y1, dd 448
   214                              <1> 
   215 00000E60 04000000            <1>         at rose.n, dd 4
   216 00000E64 06000000            <1>         at rose.d, dd 6
   217                              <1> 
   218 00000E68 07000000            <1>         at rose.color_x, dd 0x0007
   219 00000E6C 07000000            <1>         at rose.color_y, dd 0x0007
   220 00000E70 0F000000            <1>         at rose.color_z, dd 0x000F
   221 00000E74 0F060000            <1>         at rose.color_s, dd 0x060F
   222 00000E78 0F000000            <1>         at rose.color_f, dd 0x000F
   223 00000E7C 06000000            <1>         at rose.color_b, dd 0x0006
   224                              <1> 
   225 00000E80 5461736B2D3600      <1>         at rose.title, db "Task-6", 0
   226 00000E87 00<rept>            <1>     iend
   227                              <1> 
   228                              <1> fpu_rose_init:
   229                              <1>         ;-----------------------------------------
   230                              <1>         ; 【スタックフレームの構築】
   231                              <1>         ;-----------------------------------------
   232 00000E90 55                  <1>         push ebp
   233 00000E91 89E5                <1>         mov ebp, esp
   234                              <1> 
   235 00000E93 68B4000000          <1>         push dword 180
   236                              <1> 
   237                              <1>         ;-----------------------------------------
   238                              <1>         ; FPUのスタックを設定
   239                              <1>         ;-----------------------------------------
   240 00000E98 D9EB                <1>         fldpi
   241 00000E9A DA75FC              <1>         fidiv dword [ebp - 4]
   242 00000E9D DB450C              <1>         fild dword [ebp + 12]
   243 00000EA0 DA7510              <1>         fidiv dword [ebp + 16]
   244 00000EA3 DB4508              <1>         fild dword [ebp + 8]
   245                              <1> 
   246                              <1>         ;-----------------------------------------
   247                              <1>         ; 【スタックフレームの破棄】
   248                              <1>         ;-----------------------------------------
   249 00000EA6 89EC                <1>         mov esp, ebp
   250 00000EA8 5D                  <1>         pop ebp
   251                              <1> 
   252 00000EA9 C3                  <1>         ret
   253                              <1> 
   254                              <1> fpu_rose_update:
   255                              <1>         ;-----------------------------------------
   256                              <1>         ; 【スタックフレームの構築】
   257                              <1>         ;-----------------------------------------
   258 00000EAA 55                  <1>         push ebp
   259 00000EAB 89E5                <1>         mov ebp, esp
   260                              <1> 
   261                              <1>         ;-----------------------------------------
   262                              <1>         ; 【レジスタの保存】
   263                              <1>         ;-----------------------------------------
   264 00000EAD 50                  <1>         push eax
   265 00000EAE 53                  <1>         push ebx
   266                              <1> 
   267                              <1>         ;-----------------------------------------
   268                              <1>         ; X/Y座標の保存先を設定
   269                              <1>         ;-----------------------------------------
   270 00000EAF 8B4508              <1>         mov eax, [ebp + 8]
   271 00000EB2 8B5D0C              <1>         mov ebx, [ebp + 12]
   272                              <1> 
   273                              <1>         ;-----------------------------------------
   274                              <1>         ; ラディアンへの変換
   275                              <1>         ;-----------------------------------------
   276 00000EB5 DB4510              <1>         fild dword [ebp + 16]
   277 00000EB8 D8CB                <1>         fmul st0, st3
   278 00000EBA D9C0                <1>         fld st0
   279                              <1> 
   280 00000EBC D9FB                <1>         fsincos
   281 00000EBE D9CA                <1>         fxch st2
   282 00000EC0 D8CC                <1>         fmul st0, st4
   283 00000EC2 D9FE                <1>         fsin
   284 00000EC4 D8CB                <1>         fmul st0, st3
   285                              <1> 
   286                              <1>         ;-----------------------------------------
   287                              <1>         ; x = A * sin(kθ) * cos(θ)
   288                              <1>         ;-----------------------------------------
   289 00000EC6 D9CA                <1>         fxch st2
   290 00000EC8 D8CA                <1>         fmul st0, st2
   291 00000ECA DB18                <1>         fistp dword [eax]
   292                              <1> 
   293                              <1>         ;-----------------------------------------
   294                              <1>         ; y = -A * sin(kθ) * sin(θ)
   295                              <1>         ;-----------------------------------------
   296 00000ECC DEC9                <1>         fmulp st1, st0
   297 00000ECE D9E0                <1>         fchs
   298 00000ED0 DB1B                <1>         fistp dword [ebx]
   299                              <1> 
   300                              <1>         ;-----------------------------------------
   301                              <1>         ; 【レジスタの復帰】
   302                              <1>         ;-----------------------------------------
   303 00000ED2 5B                  <1>         pop ebx
   304 00000ED3 58                  <1>         pop eax
   305                              <1> 
   306                              <1>         ;-----------------------------------------
   307                              <1>         ; 【スタックフレームの破棄】
   308                              <1>         ;-----------------------------------------
   309 00000ED4 89EC                <1>         mov esp, ebp
   310 00000ED6 5D                  <1>         pop ebp
   311                              <1> 
   312 00000ED7 C3                  <1>         ret
   195                                  
   196                                  ;***********************************************************
   197                                  ;  モジュール
   198                                  ;***********************************************************
   199                                  %include "../modules/protect/vga.s"
     1                              <1> vga_set_read_plane:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 00000ED8 55                  <1>         push ebp
     6 00000ED9 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;-----------------------------------------
     9                              <1>         ; 【レジスタの保存】
    10                              <1>         ;-----------------------------------------
    11 00000EDB 50                  <1>         push eax
    12 00000EDC 52                  <1>         push edx
    13                              <1> 
    14                              <1>         ;-----------------------------------------
    15                              <1>         ; 読み込みプレーンの選択
    16                              <1>         ;-----------------------------------------
    17 00000EDD 8A6508              <1>         mov ah, [ebp + 8]
    18 00000EE0 80E403              <1>         and ah, 0x03
    19 00000EE3 B004                <1>         mov al, 0x04
    20 00000EE5 66BACE03            <1>         mov dx, 0x03CE
    21 00000EE9 66EF                <1>         out dx, ax
    22                              <1> 
    23                              <1>         ;-----------------------------------------
    24                              <1>         ; 【レジスタの復帰】
    25                              <1>         ;-----------------------------------------
    26 00000EEB 5A                  <1>         pop edx
    27 00000EEC 58                  <1>         pop eax
    28                              <1> 
    29                              <1>         ;-----------------------------------------
    30                              <1>         ; 【スタックフレームの破棄】
    31                              <1>         ;-----------------------------------------
    32 00000EED 89EC                <1>         mov esp, ebp
    33 00000EEF 5D                  <1>         pop ebp
    34                              <1> 
    35 00000EF0 C3                  <1>         ret
    36                              <1> 
    37                              <1> vga_set_write_plane:
    38                              <1>         ;-----------------------------------------
    39                              <1>         ; 【スタックフレームの構築】
    40                              <1>         ;-----------------------------------------
    41 00000EF1 55                  <1>         push ebp
    42 00000EF2 89E5                <1>         mov ebp, esp
    43                              <1> 
    44                              <1>         ;-----------------------------------------
    45                              <1>         ; 【レジスタの保存】
    46                              <1>         ;-----------------------------------------
    47 00000EF4 50                  <1>         push eax
    48 00000EF5 52                  <1>         push edx
    49                              <1> 
    50                              <1>         ;-----------------------------------------
    51                              <1>         ; 書き込みプレーンの選択
    52                              <1>         ;-----------------------------------------
    53 00000EF6 8A6508              <1>         mov ah, [ebp + 8]
    54 00000EF9 80E40F              <1>         and ah, 0x0F
    55 00000EFC B002                <1>         mov al, 0x02
    56 00000EFE 66BAC403            <1>         mov dx, 0x03C4
    57 00000F02 66EF                <1>         out dx, ax
    58                              <1> 
    59                              <1>         ;-----------------------------------------
    60                              <1>         ; 【レジスタの復帰】
    61                              <1>         ;-----------------------------------------
    62 00000F04 5A                  <1>         pop edx
    63 00000F05 58                  <1>         pop eax
    64                              <1> 
    65                              <1>         ;-----------------------------------------
    66                              <1>         ; 【スタックフレームの破棄】
    67                              <1>         ;-----------------------------------------
    68 00000F06 89EC                <1>         mov esp, ebp
    69 00000F08 5D                  <1>         pop ebp
    70                              <1> 
    71 00000F09 C3                  <1>         ret
    72                              <1> 
    73                              <1> vram_font_copy:
    74                              <1>         ;-----------------------------------------
    75                              <1>         ; 【スタックフレームの構築】
    76                              <1>         ;-----------------------------------------
    77 00000F0A 55                  <1>         push ebp
    78 00000F0B 89E5                <1>         mov ebp, esp
    79                              <1> 
    80                              <1>         ;-----------------------------------------
    81                              <1>         ; 【レジスタの保存】
    82                              <1>         ;-----------------------------------------
    83 00000F0D 50                  <1>         push eax
    84 00000F0E 53                  <1>         push ebx
    85 00000F0F 51                  <1>         push ecx
    86 00000F10 52                  <1>         push edx
    87 00000F11 56                  <1>         push esi
    88 00000F12 57                  <1>         push edi
    89                              <1> 
    90                              <1>         ;-----------------------------------------
    91                              <1>         ; マスクデータの作成
    92                              <1>         ;-----------------------------------------
    93 00000F13 8B7508              <1>         mov esi, [ebp + 8]
    94 00000F16 8B7D0C              <1>         mov edi, [ebp + 12]
    95 00000F19 0FB64510            <1>         movzx eax, byte [ebp + 16]
    96 00000F1D 0FB75D14            <1>         movzx ebx, word [ebp + 20]
    97                              <1> 
    98 00000F21 84C7                <1>         test bh, al
    99 00000F23 0F94C6              <1>         setz dh
   100 00000F26 FECE                <1>         dec dh
   101                              <1> 
   102 00000F28 84C3                <1>         test bl, al
   103 00000F2A 0F94C2              <1>         setz dl
   104 00000F2D FECA                <1>         dec dl
   105                              <1> 
   106                              <1>         ;-----------------------------------------
   107                              <1>         ; 16ドットフォントのコピー
   108                              <1>         ;-----------------------------------------
   109 00000F2F FC                  <1>         cld
   110                              <1> 
   111 00000F30 B910000000          <1>         mov ecx, 16
   112                              <1> .10L:
   113                              <1> 
   114                              <1>         ;-----------------------------------------
   115                              <1>         ; フォントマスクの作成
   116                              <1>         ;-----------------------------------------
   117 00000F35 AC                  <1>         lodsb
   118 00000F36 88C4                <1>         mov ah, al
   119 00000F38 F6D4                <1>         not ah
   120                              <1> 
   121                              <1>         ;-----------------------------------------
   122                              <1>         ; 前景色
   123                              <1>         ;-----------------------------------------
   124 00000F3A 20D0                <1>         and al, dl
   125                              <1> 
   126                              <1>         ;-----------------------------------------
   127                              <1>         ; 背景色
   128                              <1>         ;-----------------------------------------
   129 00000F3C F7C310000000        <1>         test ebx, 0x0010
   130 00000F42 7404                <1>         jz .11F
   131 00000F44 2227                <1>         and ah, [edi]
   132 00000F46 EB02                <1>         jmp .11E
   133                              <1> .11F:
   134 00000F48 20F4                <1>         and ah, dh
   135                              <1> .11E:
   136                              <1> 
   137                              <1>         ;-----------------------------------------
   138                              <1>         ; 前景色と背景色をコピー
   139                              <1>         ;-----------------------------------------
   140 00000F4A 08E0                <1>         or al, ah
   141                              <1> 
   142                              <1>         ;-----------------------------------------
   143                              <1>         ; 新しい値を出力
   144                              <1>         ;-----------------------------------------
   145 00000F4C 8807                <1>         mov [edi], al
   146                              <1> 
   147 00000F4E 83C750              <1>         add edi, 80
   148 00000F51 E2E2                <1>         loop .10L
   149                              <1> .10E:
   150                              <1> 
   151                              <1>         ;-----------------------------------------
   152                              <1>         ; 【レジスタの復帰】
   153                              <1>         ;-----------------------------------------
   154 00000F53 5F                  <1>         pop edi
   155 00000F54 5E                  <1>         pop esi
   156 00000F55 5A                  <1>         pop edx
   157 00000F56 59                  <1>         pop ecx
   158 00000F57 5B                  <1>         pop ebx
   159 00000F58 58                  <1>         pop eax
   160                              <1> 
   161                              <1>         ;-----------------------------------------
   162                              <1>         ; 【スタックフレームの破棄】
   163                              <1>         ;-----------------------------------------
   164 00000F59 89EC                <1>         mov esp, ebp
   165 00000F5B 5D                  <1>         pop ebp
   166                              <1> 
   167 00000F5C C3                  <1>         ret
   168                              <1> 
   169                              <1> vram_bit_copy:
   170                              <1>         ;-----------------------------------------
   171                              <1>         ; 【スタックフレームの構築】
   172                              <1>         ;-----------------------------------------
   173 00000F5D 55                  <1>         push ebp
   174 00000F5E 89E5                <1>         mov ebp, esp
   175                              <1> 
   176                              <1>         ;-----------------------------------------
   177                              <1>         ; 【レジスタの保存】
   178                              <1>         ;-----------------------------------------
   179 00000F60 50                  <1>         push eax
   180 00000F61 53                  <1>         push ebx
   181 00000F62 57                  <1>         push edi
   182                              <1> 
   183                              <1>         ;-----------------------------------------
   184                              <1>         ; ビットのコピー
   185                              <1>         ;-----------------------------------------
   186 00000F63 8B7D0C              <1>         mov edi, [ebp + 12]
   187 00000F66 0FB64510            <1>         movzx eax, byte [ebp + 16]
   188 00000F6A 0FB75D14            <1>         movzx ebx, word [ebp + 20]
   189                              <1> 
   190 00000F6E 84C3                <1>         test bl, al
   191 00000F70 0F94C3              <1>         setz bl
   192 00000F73 FECB                <1>         dec bl
   193                              <1> 
   194                              <1>         ;-----------------------------------------
   195                              <1>         ; 反転処理
   196                              <1>         ;-----------------------------------------
   197 00000F75 8A4508              <1>         mov al, [ebp + 8]
   198 00000F78 88C4                <1>         mov ah, al
   199 00000F7A F6D4                <1>         not ah
   200                              <1> 
   201                              <1>         ;-----------------------------------------
   202                              <1>         ; 描画処理
   203                              <1>         ;-----------------------------------------
   204 00000F7C 2227                <1>         and ah, [edi]
   205 00000F7E 20D8                <1>         and al, bl
   206 00000F80 08E0                <1>         or al, ah
   207 00000F82 8807                <1>         mov [edi], al
   208                              <1> 
   209                              <1>         ;-----------------------------------------
   210                              <1>         ; 【レジスタの復帰】
   211                              <1>         ;-----------------------------------------
   212 00000F84 5F                  <1>         pop edi
   213 00000F85 5B                  <1>         pop ebx
   214 00000F86 58                  <1>         pop eax
   215                              <1> 
   216                              <1>         ;-----------------------------------------
   217                              <1>         ; 【スタックフレームの破棄】
   218                              <1>         ;-----------------------------------------
   219 00000F87 89EC                <1>         mov esp, ebp
   220 00000F89 5D                  <1>         pop ebp
   221                              <1> 
   222 00000F8A C3                  <1>         ret
   200                                  %include "../modules/protect/draw_char.s"
     1                              <1> draw_char:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 00000F8B 55                  <1>         push ebp
     6 00000F8C 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;-----------------------------------------
     9                              <1>         ; 【レジスタの保存】
    10                              <1>         ;-----------------------------------------
    11 00000F8E 50                  <1>         push eax
    12 00000F8F 53                  <1>         push ebx
    13 00000F90 51                  <1>         push ecx
    14 00000F91 52                  <1>         push edx
    15 00000F92 56                  <1>         push esi
    16 00000F93 57                  <1>         push edi
    17                              <1> 
    18                              <1>         ;-----------------------------------------
    19                              <1>         ; テストアンドセット
    20                              <1>         ;-----------------------------------------
    21                              <1> %ifdef	USE_TEST_AND_SET
    22 00000F94 68[68100000]E8AD08- <1>         cdecl test_and_set, IN_USE
    22 00000F9C 00006683C404        <1>
    23                              <1> %endif
    24                              <1> 
    25                              <1>         ;-----------------------------------------
    26                              <1>         ; コピー元フォントアドレスを設定
    27                              <1>         ;-----------------------------------------
    28 00000FA2 0FB67514            <1>         movzx esi, byte [ebp + 20]
    29 00000FA6 C1E604              <1>         shl esi, 4
    30 00000FA9 0335[F8020000]      <1>         add esi, [FONT_ADR]
    31                              <1> 
    32                              <1>         ;-----------------------------------------
    33                              <1>         ; コピー先アドレスを取得
    34                              <1>         ; Adr = 0xA0000 + (640 / 8 * 16) * y + x
    35                              <1>         ;-----------------------------------------
    36 00000FAF 8B7D0C              <1>         mov edi, [ebp + 12]
    37 00000FB2 C1E708              <1>         shl edi, 8
    38 00000FB5 8DBCBF00000A00      <1>         lea edi, [edi * 4 + edi + 0xA0000]
    39 00000FBC 037D08              <1>         add edi, [ebp + 8]
    40                              <1> 
    41                              <1>         ;-----------------------------------------
    42                              <1>         ; 1文字分のフォントを出力
    43                              <1>         ;-----------------------------------------
    44 00000FBF 0FB75D10            <1>         movzx ebx, word[ebp + 16]
    45                              <1> 
    46 00000FC3 6A03E80EFFFFFF6683- <1>         cdecl vga_set_read_plane, 0x03
    46 00000FCC C404                <1>
    47 00000FCE 6A08E81CFFFFFF6683- <1>         cdecl vga_set_write_plane, 0x08
    47 00000FD7 C404                <1>
    48 00000FD9 536A085756E827FFFF- <1>         cdecl vram_font_copy, esi, edi, 0x08, ebx
    48 00000FE2 FF6683C410          <1>
    49                              <1> 
    50 00000FE7 6A02E8EAFEFFFF6683- <1>         cdecl vga_set_read_plane, 0x02
    50 00000FF0 C404                <1>
    51 00000FF2 6A04E8F8FEFFFF6683- <1>         cdecl vga_set_write_plane, 0x04
    51 00000FFB C404                <1>
    52 00000FFD 536A045756E803FFFF- <1>         cdecl vram_font_copy, esi, edi, 0x04, ebx
    52 00001006 FF6683C410          <1>
    53                              <1> 
    54 0000100B 6A01E8C6FEFFFF6683- <1>         cdecl vga_set_read_plane, 0x01
    54 00001014 C404                <1>
    55 00001016 6A02E8D4FEFFFF6683- <1>         cdecl vga_set_write_plane, 0x02
    55 0000101F C404                <1>
    56 00001021 536A025756E8DFFEFF- <1>         cdecl vram_font_copy, esi, edi, 0x02, ebx
    56 0000102A FF6683C410          <1>
    57                              <1> 
    58 0000102F 6A00E8A2FEFFFF6683- <1>         cdecl vga_set_read_plane, 0x00
    58 00001038 C404                <1>
    59 0000103A 6A01E8B0FEFFFF6683- <1>         cdecl vga_set_write_plane, 0x01
    59 00001043 C404                <1>
    60 00001045 536A015756E8BBFEFF- <1>         cdecl vram_font_copy, esi, edi, 0x01, ebx
    60 0000104E FF6683C410          <1>
    61                              <1> 
    62                              <1>         ;-----------------------------------------
    63                              <1>         ; 変数のクリア
    64                              <1>         ;-----------------------------------------
    65                              <1> %ifdef	USE_TEST_AND_SET
    66 00001053 C705[68100000]0000- <1>         mov [IN_USE], dword 0
    66 0000105B 0000                <1>
    67                              <1> %endif
    68                              <1> 
    69                              <1>         ;-----------------------------------------
    70                              <1>         ; 【レジスタの復帰】
    71                              <1>         ;-----------------------------------------
    72 0000105D 5F                  <1>         pop edi
    73 0000105E 5E                  <1>         pop esi
    74 0000105F 5A                  <1>         pop edx
    75 00001060 59                  <1>         pop ecx
    76 00001061 5B                  <1>         pop ebx
    77 00001062 58                  <1>         pop eax
    78                              <1> 
    79                              <1>         ;-----------------------------------------
    80                              <1>         ; 【スタックフレームの破棄】
    81                              <1>         ;-----------------------------------------
    82 00001063 89EC                <1>         mov esp, ebp
    83 00001065 5D                  <1>         pop ebp
    84                              <1> 
    85 00001066 C3                  <1>         ret
    86                              <1> 
    87 00001067 00                  <1> ALIGN 4, db 0
    88 00001068 00000000            <1> IN_USE:	dd 0
   201                                  %include "../modules/protect/draw_font.s"
     1                              <1> draw_font:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 0000106C 55                  <1>         push ebp
     6 0000106D 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;-----------------------------------------
     9                              <1>         ; 【レジスタの保存】
    10                              <1>         ;-----------------------------------------
    11 0000106F 50                  <1>         push eax
    12 00001070 53                  <1>         push ebx
    13 00001071 51                  <1>         push ecx
    14 00001072 52                  <1>         push edx
    15 00001073 56                  <1>         push esi
    16 00001074 57                  <1>         push edi
    17                              <1> 
    18                              <1>         ;-----------------------------------------
    19                              <1>         ; 基準となる位置をレジスタに保存
    20                              <1>         ;-----------------------------------------
    21 00001075 8B7508              <1>         mov esi, [ebp + 8]
    22 00001078 8B7D0C              <1>         mov edi, [ebp + 12]
    23                              <1> 
    24                              <1>         ;-----------------------------------------
    25                              <1>         ; フォントを一覧表示する
    26                              <1>         ;-----------------------------------------
    27 0000107B B900000000          <1>         mov ecx, 0
    28                              <1> .10L:
    29 00001080 81F900010000        <1>         cmp ecx, 256
    30 00001086 731F                <1>         jae .10E
    31                              <1> 
    32 00001088 89C8                <1>         mov eax, ecx
    33 0000108A 83E00F              <1>         and eax, 0x0F
    34 0000108D 01F0                <1>         add eax, esi
    35                              <1> 
    36 0000108F 89CB                <1>         mov ebx, ecx
    37 00001091 C1EB04              <1>         shr ebx, 4
    38 00001094 01FB                <1>         add ebx, edi
    39                              <1> 
    40 00001096 516A075350E8EBFEFF- <1>         cdecl draw_char, eax, ebx, 0x07, ecx
    40 0000109F FF6683C410          <1>
    41                              <1> 
    42 000010A4 41                  <1>         inc ecx
    43 000010A5 EBD9                <1>         jmp .10L
    44                              <1> .10E:
    45                              <1> 
    46                              <1>         ;-----------------------------------------
    47                              <1>         ; 【レジスタの復帰】
    48                              <1>         ;-----------------------------------------
    49 000010A7 5F                  <1>         pop edi
    50 000010A8 5E                  <1>         pop esi
    51 000010A9 5A                  <1>         pop edx
    52 000010AA 59                  <1>         pop ecx
    53 000010AB 5B                  <1>         pop ebx
    54 000010AC 58                  <1>         pop eax
    55                              <1> 
    56                              <1>         ;-----------------------------------------
    57                              <1>         ; 【スタックフレームの破棄】
    58                              <1>         ;-----------------------------------------
    59 000010AD 89EC                <1>         mov esp, ebp
    60 000010AF 5D                  <1>         pop ebp
    61                              <1> 
    62 000010B0 C3                  <1>         ret
   202                                  %include "../modules/protect/draw_str.s"
     1                              <1> draw_str:
     2                              <1>     ;---------------------------
     3                              <1>     ; スタックフレーム構築
     4                              <1>     ;---------------------------
     5 000010B1 55                  <1>     push ebp
     6 000010B2 89E5                <1>     mov ebp, esp
     7                              <1> 
     8                              <1>     ;---------------------------
     9                              <1>     ; レジスタの保存
    10                              <1>     ;---------------------------
    11 000010B4 50                  <1>     push eax
    12 000010B5 53                  <1>     push ebx
    13 000010B6 51                  <1>     push ecx
    14 000010B7 52                  <1>     push edx
    15 000010B8 56                  <1>     push esi
    16                              <1> 
    17                              <1>     ;---------------------------
    18                              <1>     ; 文字列を描画する
    19                              <1>     ;---------------------------
    20 000010B9 8B4D08              <1>     mov ecx, [ebp + 8]              ; ECX = 列;
    21 000010BC 8B550C              <1>     mov edx, [ebp + 12]             ; EDX = 行;
    22 000010BF 0FB75D10            <1>     movzx ebx, word [ebp + 16]      ; EBX = 表示色;
    23 000010C3 8B7514              <1>     mov esi, [ebp + 20]             ; ESI = 文字列へのアドレス;
    24                              <1> 
    25 000010C6 FC                  <1>     cld                             ; DF = 0; // アドレス加算
    26                              <1> .10L:                               ; do
    27                              <1>                                     ; {
    28 000010C7 AC                  <1>     lodsb                           ;   AL = *ESI++; // 文字を取得
    29 000010C8 3C00                <1>     cmp al, 0                       ;   if (0 == AL)
    30 000010CA 741A                <1>     je .10E                         ;       break;
    31                              <1> 
    32                              <1> %ifdef USE_SYSTEM_CALL
    33 000010CC CD81                <1>     int 0x81                            ; sys_call(1, X, Y, 色, 文字)
    34                              <1> %else
    35                              <1>     cdecl draw_char, ecx, edx, ebx, eax ; draw_char();
    36                              <1> %endif
    37                              <1> 
    38 000010CE 41                  <1>     inc ecx                         ;   ECX = 0; // 列を加算
    39 000010CF 83F950              <1>     cmp ecx, 80                     ;   if (80 <= ECX) // 80文字以上?
    40 000010D2 7C10                <1>     jl .12E                         ;   {
    41 000010D4 B900000000          <1>     mov ecx, 0                      ;       ECX = 0; // 列を初期化
    42 000010D9 42                  <1>     inc edx                         ;       EDX++; // 行を加算
    43 000010DA 83FA1E              <1>     cmp edx, 30                     ;       if (30 <= EDX) // 30行以上?
    44 000010DD 7C05                <1>     jl .12E                         ;       {
    45 000010DF BA00000000          <1>     mov edx, 0                      ;           EDX = 0; // 行を初期化
    46                              <1>                                     ;       }
    47                              <1> .12E:                               ;   }
    48 000010E4 EBE1                <1>     jmp .10L
    49                              <1> .10E:                               ; } while (1);
    50                              <1> 
    51                              <1>     ;-----------------------------------------
    52                              <1>     ; 【レジスタの復帰】
    53                              <1>     ;-----------------------------------------
    54 000010E6 5E                  <1>     pop esi
    55 000010E7 5A                  <1>     pop edx
    56 000010E8 59                  <1>     pop ecx
    57 000010E9 5B                  <1>     pop ebx
    58 000010EA 58                  <1>     pop eax
    59                              <1> 
    60                              <1>     ;-----------------------------------------
    61                              <1>     ; 【スタックフレームの破棄】
    62                              <1>     ;-----------------------------------------
    63 000010EB 89EC                <1>     mov esp, ebp
    64 000010ED 5D                  <1>     pop ebp
    65                              <1> 
    66 000010EE C3                  <1>     ret
   203                                  %include "../modules/protect/draw_color_bar.s"
     1                              <1> draw_color_bar:
     2                              <1>     ;---------------------------
     3                              <1>     ; スタックフレーム構築
     4                              <1>     ;---------------------------
     5 000010EF 55                  <1>     push ebp
     6 000010F0 89E5                <1>     mov ebp, esp
     7                              <1> 
     8                              <1>     ;---------------------------
     9                              <1>     ; レジスタの保存
    10                              <1>     ;---------------------------
    11 000010F2 50                  <1>     push eax
    12 000010F3 53                  <1>     push ebx
    13 000010F4 51                  <1>     push ecx
    14 000010F5 52                  <1>     push edx
    15 000010F6 56                  <1>     push esi
    16                              <1> 
    17                              <1>     ;-----------------------------------------
    18                              <1>     ; 基準となる位置をレジスタに保存
    19                              <1>     ;-----------------------------------------
    20 000010F7 8B7508              <1>     mov esi, [ebp + 8]
    21 000010FA 8B7D0C              <1>     mov edi, [ebp + 12]
    22                              <1> 
    23                              <1>     ;---------------------------
    24                              <1>     ; カラーバーを表示
    25                              <1>     ;---------------------------
    26 000010FD B900000000          <1>     mov ecx, 0                      ; for (ECX = 0;
    27                              <1> .10L:
    28 00001102 83F910              <1>     cmp ecx, 16                     ;      ECX < 16;
    29 00001105 732E                <1>     jae .10E                        ;
    30                              <1>                                     ;      ECX++)
    31                              <1>                                     ; {
    32 00001107 89C8                <1>     mov eax, ecx                    ;   EAX = ECX;
    33 00001109 83E001              <1>     and eax, 0x01                   ;   EAX &= 0x01;
    34 0000110C C1E003              <1>     shl eax, 3                      ;   EAX *= 8; // 8文字分乗算
    35 0000110F 01F0                <1>     add eax, esi                    ;   EAX += X;
    36                              <1> 
    37 00001111 89CB                <1>     mov ebx, ecx                    ;   EBX = ECX;
    38 00001113 D1EB                <1>     shr ebx, 1                      ;   EBX /= 2
    39 00001115 01FB                <1>     add ebx, edi                    ;   EBX += Y;
    40                              <1> 
    41 00001117 89CA                <1>     mov edx, ecx                    ;   EDX = ECX;
    42 00001119 D1E2                <1>     shl edx, 1                      ;   EDX /= 2;
    43 0000111B 8B92[48110000]      <1>     mov edx, [.t0 + edx]            ;   EDX += Y;
    44                              <1> 
    45 00001121 68[3F110000]525350- <1>     cdecl draw_str, eax, ebx, edx, .s0 ; draw_str();
    45 00001129 E883FFFFFF6683C410  <1>
    46                              <1> 
    47 00001132 41                  <1>     inc ecx                         ; // for (...ECX++)
    48 00001133 EBCD                <1>     jmp .10L
    49                              <1> .10E:                               ; }
    50                              <1> 
    51                              <1>     ;-----------------------------------------
    52                              <1>     ; 【レジスタの復帰】
    53                              <1>     ;-----------------------------------------
    54 00001135 5F                  <1>     pop edi
    55 00001136 5E                  <1>     pop esi
    56 00001137 5A                  <1>     pop edx
    57 00001138 59                  <1>     pop ecx
    58 00001139 5B                  <1>     pop ebx
    59 0000113A 58                  <1>     pop eax
    60                              <1> 
    61                              <1>     ;-----------------------------------------
    62                              <1>     ; 【スタックフレームの破棄】
    63                              <1>     ;-----------------------------------------
    64 0000113B 89EC                <1>     mov esp, ebp
    65 0000113D 5D                  <1>     pop ebp
    66                              <1> 
    67 0000113E C3                  <1>     ret
    68                              <1> 
    69 0000113F 202020202020202000  <1> .s0:    db '        ', 0
    70 00001148 00000008            <1> .t0:    dw 0x0000, 0x0800
    71 0000114C 00010009            <1>         dw 0x0100, 0x0900
    72 00001150 0002000A            <1>         dw 0x0200, 0x0A00
    73 00001154 0003000B            <1>         dw 0x0300, 0x0B00
    74 00001158 0004000C            <1>         dw 0x0400, 0x0C00
    75 0000115C 0005000D            <1>         dw 0x0500, 0x0D00
    76 00001160 0006000E            <1>         dw 0x0600, 0x0E00
    77 00001164 0007000F            <1>         dw 0x0700, 0x0F00
   204                                  %include "../modules/protect/draw_pixel.s"
     1                              <1> draw_pixel:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 00001168 55                  <1>         push ebp
     6 00001169 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;-----------------------------------------
     9                              <1>         ; 【レジスタの保存】
    10                              <1>         ;-----------------------------------------
    11 0000116B 50                  <1>         push eax
    12 0000116C 53                  <1>         push ebx
    13 0000116D 51                  <1>         push ecx
    14 0000116E 57                  <1>         push edi
    15                              <1> 
    16                              <1>         ;-----------------------------------------
    17                              <1>         ; Y座標を80倍する(640/8)
    18                              <1>         ;-----------------------------------------
    19 0000116F 8B7D0C              <1>         mov edi, [ebp + 12]
    20 00001172 C1E704              <1>         shl edi, 4
    21 00001175 8DBCBF00000A00      <1>         lea edi, [edi * 4 + edi + 0xA_0000]
    22                              <1> 
    23                              <1>         ;-----------------------------------------
    24                              <1>         ; X座標を1/8して加算
    25                              <1>         ;-----------------------------------------
    26 0000117C 8B5D08              <1>         mov ebx, [ebp + 8]
    27 0000117F 89D9                <1>         mov ecx, ebx
    28 00001181 C1EB03              <1>         shr ebx, 3
    29 00001184 01DF                <1>         add edi, ebx
    30                              <1> 
    31                              <1>         ;-----------------------------------------
    32                              <1>         ; X座標を8で割った余りからビット位置を計算
    33                              <1>         ; (0=0x80, 1=0x40, ..., 7=0x01)
    34                              <1>         ;-----------------------------------------
    35 00001186 83E107              <1>         and ecx, 0x07
    36 00001189 BB80000000          <1>         mov ebx, 0x80
    37 0000118E D3EB                <1>         shr ebx, cl
    38                              <1> 
    39                              <1>         ;-----------------------------------------
    40                              <1>         ; 色指定
    41                              <1>         ;-----------------------------------------
    42 00001190 8B4D10              <1>         mov ecx, [ebp + 16]
    43                              <1> 
    44                              <1>         ;-----------------------------------------
    45                              <1>         ; プレーンごとに出力
    46                              <1>         ;-----------------------------------------
    47 00001193 6A03E83EFDFFFF6683- <1>         cdecl vga_set_read_plane, 0x03
    47 0000119C C404                <1>
    48 0000119E 6A08E84CFDFFFF6683- <1>         cdecl vga_set_write_plane, 0x08
    48 000011A7 C404                <1>
    49 000011A9 516A085753E8AAFDFF- <1>         cdecl vram_bit_copy, ebx, edi, 0x08, ecx
    49 000011B2 FF6683C410          <1>
    50                              <1> 
    51 000011B7 6A02E81AFDFFFF6683- <1>         cdecl vga_set_read_plane, 0x02
    51 000011C0 C404                <1>
    52 000011C2 6A04E828FDFFFF6683- <1>         cdecl vga_set_write_plane, 0x04
    52 000011CB C404                <1>
    53 000011CD 516A045753E886FDFF- <1>         cdecl vram_bit_copy, ebx, edi, 0x04, ecx
    53 000011D6 FF6683C410          <1>
    54                              <1> 
    55 000011DB 6A01E8F6FCFFFF6683- <1>         cdecl vga_set_read_plane, 0x01
    55 000011E4 C404                <1>
    56 000011E6 6A02E804FDFFFF6683- <1>         cdecl vga_set_write_plane, 0x02
    56 000011EF C404                <1>
    57 000011F1 516A025753E862FDFF- <1>         cdecl vram_bit_copy, ebx, edi, 0x02, ecx
    57 000011FA FF6683C410          <1>
    58                              <1> 
    59 000011FF 6A00E8D2FCFFFF6683- <1>         cdecl vga_set_read_plane, 0x00
    59 00001208 C404                <1>
    60 0000120A 6A01E8E0FCFFFF6683- <1>         cdecl vga_set_write_plane, 0x01
    60 00001213 C404                <1>
    61 00001215 516A015753E83EFDFF- <1>         cdecl vram_bit_copy, ebx, edi, 0x01, ecx
    61 0000121E FF6683C410          <1>
    62                              <1> 
    63                              <1>         ;-----------------------------------------
    64                              <1>         ; 【レジスタの復帰】
    65                              <1>         ;-----------------------------------------
    66 00001223 5F                  <1>         pop edi
    67 00001224 59                  <1>         pop ecx
    68 00001225 5B                  <1>         pop ebx
    69 00001226 58                  <1>         pop eax
    70                              <1> 
    71                              <1>         ;-----------------------------------------
    72                              <1>         ; 【スタックフレームの破棄】
    73                              <1>         ;-----------------------------------------
    74 00001227 89EC                <1>         mov esp, ebp
    75 00001229 5D                  <1>         pop ebp
    76                              <1> 
    77 0000122A C3                  <1>         ret
    78                              <1> 
    79 0000122B 202020202020202000  <1> .s0:    db '        ', 0
    80 00001234 00000008            <1> .t0:    dw 0x0000, 0x0800
    81 00001238 00010009            <1>         dw 0x0100, 0x0900
    82 0000123C 0002000A            <1>         dw 0x0200, 0x0A00
    83 00001240 0003000B            <1>         dw 0x0300, 0x0B00
    84 00001244 0004000C            <1>         dw 0x0400, 0x0C00
    85 00001248 0005000D            <1>         dw 0x0500, 0x0D00
    86 0000124C 0006000E            <1>         dw 0x0600, 0x0E00
    87 00001250 0007000F            <1>         dw 0x0700, 0x0F00
   205                                  %include "../modules/protect/draw_line.s"
     1                              <1> draw_line:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 00001254 55                  <1>         push ebp
     6 00001255 89E5                <1>         mov ebp, esp
     7                              <1> 
     8 00001257 6A00                <1>         push dword 0
     9 00001259 6A00                <1>         push dword 0
    10 0000125B 6A00                <1>         push dword 0
    11 0000125D 6A00                <1>         push dword 0
    12 0000125F 6A00                <1>         push dword 0
    13 00001261 6A00                <1>         push dword 0
    14 00001263 6A00                <1>         push dword 0
    15                              <1> 
    16                              <1>         ;-----------------------------------------
    17                              <1>         ; 【レジスタの保存】
    18                              <1>         ;-----------------------------------------
    19 00001265 50                  <1>         push eax
    20 00001266 53                  <1>         push ebx
    21 00001267 51                  <1>         push ecx
    22 00001268 52                  <1>         push edx
    23 00001269 56                  <1>         push esi
    24 0000126A 57                  <1>         push edi
    25                              <1> 
    26                              <1>         ;-----------------------------------------
    27                              <1>         ; 幅を計算(X軸)
    28                              <1>         ;-----------------------------------------
    29 0000126B 8B4508              <1>         mov eax, [ebp + 8]
    30 0000126E 8B5D10              <1>         mov ebx, [ebp + 16]
    31 00001271 29C3                <1>         sub ebx, eax
    32 00001273 7D09                <1>         jge .10F
    33                              <1> 
    34 00001275 F7DB                <1>         neg ebx
    35 00001277 BEFFFFFFFF          <1>         mov esi, -1
    36 0000127C EB05                <1>         jmp .10E
    37                              <1> .10F:
    38 0000127E BE01000000          <1>         mov esi, 1
    39                              <1> .10E:
    40                              <1> 
    41                              <1>         ;-----------------------------------------
    42                              <1>         ; 高さを計算(Y軸)
    43                              <1>         ;-----------------------------------------
    44 00001283 8B4D0C              <1>         mov ecx, [ebp + 12]
    45 00001286 8B5514              <1>         mov edx, [ebp + 20]
    46 00001289 29CA                <1>         sub edx, ecx
    47 0000128B 7D09                <1>         jge .20F
    48                              <1> 
    49 0000128D F7DA                <1>         neg edx
    50 0000128F BFFFFFFFFF          <1>         mov edi, -1
    51 00001294 EB05                <1>         jmp .20E
    52                              <1> .20F:
    53 00001296 BF01000000          <1>         mov edi, 1
    54                              <1> .20E:
    55                              <1> 
    56                              <1>         ;-----------------------------------------
    57                              <1>         ; X軸
    58                              <1>         ;-----------------------------------------
    59 0000129B 8945F8              <1>         mov [ebp - 8], eax
    60 0000129E 895DF4              <1>         mov [ebp - 12], ebx
    61 000012A1 8975F0              <1>         mov [ebp - 16], esi
    62                              <1> 
    63                              <1>         ;-----------------------------------------
    64                              <1>         ; Y軸
    65                              <1>         ;-----------------------------------------
    66 000012A4 894DEC              <1>         mov [ebp - 20], ecx
    67 000012A7 8955E8              <1>         mov [ebp - 24], edx
    68 000012AA 897DE4              <1>         mov [ebp - 28], edi
    69                              <1> 
    70                              <1>         ;-----------------------------------------
    71                              <1>         ; 基準軸を決める
    72                              <1>         ;-----------------------------------------
    73 000012AD 39D3                <1>         cmp ebx, edx
    74 000012AF 7F08                <1>         jg .22F
    75                              <1> 
    76 000012B1 8D75EC              <1>         lea esi, [ebp - 20]
    77 000012B4 8D7DF8              <1>         lea edi, [ebp - 8]
    78                              <1> 
    79 000012B7 EB06                <1>         jmp .22E
    80                              <1> .22F:
    81 000012B9 8D75F8              <1>         lea esi, [ebp - 8]
    82 000012BC 8D7DEC              <1>         lea edi, [ebp - 20]
    83                              <1> .22E:
    84                              <1> 
    85                              <1>         ;-----------------------------------------
    86                              <1>         ; 繰り返し回数(基準軸のドット数)
    87                              <1>         ;-----------------------------------------
    88 000012BF 8B4EFC              <1>         mov ecx, [esi - 4]
    89 000012C2 83F900              <1>         cmp ecx, 0
    90 000012C5 7505                <1>         jnz .30E
    91 000012C7 B901000000          <1>         mov ecx, 1
    92                              <1> .30E:
    93                              <1> 
    94                              <1>         ;-----------------------------------------
    95                              <1>         ; 線を描画
    96                              <1>         ;-----------------------------------------
    97                              <1> .50L:
    98                              <1> 
    99                              <1> %ifdef  USE_SYSTEM_CALL
   100 000012CC 89C8                <1>         mov eax, ecx
   101                              <1> 
   102 000012CE 8B5D18              <1>         mov ebx, [ebp + 24]
   103 000012D1 8B4DF8              <1>         mov ecx, [ebp - 8]
   104 000012D4 8B55EC              <1>         mov edx, [ebp - 20]
   105 000012D7 CD82                <1>         int 0x82
   106                              <1> 
   107 000012D9 89C1                <1>         mov ecx, eax
   108                              <1> %else
   109                              <1>         cdecl draw_pixel, dword [ebp - 8], dword [ebp - 20], dword [ebp + 24]
   110                              <1> %endif
   111                              <1> 
   112 000012DB 8B46F8              <1>         mov eax, [esi - 8]
   113 000012DE 0106                <1>         add [esi - 0], eax
   114                              <1> 
   115 000012E0 8B45FC              <1>         mov eax, [ebp - 4]
   116 000012E3 0347FC              <1>         add eax, [edi - 4]
   117 000012E6 8B5EFC              <1>         mov ebx, [esi - 4]
   118                              <1> 
   119 000012E9 39D8                <1>         cmp eax, ebx
   120 000012EB 7C07                <1>         jl .52E
   121 000012ED 29D8                <1>         sub eax, ebx
   122                              <1> 
   123 000012EF 8B5FF8              <1>         mov ebx, [edi - 8]
   124 000012F2 011F                <1>         add [edi - 0], ebx
   125                              <1> .52E:
   126 000012F4 8945FC              <1>         mov [ebp - 4], eax
   127                              <1> 
   128 000012F7 E2D3                <1>         loop .50L
   129                              <1> .50E:
   130                              <1> 
   131                              <1>         ;-----------------------------------------
   132                              <1>         ; 【レジスタの復帰】
   133                              <1>         ;-----------------------------------------
   134 000012F9 5F                  <1>         pop edi
   135 000012FA 5E                  <1>         pop esi
   136 000012FB 5A                  <1>         pop edx
   137 000012FC 59                  <1>         pop ecx
   138 000012FD 5B                  <1>         pop ebx
   139 000012FE 58                  <1>         pop eax
   140                              <1> 
   141                              <1>         ;-----------------------------------------
   142                              <1>         ; 【スタックフレームの破棄】
   143                              <1>         ;-----------------------------------------
   144 000012FF 89EC                <1>         mov esp, ebp
   145 00001301 5D                  <1>         pop ebp
   146                              <1> 
   147 00001302 C3                  <1>         ret
   148                              <1> 
   149 00001303 202020202020202000  <1> .s0:    db '        ', 0
   150 0000130C 00000008            <1> .t0:    dw 0x0000, 0x0800
   151 00001310 00010009            <1>         dw 0x0100, 0x0900
   152 00001314 0002000A            <1>         dw 0x0200, 0x0A00
   153 00001318 0003000B            <1>         dw 0x0300, 0x0B00
   154 0000131C 0004000C            <1>         dw 0x0400, 0x0C00
   155 00001320 0005000D            <1>         dw 0x0500, 0x0D00
   156 00001324 0006000E            <1>         dw 0x0600, 0x0E00
   157 00001328 0007000F            <1>         dw 0x0700, 0x0F00
   206                                  %include "../modules/protect/draw_rect.s"
     1                              <1> draw_rect:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 0000132C 55                  <1>         push ebp
     6 0000132D 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;-----------------------------------------
     9                              <1>         ; 【レジスタの保存】
    10                              <1>         ;-----------------------------------------
    11 0000132F 50                  <1>         push eax
    12 00001330 53                  <1>         push ebx
    13 00001331 51                  <1>         push ecx
    14 00001332 52                  <1>         push edx
    15 00001333 56                  <1>         push esi
    16                              <1> 
    17                              <1>         ;-----------------------------------------
    18                              <1>         ; 引数の取得
    19                              <1>         ;-----------------------------------------
    20 00001334 8B4508              <1>         mov eax, [ebp + 8]
    21 00001337 8B5D0C              <1>         mov ebx, [ebp + 12]
    22 0000133A 8B4D10              <1>         mov ecx, [ebp + 16]
    23 0000133D 8B5514              <1>         mov edx, [ebp + 20]
    24 00001340 8B7518              <1>         mov esi, [ebp + 24]
    25                              <1> 
    26                              <1>         ;-----------------------------------------
    27                              <1>         ; 座標軸の大小を確定
    28                              <1>         ;-----------------------------------------
    29 00001343 39C8                <1>         cmp eax, ecx
    30 00001345 7C01                <1>         jl .10E
    31 00001347 91                  <1>         xchg eax, ecx
    32                              <1> .10E:
    33 00001348 39D3                <1>         cmp ebx, edx
    34 0000134A 7C02                <1>         jl .20E
    35 0000134C 87DA                <1>         xchg ebx, edx
    36                              <1> .20E:
    37                              <1> 
    38                              <1>         ;-----------------------------------------
    39                              <1>         ; 矩形を描画
    40                              <1>         ;-----------------------------------------
    41 0000134E 5653515350E8FCFEFF- <1>         cdecl draw_line, eax, ebx, ecx, ebx, esi
    41 00001357 FF6683C414          <1>
    42 0000135C 5652505350E8EEFEFF- <1>         cdecl draw_line, eax, ebx, eax, edx, esi
    42 00001365 FF6683C414          <1>
    43                              <1> 
    44 0000136A 4A                  <1>         dec edx
    45 0000136B 5652515250E8DFFEFF- <1>         cdecl draw_line, eax, edx, ecx, edx, esi
    45 00001374 FF6683C414          <1>
    46 00001379 42                  <1>         inc edx
    47                              <1> 
    48 0000137A 49                  <1>         dec ecx
    49 0000137B 5652515351E8CFFEFF- <1>         cdecl draw_line, ecx, ebx, ecx, edx, esi
    49 00001384 FF6683C414          <1>
    50                              <1> 
    51                              <1>         ;-----------------------------------------
    52                              <1>         ; 【レジスタの復帰】
    53                              <1>         ;-----------------------------------------
    54 00001389 5E                  <1>         pop esi
    55 0000138A 5A                  <1>         pop edx
    56 0000138B 59                  <1>         pop ecx
    57 0000138C 5B                  <1>         pop ebx
    58 0000138D 58                  <1>         pop eax
    59                              <1> 
    60                              <1>         ;-----------------------------------------
    61                              <1>         ; 【スタックフレームの破棄】
    62                              <1>         ;-----------------------------------------
    63 0000138E 89EC                <1>         mov esp, ebp
    64 00001390 5D                  <1>         pop ebp
    65                              <1> 
    66 00001391 C3                  <1>         ret
   207                                  %include "../modules/protect/itoa.s"
     1                              <1> itoa:
     2                              <1>         ;---------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;---------------------------------------
     5 00001392 55                  <1>         push ebp
     6 00001393 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;---------------------------------------
     9                              <1>         ; 【レジスタの保存】
    10                              <1>         ;---------------------------------------
    11 00001395 50                  <1>         push eax
    12 00001396 53                  <1>         push ebx
    13 00001397 51                  <1>         push ecx
    14 00001398 52                  <1>         push edx
    15 00001399 56                  <1>         push esi
    16 0000139A 57                  <1>         push edi
    17                              <1> 
    18                              <1>         ;---------------------------------------
    19                              <1>         ; 引数を取得
    20                              <1>         ;---------------------------------------
    21 0000139B 8B4508              <1>         mov eax, [ebp + 8]
    22 0000139E 8B750C              <1>         mov esi, [ebp + 12]
    23 000013A1 8B4D10              <1>         mov ecx, [ebp + 16]
    24                              <1> 
    25 000013A4 89F7                <1>         mov edi, esi
    26 000013A6 01CF                <1>         add edi, ecx
    27 000013A8 4F                  <1>         dec edi
    28                              <1> 
    29 000013A9 8B5D18              <1>         mov ebx, [ebp + 24]
    30                              <1> 
    31                              <1>         ;---------------------------------------
    32                              <1>         ; 符号付き判定
    33                              <1>         ;---------------------------------------
    34 000013AC F7C301000000        <1>         test ebx, 0b0001
    35                              <1> .10Q:
    36 000013B2 7408                <1>         je .10E
    37 000013B4 83F800              <1>         cmp eax, 0
    38                              <1> .12Q:
    39 000013B7 7D03                <1>         jge .12E
    40 000013B9 83CB02              <1>         or ebx, 0b0010
    41                              <1> .12E:
    42                              <1> .10E:
    43                              <1> 
    44                              <1>         ;---------------------------------------
    45                              <1>         ; 符号出力判定
    46                              <1>         ;---------------------------------------
    47 000013BC F7C302000000        <1>         test ebx, 0b0010
    48                              <1> .20Q:
    49 000013C2 7410                <1>         je .20E
    50 000013C4 83F800              <1>         cmp eax, 0
    51                              <1> .22Q:
    52 000013C7 7D07                <1>         jge .22F
    53 000013C9 F7D8                <1>         neg eax
    54 000013CB C6062D              <1>         mov [esi], byte '-'
    55 000013CE EB03                <1>         jmp .22E
    56                              <1> .22F:
    57 000013D0 C6062B              <1>         mov [esi], byte '+'
    58                              <1> .22E:
    59 000013D3 49                  <1>         dec ecx
    60                              <1> .20E:
    61                              <1> 
    62                              <1>         ;---------------------------------------
    63                              <1>         ; ASCII 変換
    64                              <1>         ;---------------------------------------
    65 000013D4 8B5D14              <1>         mov ebx, [ebp + 20]
    66                              <1> .30L:
    67 000013D7 BA00000000          <1>         mov edx, 0
    68 000013DC F7F3                <1>         div ebx
    69                              <1> 
    70 000013DE 89D6                <1>         mov esi, edx
    71 000013E0 8A96[0B140000]      <1>         mov dl, byte [.ascii + esi]
    72                              <1> 
    73 000013E6 8817                <1>         mov [edi], dl
    74 000013E8 4F                  <1>         dec edi
    75                              <1> 
    76 000013E9 83F800              <1>         cmp eax, 0
    77 000013EC E0E9                <1>         loopnz .30L
    78                              <1> .30E:
    79                              <1> 
    80                              <1>         ;---------------------------------------
    81                              <1>         ; 空欄を埋める
    82                              <1>         ;---------------------------------------
    83 000013EE 83F900              <1>         cmp ecx, 0
    84                              <1> .40Q:
    85 000013F1 740E                <1>         je .40E
    86 000013F3 B020                <1>         mov al, ' '
    87 000013F5 66837D1804          <1>         cmp [ebp + 24], word 0b0100
    88                              <1> .42Q:
    89 000013FA 7502                <1>         jne .42E
    90 000013FC B030                <1>         mov al, '0'
    91                              <1> .42E:
    92 000013FE FD                  <1>         std
    93 000013FF F3AA                <1>         rep stosb
    94                              <1> .40E:
    95                              <1> 
    96                              <1>         ;---------------------------------------
    97                              <1>         ; 【レジスタの復帰】
    98                              <1>         ;---------------------------------------
    99 00001401 5F                  <1>         pop edi
   100 00001402 5E                  <1>         pop esi
   101 00001403 5A                  <1>         pop edx
   102 00001404 59                  <1>         pop ecx
   103 00001405 5B                  <1>         pop ebx
   104 00001406 58                  <1>         pop eax
   105                              <1> 
   106                              <1>         ;---------------------------------------
   107                              <1>         ; 【スタックフレームの破棄】
   108                              <1>         ;---------------------------------------
   109 00001407 89EC                <1>         mov esp, ebp
   110 00001409 5D                  <1>         pop ebp
   111                              <1> 
   112 0000140A C3                  <1>         ret
   113                              <1> 
   114 0000140B 303132333435363738- <1> .ascii db "0123456789ABCDEF"
   114 00001414 39414243444546      <1>
   208                                  %include "../modules/protect/rtc.s"
     1                              <1> rtc_get_time:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 0000141B 55                  <1>         push ebp
     6 0000141C 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;-----------------------------------------
     9                              <1>         ; 【レジスタの保存】
    10                              <1>         ;-----------------------------------------
    11 0000141E 53                  <1>         push ebx
    12                              <1> 
    13                              <1>         ;-----------------------------------------
    14                              <1>         ; RTCの読み込み
    15                              <1>         ;-----------------------------------------
    16 0000141F B00A                <1>         mov al, 0x0A
    17 00001421 E670                <1>         out 0x70, al
    18 00001423 E471                <1>         in al, 0x71
    19 00001425 A880                <1>         test al, 0x80
    20 00001427 7407                <1>         je .10F
    21 00001429 B801000000          <1>         mov eax, 1
    22 0000142E EB27                <1>         jmp .10E
    23                              <1> .10F:
    24 00001430 B004                <1>         mov al, 0x04
    25 00001432 E670                <1>         out 0x70, al
    26 00001434 E471                <1>         in al, 0x71
    27                              <1> 
    28 00001436 C1E008              <1>         shl eax, 8
    29                              <1> 
    30 00001439 B002                <1>         mov al, 0x02
    31 0000143B E670                <1>         out 0x70, al
    32 0000143D E471                <1>         in al, 0x71
    33                              <1> 
    34 0000143F C1E008              <1>         shl eax, 8
    35                              <1> 
    36 00001442 B000                <1>         mov al, 0x00
    37 00001444 E670                <1>         out 0x70, al
    38 00001446 E471                <1>         in al, 0x71
    39                              <1> 
    40 00001448 25FFFFFF00          <1>         and eax, 0x00_FF_FF_FF
    41                              <1> 
    42 0000144D 8B5D08              <1>         mov ebx, [ebp + 8]
    43 00001450 8903                <1>         mov [ebx], eax
    44                              <1> 
    45 00001452 B800000000          <1>         mov eax, 0
    46                              <1> .10E:
    47                              <1> 
    48                              <1>         ;-----------------------------------------
    49                              <1>         ; 【レジスタの復帰】
    50                              <1>         ;-----------------------------------------
    51 00001457 5B                  <1>         pop ebx
    52                              <1> 
    53                              <1>         ;-----------------------------------------
    54                              <1>         ; 【スタックフレームの破棄】
    55                              <1>         ;-----------------------------------------
    56 00001458 89EC                <1>         mov esp, ebp
    57 0000145A 5D                  <1>         pop ebp
    58                              <1> 
    59 0000145B C3                  <1>         ret
   209                                  %include "../modules/protect/draw_time.s"
     1                              <1> draw_time:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 0000145C 55                  <1>         push ebp
     6 0000145D 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;-----------------------------------------
     9                              <1>         ; 【レジスタの保存】
    10                              <1>         ;-----------------------------------------
    11 0000145F 50                  <1>         push eax
    12 00001460 53                  <1>         push ebx
    13                              <1> 
    14                              <1>         ;-----------------------------------------
    15                              <1>         ; 時刻の表示
    16                              <1>         ;-----------------------------------------
    17 00001461 8B4514              <1>         mov eax, [ebp + 20]
    18                              <1> 
    19 00001464 0FB6D8              <1>         movzx ebx, al
    20 00001467 6A046A106A0268-     <1>         cdecl itoa, ebx, .sec, 2, 16, 0b0100
    20 0000146E [CE140000]53E81AFF- <1>
    20 00001476 FFFF6683C414        <1>
    21                              <1> 
    22 0000147C 88E3                <1>         mov bl, ah
    23 0000147E 6A046A106A0268-     <1>         cdecl itoa, ebx, .min, 2, 16, 0b0100
    23 00001485 [CB140000]53E803FF- <1>
    23 0000148D FFFF6683C414        <1>
    24                              <1> 
    25 00001493 C1E810              <1>         shr eax, 16
    26 00001496 6A046A106A0268-     <1>         cdecl itoa, eax, .hour, 2, 16, 0b0100
    26 0000149D [C8140000]50E8EBFE- <1>
    26 000014A5 FFFF6683C414        <1>
    27                              <1> 
    28 000014AB 68[C8140000]FF7510- <1>         cdecl draw_str, dword[ebp + 8], dword[ebp + 12], dword[ebp + 16], .hour
    28 000014B3 FF750CFF7508E8F3FB- <1>
    28 000014BC FFFF6683C410        <1>
    29                              <1> 
    30                              <1>         ;-----------------------------------------
    31                              <1>         ; 【レジスタの復帰】
    32                              <1>         ;-----------------------------------------
    33 000014C2 5B                  <1>         pop ebx
    34 000014C3 58                  <1>         pop eax
    35                              <1> 
    36                              <1>         ;-----------------------------------------
    37                              <1>         ; 【スタックフレームの破棄】
    38                              <1>         ;-----------------------------------------
    39 000014C4 89EC                <1>         mov esp, ebp
    40 000014C6 5D                  <1>         pop ebp
    41                              <1> 
    42 000014C7 C3                  <1>         ret
    43                              <1> 
    44 000014C8 5A5A3A              <1> .hour:  db "ZZ:"
    45 000014CB 5A5A3A              <1> .min:   db "ZZ:"
    46 000014CE 5A5A00              <1> .sec:   db "ZZ", 0
   210                                  %include "../modules/protect/interrupt.s"
     1                              <1> ;***********************************************************
     2                              <1> ;  割り込みベクタの初期化
     3                              <1> ;***********************************************************
     4 000014D1 90<rept>            <1> ALIGN 4
     5 000014D4 FF07                <1> IDTR:   dw 8 * 256 - 1
     6 000014D6 00001000            <1>         dd VECT_BASE
     7                              <1> 
     8                              <1> ;***********************************************************
     9                              <1> ;  割り込みテーブルを初期化
    10                              <1> ;***********************************************************
    11                              <1> init_int:
    12                              <1>         ;-----------------------------------------
    13                              <1>         ; 【レジスタの保存】
    14                              <1>         ;-----------------------------------------
    15 000014DA 50                  <1>         push eax
    16 000014DB 53                  <1>         push ebx
    17 000014DC 51                  <1>         push ecx
    18 000014DD 57                  <1>         push edi
    19                              <1> 
    20                              <1>         ;-----------------------------------------
    21                              <1>         ; すべての割り込みにデフォルト処理を設定
    22                              <1>         ;-----------------------------------------
    23 000014DE 8D05[0B150000]      <1>         lea eax, [int_default]
    24 000014E4 BB008E0800          <1>         mov ebx, 0x0008_8E00
    25 000014E9 6693                <1>         xchg ax, bx
    26                              <1> 
    27 000014EB B900010000          <1>         mov ecx, 256
    28 000014F0 BF00001000          <1>         mov edi, VECT_BASE
    29                              <1> 
    30                              <1> .10L:
    31 000014F5 891F                <1>         mov [edi + 0], ebx
    32 000014F7 894704              <1>         mov [edi + 4], eax
    33 000014FA 83C708              <1>         add edi, 8
    34 000014FD E2F6                <1>         loop .10L
    35                              <1> 
    36                              <1>         ;-----------------------------------------
    37                              <1>         ; 割り込みディスクリプタの設定
    38                              <1>         ;-----------------------------------------
    39 000014FF 0F011D[D4140000]    <1>         lidt [IDTR]
    40                              <1> 
    41                              <1>         ;-----------------------------------------
    42                              <1>         ; 【レジスタの復帰】
    43                              <1>         ;-----------------------------------------
    44 00001506 5F                  <1>         pop edi
    45 00001507 59                  <1>         pop ecx
    46 00001508 5B                  <1>         pop ebx
    47 00001509 58                  <1>         pop eax
    48                              <1> 
    49 0000150A C3                  <1>         ret
    50                              <1> 
    51                              <1> int_default:
    52 0000150B 9C                  <1>         pushf                                           ; // EFLAGS(IF == 0)
    53 0000150C 0E                  <1>         push cs
    54 0000150D 68[29150000]        <1>         push int_stop
    55                              <1> 
    56 00001512 B8[18150000]        <1>         mov eax, .s0
    57 00001517 CF                  <1>         iret
    58                              <1> 
    59 00001518 203C2020202053544F- <1> .s0:    db " <    STOP    > ", 0
    59 00001521 50202020203E2000    <1>
    60                              <1> 
    61                              <1> int_stop:
    62 00001529 FB                  <1>         sti
    63                              <1>         
    64                              <1>         ;-----------------------------------------
    65                              <1>         ; EAXで示される文字列を表示
    66                              <1>         ;-----------------------------------------
    67 0000152A 50680F0600006A0F6A- <1>         cdecl draw_str, 25, 15, 0x060F, eax
    67 00001533 19E878FBFFFF6683C4- <1>
    67 0000153C 10                  <1>
    68                              <1> 
    69                              <1>         ;-----------------------------------------
    70                              <1>         ; スタックのデータを文字列に変換
    71                              <1>         ;-----------------------------------------
    72 0000153D 8B0424              <1>         mov eax, [esp + 0]
    73 00001540 6A046A106A0868-     <1>         cdecl itoa, eax, .p1, 8, 16, 0b0100
    73 00001547 [05160000]50E841FE- <1>
    73 0000154F FFFF6683C414        <1>
    74                              <1> 
    75 00001555 8B442404            <1>         mov eax, [esp + 4]
    76 00001559 6A046A106A0868-     <1>         cdecl itoa, eax, .p2, 8, 16, 0b0100
    76 00001560 [16160000]50E828FE- <1>
    76 00001568 FFFF6683C414        <1>
    77                              <1> 
    78 0000156E 8B442408            <1>         mov eax, [esp + 8]
    79 00001572 6A046A106A0868-     <1>         cdecl itoa, eax, .p3, 8, 16, 0b0100
    79 00001579 [27160000]50E80FFE- <1>
    79 00001581 FFFF6683C414        <1>
    80                              <1> 
    81 00001587 8B44240C            <1>         mov eax, [esp +12]
    82 0000158B 6A046A106A0868-     <1>         cdecl itoa, eax, .p4, 8, 16, 0b0100
    82 00001592 [38160000]50E8F6FD- <1>
    82 0000159A FFFF6683C414        <1>
    83                              <1> 
    84                              <1>         ;-----------------------------------------
    85                              <1>         ; 文字列の表示
    86                              <1>         ;-----------------------------------------
    87 000015A0 68[FE150000]68040F- <1>         cdecl draw_str, 25, 16, 0x0F04, .s1
    87 000015A8 00006A106A19E8FEFA- <1>
    87 000015B1 FFFF6683C410        <1>
    88 000015B7 68[0F160000]68040F- <1>         cdecl draw_str, 25, 17, 0x0F04, .s2
    88 000015BF 00006A116A19E8E7FA- <1>
    88 000015C8 FFFF6683C410        <1>
    89 000015CE 68[20160000]68040F- <1>         cdecl draw_str, 25, 18, 0x0F04, .s3
    89 000015D6 00006A126A19E8D0FA- <1>
    89 000015DF FFFF6683C410        <1>
    90 000015E5 68[31160000]68040F- <1>         cdecl draw_str, 25, 19, 0x0F04, .s4
    90 000015ED 00006A136A19E8B9FA- <1>
    90 000015F6 FFFF6683C410        <1>
    91                              <1> 
    92                              <1>         ;-----------------------------------------
    93                              <1>         ; 無限ループ
    94                              <1>         ;-----------------------------------------
    95 000015FC EBFE                <1>         jmp $
    96                              <1> 
    97 000015FE 4553502B20303A      <1> .s1:    db "ESP+ 0:"
    98 00001605 5F5F5F5F5F5F5F5F20- <1> .p1:    db "________ ", 0
    98 0000160E 00                  <1>
    99 0000160F 2020202B20343A      <1> .s2:    db "   + 4:"
   100 00001616 5F5F5F5F5F5F5F5F20- <1> .p2:    db "________ ", 0
   100 0000161F 00                  <1>
   101 00001620 2020202B20383A      <1> .s3:    db "   + 8:"
   102 00001627 5F5F5F5F5F5F5F5F20- <1> .p3:    db "________ ", 0
   102 00001630 00                  <1>
   103 00001631 2020202B31323A      <1> .s4:    db "   +12:"
   104 00001638 5F5F5F5F5F5F5F5F20- <1> .p4:    db "________ ", 0
   104 00001641 00                  <1>
   105                              <1> 
   106                              <1> int_zero_div:
   107 00001642 9C                  <1>         pushf
   108 00001643 0E                  <1>         push cs
   109 00001644 68[29150000]        <1>         push int_stop
   110                              <1> 
   111 00001649 B8[4F160000]        <1>         mov eax, .s0
   112 0000164E CF                  <1>         iret
   113                              <1> 
   114 0000164F 203C20205A45524F20- <1> .s0:    db " <  ZERO DIV  > ", 0
   114 00001658 44495620203E2000    <1>
   211                                  %include "../modules/protect/pic.s"
     1                              <1> init_pic:
     2                              <1>         ;------------------------------
     3                              <1>         ; レジスタの保存
     4                              <1>         ;------------------------------
     5 00001660 50                  <1>         push eax
     6                              <1> 
     7                              <1>         ;------------------------------
     8                              <1>         ; マスタの設定
     9                              <1>         ;------------------------------
    10                              <1>         outp 0x20, 0x11                     ; // MASTER.ICW1 = 0x11;
    10 00001661 B011                <2>  mov al, %2
    10 00001663 E620                <2>  out %1, al
    11                              <1>         outp 0x21, 0x20                     ; // MASTER.ICW2 = 0x20;
    11 00001665 B020                <2>  mov al, %2
    11 00001667 E621                <2>  out %1, al
    12                              <1>         outp 0x21, 0x04                     ; // MASTER.ICW3 = 0x04;
    12 00001669 B004                <2>  mov al, %2
    12 0000166B E621                <2>  out %1, al
    13                              <1>         outp 0x21, 0x05                     ; // MASTER.ICW4 = 0x05;
    13 0000166D B005                <2>  mov al, %2
    13 0000166F E621                <2>  out %1, al
    14                              <1>         outp 0x21, 0xFF                     ; // マスタ割り込みマスク
    14 00001671 B0FF                <2>  mov al, %2
    14 00001673 E621                <2>  out %1, al
    15                              <1> 
    16                              <1>         ;------------------------------
    17                              <1>         ; スレーブの設定
    18                              <1>         ;------------------------------
    19                              <1>         outp 0xA0, 0x11                     ; // SLAVE.ICW1 = 0x11;
    19 00001675 B011                <2>  mov al, %2
    19 00001677 E6A0                <2>  out %1, al
    20                              <1>         outp 0xA1, 0x28                     ; // SLAVE.ICW1 = 0x28;
    20 00001679 B028                <2>  mov al, %2
    20 0000167B E6A1                <2>  out %1, al
    21                              <1>         outp 0xA1, 0x02                     ; // SLAVE.ICW1 = 0x02;
    21 0000167D B002                <2>  mov al, %2
    21 0000167F E6A1                <2>  out %1, al
    22                              <1>         outp 0xA1, 0x01                     ; // SLAVE.ICW1 = 0x01;
    22 00001681 B001                <2>  mov al, %2
    22 00001683 E6A1                <2>  out %1, al
    23                              <1>         outp 0xA1, 0xFF                     ; // スレーブ割り込みマスク
    23 00001685 B0FF                <2>  mov al, %2
    23 00001687 E6A1                <2>  out %1, al
    24                              <1> 
    25                              <1>         ;------------------------------
    26                              <1>         ; レジスタの復帰
    27                              <1>         ;------------------------------
    28 00001689 58                  <1>         pop eax
    29                              <1> 
    30 0000168A C3                  <1>         ret
   212                                  %include "../modules/protect/int_rtc.s"
     1                              <1> int_rtc:
     2                              <1>         ;-----------------------------
     3                              <1>         ; レジスタの保存
     4                              <1>         ;-----------------------------
     5 0000168B 60                  <1>         pusha
     6 0000168C 1E                  <1>         push ds
     7 0000168D 06                  <1>         push es
     8                              <1> 
     9                              <1>         ;-----------------------------
    10                              <1>         ; データ用セグメントセレクタの設定
    11                              <1>         ;-----------------------------
    12 0000168E 66B81000            <1>         mov ax, 0x0010
    13 00001692 8ED8                <1>         mov ds, ax
    14 00001694 8EC0                <1>         mov es, ax
    15                              <1> 
    16                              <1>         ;-----------------------------
    17                              <1>         ; RTCから時刻を取得
    18                              <1>         ;-----------------------------
    19 00001696 68[FC020000]E87BFD- <1>         cdecl rtc_get_time, RTC_TIME        ; EAX = get_time(&RTC_TIME);
    19 0000169E FFFF6683C404        <1>
    20                              <1> 
    21                              <1>         ;-----------------------------
    22                              <1>         ; RTCの割り込み要因を取得
    23                              <1>         ;-----------------------------
    24                              <1>         outp 0x70, 0x0C                     ; outp(0x70, 0x0C); // レジスタCを選択
    24 000016A4 B00C                <2>  mov al, %2
    24 000016A6 E670                <2>  out %1, al
    25 000016A8 E471                <1>         in al, 0x71                         ; AL = port(0x71);
    26                              <1> 
    27                              <1>         ;-----------------------------
    28                              <1>         ; 割り込みフラグをクリア(EOI)
    29                              <1>         ;-----------------------------
    30 000016AA B020                <1>         mov al, 0x20                        ; AL = EOIコマンド;
    31 000016AC E6A0                <1>         out 0xA0, al                        ; outp(0xA0, AL); // スレーブPIC
    32 000016AE E620                <1>         out 0x20, al                        ; outp(0x20, AL); // マスタPIC
    33                              <1> 
    34                              <1>         ;-----------------------------
    35                              <1>         ; レジスタの復帰
    36                              <1>         ;-----------------------------
    37 000016B0 07                  <1>         pop es
    38 000016B1 1F                  <1>         pop ds
    39 000016B2 61                  <1>         popa
    40                              <1> 
    41 000016B3 CF                  <1>         iret                                ; 割り込み処理の終了
    42                              <1> 
    43                              <1> rtc_int_en:
    44                              <1>         ;-----------------------------
    45                              <1>         ; スタックフレームの構築
    46                              <1>         ;-----------------------------
    47 000016B4 55                  <1>         push ebp
    48 000016B5 89E5                <1>         mov ebp, esp
    49                              <1> 
    50                              <1>         ;-----------------------------
    51                              <1>         ; レジスタの保存
    52                              <1>         ;-----------------------------
    53 000016B7 50                  <1>         push eax
    54                              <1> 
    55                              <1>         ;-----------------------------
    56                              <1>         ; 割り込み許可設定
    57                              <1>         ;-----------------------------
    58                              <1>         outp 0x70, 0x0B                     ; outp(0x70, AL); // レジスタBを選択
    58 000016B8 B00B                <2>  mov al, %2
    58 000016BA E670                <2>  out %1, al
    59                              <1> 
    60 000016BC E471                <1>         in al, 0x71                         ; AL = port(0x71); // レジスタBの
    61 000016BE 0A4508              <1>         or al, [ebp + 8]                    ; AL |= ビット; // 指定されたビットをセット
    62                              <1> 
    63 000016C1 E671                <1>         out 0x71, al                        ; outp(0x71, AL); // レジスタBに書き込み
    64                              <1> 
    65                              <1>         ;-----------------------------
    66                              <1>         ; レジスタの復帰
    67                              <1>         ;-----------------------------
    68 000016C3 58                  <1>         pop eax
    69                              <1> 
    70                              <1>         ;-----------------------------
    71                              <1>         ; スタックフレームの破棄
    72                              <1>         ;-----------------------------
    73 000016C4 89EC                <1>         mov esp, ebp
    74 000016C6 5D                  <1>         pop ebp
    75                              <1> 
    76 000016C7 C3                  <1>         ret
   213                                  %include "../modules/protect/int_keyboard.s"
     1                              <1> int_keyboard:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【レジスタの保存】
     4                              <1>         ;-----------------------------------------
     5 000016C8 60                  <1>         pusha
     6 000016C9 1E                  <1>         push ds
     7 000016CA 06                  <1>         push es
     8                              <1> 
     9                              <1>         ;-----------------------------------------
    10                              <1>         ; データ用セグメントの設定
    11                              <1>         ;-----------------------------------------
    12 000016CB 66B81000            <1>         mov ax, 0x0010
    13 000016CF 8ED8                <1>         mov ds, ax
    14 000016D1 8EC0                <1>         mov es, ax
    15                              <1> 
    16                              <1>         ;-----------------------------------------
    17                              <1>         ; KBCのバッファ読み取り
    18                              <1>         ;-----------------------------------------
    19 000016D3 E460                <1>         in al, 0x60
    20                              <1> 
    21                              <1>         ;-----------------------------------------
    22                              <1>         ; キーコードの保存
    23                              <1>         ;-----------------------------------------
    24 000016D5 5068[EC160000]E854- <1>         cdecl ring_wr, _KEY_BUFF, eax
    24 000016DD 0000006683C408      <1>
    25                              <1> 
    26                              <1>         ;-----------------------------------------
    27                              <1>         ; 割り込み終了コマンド送信
    28                              <1>         ;-----------------------------------------
    29                              <1>         outp 0x20, 0x20
    29 000016E4 B020                <2>  mov al, %2
    29 000016E6 E620                <2>  out %1, al
    30                              <1> 
    31                              <1>         ;-----------------------------------------
    32                              <1>         ; 【レジスタの復帰】
    33                              <1>         ;-----------------------------------------
    34 000016E8 07                  <1>         pop es
    35 000016E9 1F                  <1>         pop ds
    36 000016EA 61                  <1>         popa
    37                              <1> 
    38 000016EB CF                  <1>         iret
    39                              <1> 
    40                              <1> ALIGN 4, db 0
    41 000016EC 00<rept>            <1> _KEY_BUFF: times ring_buff_size db 0
   214                                  %include "../modules/protect/ring_buff.s"
     1                              <1> ring_rd:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【スタックフレームの構築】
     4                              <1>         ;-----------------------------------------
     5 00001704 55                  <1>         push ebp
     6 00001705 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;-----------------------------------------
     9                              <1>         ; 【レジスタの保存】
    10                              <1>         ;-----------------------------------------
    11 00001707 53                  <1>         push ebx
    12 00001708 56                  <1>         push esi
    13 00001709 57                  <1>         push edi
    14                              <1> 
    15                              <1>         ;-----------------------------------------
    16                              <1>         ; 引数を取得
    17                              <1>         ;-----------------------------------------
    18 0000170A 8B7508              <1>         mov esi, [ebp + 8]
    19 0000170D 8B7D0C              <1>         mov edi, [ebp + 12]
    20                              <1> 
    21                              <1>         ;-----------------------------------------
    22                              <1>         ; 読み込み位置を確認
    23                              <1>         ;-----------------------------------------
    24 00001710 B800000000          <1>         mov eax, 0
    25 00001715 8B1E                <1>         mov ebx, [esi + ring_buff.rp]
    26 00001717 3B5E04              <1>         cmp ebx, [esi + ring_buff.wp]
    27 0000171A 7411                <1>         je .10E
    28                              <1> 
    29 0000171C 8A441E08            <1>         mov al, [esi + ring_buff.item + ebx]
    30                              <1> 
    31 00001720 8807                <1>         mov [edi], al
    32                              <1> 
    33 00001722 43                  <1>         inc ebx
    34 00001723 83E30F              <1>         and ebx, RING_INDEX_MASK
    35 00001726 891E                <1>         mov [esi + ring_buff.rp], ebx
    36                              <1> 
    37 00001728 B801000000          <1>         mov eax, 1
    38                              <1> .10E:
    39                              <1> 
    40                              <1>         ;-----------------------------------------
    41                              <1>         ; 【レジスタの復帰】
    42                              <1>         ;-----------------------------------------
    43 0000172D 5F                  <1>         pop edi
    44 0000172E 5E                  <1>         pop esi
    45 0000172F 5B                  <1>         pop ebx
    46                              <1> 
    47                              <1>         ;-----------------------------------------
    48                              <1>         ; 【スタックフレームの破棄】
    49                              <1>         ;-----------------------------------------
    50 00001730 89EC                <1>         mov esp, ebp
    51 00001732 5D                  <1>         pop ebp
    52                              <1> 
    53 00001733 C3                  <1>         ret
    54                              <1> 
    55                              <1> ring_wr:
    56                              <1>         ;-----------------------------------------
    57                              <1>         ; 【スタックフレームの構築】
    58                              <1>         ;-----------------------------------------
    59 00001734 55                  <1>         push ebp
    60 00001735 89E5                <1>         mov ebp, esp
    61                              <1> 
    62                              <1>         ;-----------------------------------------
    63                              <1>         ; 【レジスタの保存】
    64                              <1>         ;-----------------------------------------
    65 00001737 53                  <1>         push ebx
    66 00001738 51                  <1>         push ecx
    67 00001739 56                  <1>         push esi
    68                              <1> 
    69                              <1>         ;-----------------------------------------
    70                              <1>         ; 引数を取得
    71                              <1>         ;-----------------------------------------
    72 0000173A 8B7508              <1>         mov esi, [ebp + 8]
    73                              <1> 
    74                              <1>         ;-----------------------------------------
    75                              <1>         ; 書き込み位置を確認
    76                              <1>         ;-----------------------------------------
    77 0000173D B800000000          <1>         mov eax, 0
    78 00001742 8B5E04              <1>         mov ebx, [esi + ring_buff.wp]
    79 00001745 89D9                <1>         mov ecx, ebx
    80 00001747 41                  <1>         inc ecx
    81 00001748 83E10F              <1>         and ecx, RING_INDEX_MASK
    82                              <1> 
    83 0000174B 3B0E                <1>         cmp ecx, [esi + ring_buff.rp]
    84 0000174D 740F                <1>         je .10E
    85                              <1> 
    86 0000174F 8A450C              <1>         mov al, [ebp +12]
    87                              <1> 
    88 00001752 88441E08            <1>         mov [esi + ring_buff.item + ebx], al
    89 00001756 894E04              <1>         mov [esi + ring_buff.wp], ecx
    90 00001759 B801000000          <1>         mov eax, 1
    91                              <1> .10E:
    92                              <1> 
    93                              <1>         ;-----------------------------------------
    94                              <1>         ; 【レジスタの復帰】
    95                              <1>         ;-----------------------------------------
    96 0000175E 5E                  <1>         pop esi
    97 0000175F 59                  <1>         pop ecx
    98 00001760 5B                  <1>         pop ebx
    99                              <1> 
   100                              <1>         ;-----------------------------------------
   101                              <1>         ; 【スタックフレームの破棄】
   102                              <1>         ;-----------------------------------------
   103 00001761 89EC                <1>         mov esp, ebp
   104 00001763 5D                  <1>         pop ebp
   105                              <1> 
   106 00001764 C3                  <1>         ret
   107                              <1> 
   108                              <1> draw_key:
   109                              <1>         ;-----------------------------------------
   110                              <1>         ; 【スタックフレームの構築】
   111                              <1>         ;-----------------------------------------
   112 00001765 55                  <1>         push ebp
   113 00001766 89E5                <1>         mov ebp, esp
   114                              <1> 
   115                              <1>         ;-----------------------------------------
   116                              <1>         ; 【レジスタの保存】
   117                              <1>         ;-----------------------------------------
   118 00001768 60                  <1>         pusha
   119                              <1> 
   120                              <1>         ;-----------------------------------------
   121                              <1>         ; 引数を取得
   122                              <1>         ;-----------------------------------------
   123 00001769 8B5508              <1>         mov edx, [ebp + 8]
   124 0000176C 8B7D0C              <1>         mov edi, [ebp + 12]
   125 0000176F 8B7510              <1>         mov esi, [ebp + 16]
   126                              <1> 
   127                              <1>         ;-----------------------------------------
   128                              <1>         ; リングバッファの情報を取得
   129                              <1>         ;-----------------------------------------
   130 00001772 8B1E                <1>         mov ebx, [esi + ring_buff.rp]
   131 00001774 8D7608              <1>         lea esi, [esi + ring_buff.item]
   132 00001777 B910000000          <1>         mov ecx, RING_ITEM_SIZE
   133                              <1> 
   134                              <1>         ;-----------------------------------------
   135                              <1>         ; 表示
   136                              <1>         ;-----------------------------------------
   137                              <1> .10L:
   138 0000177C 4B                  <1>         dec ebx
   139 0000177D 83E30F              <1>         and ebx, RING_INDEX_MASK
   140 00001780 8A041E              <1>         mov al, [esi + ebx]
   141                              <1> 
   142 00001783 6A046A106A0268-     <1>         cdecl itoa, eax, .tmp, 2, 16, 0b0100
   142 0000178A [B4170000]50E8FEFB- <1>
   142 00001792 FFFF6683C414        <1>
   143 00001798 68[B4170000]6A0257- <1>         cdecl draw_str, edx, edi, 0x02, .tmp
   143 000017A0 52E80BF9FFFF6683C4- <1>
   143 000017A9 10                  <1>
   144                              <1> 
   145 000017AA 83C203              <1>         add edx, 3
   146                              <1> 
   147 000017AD E2CD                <1>         loop .10L
   148                              <1> .10E:
   149                              <1> 
   150                              <1>         ;-----------------------------------------
   151                              <1>         ; 【レジスタの復帰】
   152                              <1>         ;-----------------------------------------
   153 000017AF 61                  <1>         popa
   154                              <1> 
   155                              <1>         ;-----------------------------------------
   156                              <1>         ; 【スタックフレームの破棄】
   157                              <1>         ;-----------------------------------------
   158 000017B0 89EC                <1>         mov esp, ebp
   159 000017B2 5D                  <1>         pop ebp
   160                              <1> 
   161 000017B3 C3                  <1>         ret
   162                              <1> 
   163 000017B4 2D2D2000            <1> .tmp:   db "-- ", 0
   215                                  %include "../modules/protect/timer.s"
     1                              <1> int_en_timer0:
     2                              <1>         ;-------------------------
     3                              <1>         ; レジスタの保存
     4                              <1>         ;-------------------------
     5 000017B8 50                  <1>         push eax
     6                              <1> 
     7                              <1>         ;-------------------------
     8                              <1>         ; タイマー
     9                              <1>         ;-------------------------
    10                              <1>         outp 0x43, 0b_00_11_010_0
    10 000017B9 B034                <2>  mov al, %2
    10 000017BB E643                <2>  out %1, al
    11                              <1>         outp 0x40, 0x9C
    11 000017BD B09C                <2>  mov al, %2
    11 000017BF E640                <2>  out %1, al
    12                              <1>         outp 0x40, 0x2E
    12 000017C1 B02E                <2>  mov al, %2
    12 000017C3 E640                <2>  out %1, al
    13                              <1> 
    14                              <1>         ;-------------------------
    15                              <1>         ; レジスタの復帰
    16                              <1>         ;-------------------------
    17 000017C5 58                  <1>         pop eax
    18                              <1> 
    19 000017C6 C3                  <1>         ret
   216                                  %include "../modules/protect/draw_rotation_bar.s"
     1                              <1> draw_rotation_bar:
     2                              <1>         ;-----------------------------
     3                              <1>         ; レジスタの保存
     4                              <1>         ;-----------------------------
     5 000017C7 50                  <1>         push eax
     6                              <1> 
     7                              <1>         ;-----------------------------
     8                              <1>         ; 周期動作
     9                              <1>         ;-----------------------------
    10 000017C8 A1[1C0B0000]        <1>         mov eax, [TIMER_COUNT]
    11 000017CD C1E804              <1>         shr eax, 4
    12 000017D0 3B05[F8170000]      <1>         cmp eax, [.index]
    13 000017D6 741E                <1>         je .10E
    14                              <1> 
    15 000017D8 A3[F8170000]        <1>         mov [.index], eax
    16 000017DD 83E003              <1>         and eax, 0x03
    17                              <1> 
    18 000017E0 8A80[FC170000]      <1>         mov al, [.table + eax]
    19 000017E6 506A0F6A1D6A00E899- <1>         cdecl draw_char, 0, 29, 0x000F, eax
    19 000017EF F7FFFF6683C410      <1>
    20                              <1> .10E:
    21                              <1> 
    22                              <1>         ;-----------------------------
    23                              <1>         ; レジスタの復帰
    24                              <1>         ;-----------------------------
    25 000017F6 58                  <1>         pop eax
    26                              <1> 
    27 000017F7 C3                  <1>         ret
    28                              <1> 
    29                              <1> ALIGN 4, db 0
    30 000017F8 00000000            <1> .index: dd 0
    31 000017FC 7C2F2D5C            <1> .table: db "|/-\"
   217                                  %include "../modules/protect/call_gate.s"
     1                              <1> call_gate:
     2                              <1>         ;-------------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;-------------------------------------
     5                              <1>                                                     ; ---------|-----
     6                              <1>                                                     ; EBP + 12 | X
     7                              <1>                                                     ; EBP + 16 | Y
     8                              <1>                                                     ; EBP + 20 | 色
     9                              <1>                                                     ; EBP + 24 | 文字
    10                              <1>                                                     ;----------------
    11                              <1>                                                     ; EBP +  8 | CS  コードセグメント
    12 00001800 55                  <1>         push ebp                                    ; EBP +  4 | EIP 戻り値
    13 00001801 89E5                <1>         mov ebp, esp                                ; EBP +  0 | EBP 元の値
    14                              <1>                                                     ;----------------
    15                              <1>         ;-------------------------------------
    16                              <1>         ; レジスタの保存
    17                              <1>         ;-------------------------------------
    18 00001803 60                  <1>         pusha
    19 00001804 1E                  <1>         push ds
    20 00001805 06                  <1>         push es
    21                              <1> 
    22                              <1>         ;-------------------------------------
    23                              <1>         ; データ用セグメントの設定
    24                              <1>         ;-------------------------------------
    25 00001806 66B81000            <1>         mov ax, 0x0010
    26 0000180A 8ED8                <1>         mov ds, ax
    27 0000180C 8EC0                <1>         mov es, ax
    28                              <1> 
    29                              <1>         ;-------------------------------------
    30                              <1>         ; 文字を表示
    31                              <1>         ;-------------------------------------
    32 0000180E 8B450C              <1>         mov eax, dword [ebp + 12]                   ; EAX = X
    33 00001811 8B5D10              <1>         mov ebx, dword [ebp + 16]                   ; EBX = Y
    34 00001814 8B4D14              <1>         mov ecx, dword [ebp + 20]                   ; ECX = 色
    35 00001817 8B5518              <1>         mov edx, dword [ebp + 24]                   ; EDX = 文字
    36 0000181A 52515350E88EF8FFFF- <1>         cdecl draw_str, eax, ebx, ecx, edx          ; draw_str()
    36 00001823 6683C410            <1>
    37                              <1> 
    38                              <1>         ;-------------------------------------
    39                              <1>         ; レジスタの復帰
    40                              <1>         ;-------------------------------------
    41 00001827 07                  <1>         pop es
    42 00001828 1F                  <1>         pop ds
    43 00001829 61                  <1>         popa
    44                              <1> 
    45                              <1>         ;-------------------------------------
    46                              <1>         ; スタックフレームの破棄
    47                              <1>         ;-------------------------------------
    48 0000182A 89EC                <1>         mov esp, ebp
    49 0000182C 5D                  <1>         pop ebp
    50                              <1> 
    51 0000182D CA1000              <1>         retf 4 * 4
   218                                  %include "../modules/protect/trap_gate.s"
     1                              <1> trap_gate_81:
     2                              <1>         ;--------------------------------
     3                              <1>         ; 1文字出力
     4                              <1>         ;--------------------------------
     5 00001830 50535251E852F7FFFF- <1>         cdecl draw_char, ecx, edx, ebx, eax     ; // 1文字出力
     5 00001839 6683C410            <1>
     6                              <1> 
     7 0000183D CF                  <1>         iret
     8                              <1> 
     9                              <1> trap_gate_82:
    10                              <1>         ;--------------------------------
    11                              <1>         ; 点を描画
    12                              <1>         ;--------------------------------
    13 0000183E 535251E822F9FFFF66- <1>         cdecl draw_pixel, ecx, edx, ebx         ; // 点の描画
    13 00001847 83C40C              <1>
    14                              <1> 
    15 0000184A CF                  <1>         iret
   219                                  %include "../modules/protect/test_and_set.s"
     1                              <1> test_and_set:
     2                              <1>         ;-------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;-------------------------------
     5                              <1>                                             ; EBP + 8 | ローカル変数のアドレス
     6                              <1>                                             ;---------|--------------------
     7 0000184B 55                  <1>         push ebp                            ; EBP + 4 | EIP
     8 0000184C 89E5                <1>         mov ebp, esp                        ; EBP + 0 | EBP
     9                              <1>                                             ;---------| EBP
    10                              <1>         ;-------------------------------
    11                              <1>         ; レジスタの保存
    12                              <1>         ;-------------------------------
    13 0000184E 50                  <1>         push eax
    14 0000184F 53                  <1>         push ebx
    15                              <1> 
    16                              <1>         ;-------------------------------
    17                              <1>         ; テストアンドセット
    18                              <1>         ;-------------------------------
    19 00001850 B800000000          <1>         mov eax, 0                          ; local = 0;
    20 00001855 8B5D08              <1>         mov ebx, [ebp + 8]                  ; global = アドレス;
    21                              <1> 
    22                              <1> .10L:                                       ; for (;;)
    23                              <1>                                             ; {
    24 00001858 F00FAB03            <1>         lock bts [ebx], eax                 ;   CF = TEST_AND_SET(IN_USE, 1);
    25 0000185C 7307                <1>         jnc .10E                            ;   if (0 == CF)
    26                              <1>                                             ;       break;
    27                              <1>                                             ;
    28                              <1> .12L:                                       ;   for (;;)
    29                              <1>                                             ;   {
    30 0000185E 0FA303              <1>         bt [ebx], eax                       ;       CF = TEST(IN_USE, 1);
    31 00001861 72FB                <1>         jc .12L                             ;       if (0 == CF)
    32                              <1>                                             ;           break;
    33 00001863 EBF3                <1>         jmp .10L                            ;   }
    34                              <1> .10E:                                       ; }
    35                              <1> 
    36                              <1>         ;--------------------------------
    37                              <1>         ; レジスタの復帰
    38                              <1>         ;--------------------------------
    39 00001865 5B                  <1>         pop ebx
    40 00001866 58                  <1>         pop eax
    41                              <1> 
    42                              <1>         ;--------------------------------
    43                              <1>         ; スタックフレームの破棄
    44                              <1>         ;--------------------------------
    45 00001867 89EC                <1>         mov esp, ebp
    46 00001869 5D                  <1>         pop ebp
    47                              <1> 
    48 0000186A C3                  <1>         ret
   220                                  %include "../modules/protect/int_nm.s"
     1                              <1> int_nm:
     2                              <1>         ;-----------------------------------------
     3                              <1>         ; 【レジスタの保存】
     4                              <1>         ;-----------------------------------------
     5 0000186B 60                  <1>         pusha
     6 0000186C 1E                  <1>         push ds
     7 0000186D 06                  <1>         push es
     8                              <1> 
     9                              <1>         ;-----------------------------------------
    10                              <1>         ; カーネル用セレクタを設定
    11                              <1>         ;-----------------------------------------
    12 0000186E 66B81000            <1>         mov ax, DS_KERNEL
    13 00001872 8ED8                <1>         mov ds, ax
    14 00001874 8EC0                <1>         mov es, ax
    15                              <1> 
    16                              <1>         ;-----------------------------------------
    17                              <1>         ; タスクスイッチフラグをクリア
    18                              <1>         ;-----------------------------------------
    19 00001876 0F06                <1>         clts
    20                              <1> 
    21                              <1>         ;-----------------------------------------
    22                              <1>         ; 前回/今回FPUを使用するタスク
    23                              <1>         ;-----------------------------------------
    24 00001878 8B3D[C4180000]      <1>         mov edi, [.last_tss]
    25 0000187E 0F00CE              <1>         str esi
    26 00001881 83E6F8              <1>         and esi, ~0x0007
    27                              <1> 
    28                              <1>         ;-----------------------------------------
    29                              <1>         ; FPUの初回利用をチェック
    30                              <1>         ;-----------------------------------------
    31 00001884 83FF00              <1>         cmp edi, 0
    32 00001887 7420                <1>         je .10F
    33                              <1> 
    34 00001889 39FE                <1>         cmp esi, edi
    35 0000188B 741A                <1>         je .12E
    36                              <1> 
    37 0000188D FA                  <1>         cli
    38                              <1> 
    39                              <1>         ;-----------------------------------------
    40                              <1>         ; 前回のFPUコンテキストを保存
    41                              <1>         ;-----------------------------------------
    42 0000188E 89FB                <1>         mov ebx, edi
    43 00001890 E833000000          <1>         call get_tss_base
    44 00001895 E841000000          <1>         call save_fpu_context
    45                              <1> 
    46                              <1>         ;-----------------------------------------
    47                              <1>         ; 今回のFPUコンテキストを復帰
    48                              <1>         ;-----------------------------------------
    49 0000189A 89F3                <1>         mov ebx, esi
    50 0000189C E827000000          <1>         call get_tss_base
    51 000018A1 E843000000          <1>         call load_fpu_context
    52                              <1> 
    53 000018A6 FB                  <1>         sti
    54                              <1> .12E:
    55 000018A7 EB0E                <1>         jmp .10E
    56                              <1> .10F:
    57 000018A9 FA                  <1>         cli
    58                              <1> 
    59                              <1>         ;-----------------------------------------
    60                              <1>         ; 今回のFPUコンテキストを復帰
    61                              <1>         ;-----------------------------------------
    62 000018AA 89F3                <1>         mov ebx, esi
    63 000018AC E817000000          <1>         call get_tss_base
    64 000018B1 E833000000          <1>         call load_fpu_context
    65                              <1> 
    66 000018B6 FB                  <1>         sti
    67                              <1> .10E:
    68 000018B7 8935[C4180000]      <1>         mov [.last_tss], esi
    69                              <1> 
    70                              <1>         ;-----------------------------------------
    71                              <1>         ; 【レジスタの復帰】
    72                              <1>         ;-----------------------------------------
    73 000018BD 07                  <1>         pop es
    74 000018BE 1F                  <1>         pop ds
    75 000018BF 61                  <1>         popa
    76                              <1> 
    77 000018C0 CF                  <1>         iret
    78                              <1> 
    79 000018C1 00<rept>            <1> ALIGN 4, db 0
    80 000018C4 00000000            <1> .last_tss: dd 0
    81                              <1> 
    82                              <1> get_tss_base:
    83 000018C8 8B83[EA080000]      <1>         mov eax, [GDT + ebx + 2]
    84 000018CE C1E008              <1>         shl eax, 8
    85 000018D1 8A83[EF080000]      <1>         mov al,  [GDT + ebx + 7]
    86 000018D7 C1C808              <1>         ror eax, 8
    87                              <1> 
    88 000018DA C3                  <1>         ret
    89                              <1> 
    90                              <1> save_fpu_context:
    91 000018DB DD7068              <1>         fnsave [eax + 104]
    92 000018DE C780D4000000010000- <1>         mov [eax + 104 + 108], dword 1
    92 000018E7 00                  <1>
    93                              <1> 
    94 000018E8 C3                  <1>         ret
    95                              <1> 
    96                              <1> load_fpu_context:
    97 000018E9 83B8D400000000      <1>         cmp [eax + 104 + 108], dword 0
    98 000018F0 7504                <1>         jne .10F
    99 000018F2 DBE3                <1>         fninit
   100 000018F4 EB03                <1>         jmp .10E
   101                              <1> .10F:
   102 000018F6 DD6068              <1>         frstor [eax + 104]
   103                              <1> .10E:
   104 000018F9 C3                  <1>         ret
   221                                  %include "../modules/protect/wait_tick.s"
     1                              <1> wait_tick:
     2                              <1>         ;------------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;------------------------------------
     5                              <1>                                                 ;-----------
     6                              <1>                                                 ; EBP + 8 | ウェイト
     7                              <1>                                                 ;-----------
     8 000018FA 55                  <1>         push EBP                                ; EBP + 4 | EIP(戻り番地)
     9 000018FB 89E5                <1>         mov ebp, esp                            ; EBP + 0 | EBP(元の値)
    10                              <1>                                                 ;---------|----------
    11                              <1> 
    12                              <1>         ;-----------------------------------
    13                              <1>         ; レジスタの保存
    14                              <1>         ;-----------------------------------
    15 000018FD 50                  <1>         push eax
    16 000018FE 51                  <1>         push ecx
    17                              <1> 
    18                              <1>         ;-----------------------------------
    19                              <1>         ; ウェイト
    20                              <1>         ;-----------------------------------
    21 000018FF 8B4D08              <1>         mov ecx, [ebp + 8]                      ; ECX = ウェイト回数
    22 00001902 A1[1C0B0000]        <1>         mov eax, [TIMER_COUNT]                  ; EAX = TIMER;
    23                              <1>                                                 ; do
    24                              <1>                                                 ; {
    25 00001907 3905[1C0B0000]      <1> .10L:   cmp [TIMER_COUNT], eax                  ;   while(TIMER != EAX)
    26 0000190D 74F8                <1>         je .10L
    27 0000190F 40                  <1>         inc eax                                 ;       EAX++;
    28 00001910 E2F5                <1>         loop .10L                               ; } while (--ECX);
    29                              <1> 
    30                              <1>         ;-----------------------------------
    31                              <1>         ; レジスタの復帰
    32                              <1>         ;-----------------------------------
    33 00001912 59                  <1>         pop ecx
    34 00001913 58                  <1>         pop eax
    35                              <1> 
    36                              <1>         ;-----------------------------------
    37                              <1>         ; スタックフレーム
    38                              <1>         ;-----------------------------------
    39 00001914 89EC                <1>         mov esp, ebp
    40 00001916 5D                  <1>         pop ebp
    41                              <1> 
    42 00001917 C3                  <1>         ret
   222                                  %include "../modules/protect/memcpy.s"
     1                              <1> memcpy:
     2                              <1>     ; スタックフレームの構築
     3 00001918 55                  <1>     push ebp
     4 00001919 89E5                <1>     mov ebp, esp
     5                              <1> 
     6                              <1>     ; レジスタの保存
     7 0000191B 51                  <1>     push ecx
     8 0000191C 56                  <1>     push esi
     9 0000191D 57                  <1>     push edi
    10                              <1> 
    11                              <1>     ; バイト単位でのコピー
    12 0000191E FC                  <1>     cld
    13 0000191F 8B7D08              <1>     mov edi, [ebp + 8]
    14 00001922 8B750C              <1>     mov esi, [ebp + 12]
    15 00001925 8B4D10              <1>     mov ecx, [ebp + 16]
    16                              <1> 
    17 00001928 F3A4                <1>     rep movsb
    18                              <1> 
    19                              <1>     ; レジスタの復帰
    20 0000192A 5F                  <1>     pop edi
    21 0000192B 5E                  <1>     pop esi
    22 0000192C 59                  <1>     pop ecx
    23                              <1> 
    24                              <1>     ; スタックフレームの破棄
    25 0000192D 89EC                <1>     mov esp, ebp
    26 0000192F 5D                  <1>     pop ebp
    27                              <1> 
    28 00001930 C3                  <1>     ret
   223                                  %include "../modules/protect/ctrl_alt_end.s"
     1                              <1> ctrl_alt_end:
     2                              <1>         ;--------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;--------------------------------
     5 00001931 55                  <1>         push ebp
     6 00001932 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;--------------------------------
     9                              <1>         ; キー状態保存
    10                              <1>         ;--------------------------------
    11 00001934 8B4508              <1>         mov eax, [ebp + 8]
    12 00001937 0FBAF007            <1>         btr eax, 7
    13 0000193B 7209                <1>         jc .10F
    14 0000193D 0FAB05[91190000]    <1>         bts [.key_state], eax
    15 00001944 EB07                <1>         jmp .10E
    16                              <1> .10F:
    17 00001946 0FBB05[91190000]    <1>         btc [.key_state], eax
    18                              <1> .10E:
    19                              <1> 
    20                              <1>         ;--------------------------------
    21                              <1>         ; キー押下判定
    22                              <1>         ;--------------------------------
    23 0000194D B81D000000          <1>         mov eax, 0x1D
    24 00001952 0FA305[91190000]    <1>         bt [.key_state], eax
    25 00001959 732F                <1>         jnc .20E
    26                              <1> 
    27 0000195B B838000000          <1>         mov eax, 0x38
    28 00001960 0FA305[91190000]    <1>         bt [.key_state], eax
    29 00001967 7321                <1>         jnc .20E
    30                              <1> 
    31 00001969 B838000000          <1>         mov eax, 0x38
    32 0000196E 0FA305[91190000]    <1>         bt [.key_state], eax
    33 00001975 7313                <1>         jnc .20E
    34                              <1> 
    35 00001977 B84F000000          <1>         mov eax, 0x4F
    36 0000197C 0FA305[91190000]    <1>         bt [.key_state], eax
    37 00001983 7305                <1>         jnc .20E
    38                              <1> 
    39 00001985 B8FFFFFFFF          <1>         mov eax, -1
    40                              <1> 
    41                              <1> .20E:
    42 0000198A C1F808              <1>         sar eax, 8
    43                              <1> 
    44                              <1>         ;----------------------------------
    45                              <1>         ; スタックフレームの破棄
    46                              <1>         ;----------------------------------
    47 0000198D 89EC                <1>         mov esp, ebp
    48 0000198F 5D                  <1>         pop ebp
    49                              <1> 
    50 00001990 C3                  <1>         ret
    51                              <1> 
    52 00001991 00<rept>            <1> .key_state: times 32 db 0
   224                                  %include "../modules/protect/power_off.s"
     1                              <1> power_off:
     2                              <1>         ;--------------------------------
     3                              <1>         ; レジスタの保存
     4                              <1>         ;--------------------------------
     5 000019B1 50                  <1>         push eax
     6 000019B2 53                  <1>         push ebx
     7 000019B3 51                  <1>         push ecx
     8 000019B4 52                  <1>         push edx
     9 000019B5 56                  <1>         push esi
    10                              <1> 
    11                              <1>         ;--------------------------------
    12                              <1>         ; ページングを無効化
    13                              <1>         ;--------------------------------
    14 000019B6 0F20C0              <1>         mov eax, cr0
    15 000019B9 25FFFFFF7F          <1>         and eax, 0x7FFF_FFFF
    16 000019BE 0F22C0              <1>         mov cr0, eax
    17 000019C1 EB00                <1>         jmp $ + 2
    18                              <1> 
    19                              <1>         ;--------------------------------
    20                              <1>         ; ACPIデータの確認
    21                              <1>         ;--------------------------------
    22 000019C3 A1047E0000          <1>         mov eax, [0x7C00 + 512 + 4]
    23 000019C8 8B1D087E0000        <1>         mov ebx, [0x7C00 + 512 + 8]
    24 000019CE 83F800              <1>         cmp eax, 0
    25 000019D1 7473                <1>         je .10E
    26                              <1> 
    27                              <1>         ;--------------------------------
    28                              <1>         ; RSDTテーブルの検索
    29                              <1>         ;--------------------------------
    30 000019D3 68525344545350E869- <1>         cdecl acpi_find, eax, ebx, 'RSDT'
    30 000019DC 0100006683C40C      <1>
    31 000019E3 83F800              <1>         cmp eax, 0
    32 000019E6 745E                <1>         je .10E
    33                              <1> 
    34                              <1>         ;--------------------------------
    35                              <1>         ; FACPテーブルの検索
    36                              <1>         ;--------------------------------
    37 000019E8 684641435050E88301- <1>         cdecl find_rsdt_entry, eax, 'FACP'
    37 000019F1 00006683C408        <1>
    38 000019F7 83F800              <1>         cmp eax, 0
    39 000019FA 744A                <1>         je .10E
    40                              <1> 
    41 000019FC 8B5828              <1>         mov ebx, [eax + 40]
    42 000019FF 83FB00              <1>         cmp ebx, 0
    43 00001A02 7442                <1>         je .10E
    44                              <1> 
    45                              <1>         ;--------------------------------
    46                              <1>         ; ACPIレジスタの保存
    47                              <1>         ;--------------------------------
    48 00001A04 8B4840              <1>         mov ecx, [eax + 64]
    49 00001A07 890D[3C1B0000]      <1>         mov [PM1a_CNT_BLK], ecx
    50                              <1> 
    51 00001A0D 8B4844              <1>         mov ecx, [eax + 68]
    52 00001A10 890D[401B0000]      <1>         mov [PM1b_CNT_BLK], ecx
    53                              <1> 
    54                              <1> 
    55                              <1>         ;--------------------------------
    56                              <1>         ; S5名前空間の検索
    57                              <1>         ;--------------------------------
    58 00001A16 8B4B04              <1>         mov ecx, [ebx + 4]
    59 00001A19 83E924              <1>         sub ecx, 36
    60 00001A1C 83C324              <1>         add ebx, 36
    61 00001A1F 685F53355F5153E81D- <1>         cdecl acpi_find, ebx, ecx, '_S5_'
    61 00001A28 0100006683C40C      <1>
    62 00001A2F 83F800              <1>         cmp eax, 0
    63 00001A32 7412                <1>         je .10E
    64                              <1> 
    65                              <1>         ;--------------------------------
    66                              <1>         ; パッケージデータの取得
    67                              <1>         ;--------------------------------
    68 00001A34 83C004              <1>         add eax, 4
    69 00001A37 50E86C0100006683C4- <1>         cdecl acpi_package_value, eax
    69 00001A40 04                  <1>
    70 00001A41 A3[441B0000]        <1>         mov [S5_PACKAGE], eax
    71                              <1> 
    72                              <1> .10E:
    73                              <1> 
    74                              <1>         ;--------------------------------
    75                              <1>         ; ページングを有効化
    76                              <1>         ;--------------------------------
    77 00001A46 0F20C0              <1>         mov eax, cr0
    78 00001A49 83C808              <1>         or eax, (1 << 3)
    79 00001A4C 0F22C0              <1>         mov cr0, eax
    80 00001A4F EB00                <1>         jmp $ + 2
    81                              <1> 
    82                              <1>         ;--------------------------------
    83                              <1>         ; ACPIレジスタの取得
    84                              <1>         ;--------------------------------
    85 00001A51 8B15[3C1B0000]      <1>         mov edx, [PM1a_CNT_BLK]
    86 00001A57 83FA00              <1>         cmp edx, 0
    87 00001A5A 0F8495000000        <1>         je .20E
    88                              <1> 
    89                              <1>         ;--------------------------------
    90                              <1>         ; カウントダウンの表示
    91                              <1>         ;--------------------------------
    92 00001A60 68[341B0000]680F02- <1>         cdecl draw_str, 38, 14, 0x020F, .s3
    92 00001A68 00006A0E6A26E83EF6- <1>
    92 00001A71 FFFF6683C410        <1>
    93 00001A77 6A64E87CFEFFFF6683- <1>         cdecl wait_tick, 100
    93 00001A80 C404                <1>
    94 00001A82 68[311B0000]680F02- <1>         cdecl draw_str, 38, 14, 0x020F, .s2
    94 00001A8A 00006A0E6A26E81CF6- <1>
    94 00001A93 FFFF6683C410        <1>
    95 00001A99 6A64E85AFEFFFF6683- <1>         cdecl wait_tick, 100
    95 00001AA2 C404                <1>
    96 00001AA4 68[2E1B0000]680F02- <1>         cdecl draw_str, 38, 14, 0x020F, .s1
    96 00001AAC 00006A0E6A26E8FAF5- <1>
    96 00001AB5 FFFF6683C410        <1>
    97 00001ABB 6A64E838FEFFFF6683- <1>         cdecl wait_tick, 100
    97 00001AC4 C404                <1>
    98                              <1> 
    99                              <1>         ;-------------------------------
   100                              <1>         ; PM1a_CNT_BLKの設定
   101                              <1>         ;-------------------------------
   102 00001AC6 660FB605[441B0000]  <1>         movzx ax, [S5_PACKAGE]
   103 00001ACE 66C1E00A            <1>         shl ax, 10
   104 00001AD2 660D0020            <1>         or ax, 1 << 13
   105 00001AD6 66EF                <1>         out dx, ax
   106                              <1> 
   107                              <1>         ;-------------------------------
   108                              <1>         ; PM1b_CNT_BLKの確認
   109                              <1>         ;-------------------------------
   110 00001AD8 8B15[401B0000]      <1>         mov edx, [PM1b_CNT_BLK]
   111 00001ADE 83FA00              <1>         cmp edx, 0
   112 00001AE1 7412                <1>         je .20E
   113                              <1> 
   114                              <1>         ;-------------------------------
   115                              <1>         ; PM1b_CNT_BLKの設定
   116                              <1>         ;-------------------------------
   117 00001AE3 660FB605[441B0000]  <1>         movzx ax, [S5_PACKAGE]
   118 00001AEB 66C1E00A            <1>         shl ax, 10
   119 00001AEF 660D0020            <1>         or ax, 1 << 13
   120 00001AF3 66EF                <1>         out dx, ax
   121                              <1> 
   122                              <1> .20E:
   123                              <1> 
   124                              <1>         ;-------------------------------
   125                              <1>         ; 電断待ち
   126                              <1>         ;-------------------------------
   127 00001AF5 6A64E8FEFDFFFF6683- <1>         cdecl wait_tick, 100
   127 00001AFE C404                <1>
   128                              <1> 
   129                              <1>         ;-------------------------------
   130                              <1>         ; 電断失敗メッセージ
   131                              <1>         ;-------------------------------
   132 00001B00 68[371B0000]680F02- <1>         cdecl draw_str, 38, 14, 0x020F, .s4
   132 00001B08 00006A0E6A26E89EF5- <1>
   132 00001B11 FFFF6683C410        <1>
   133                              <1> 
   134                              <1>         ;-------------------------------
   135                              <1>         ; レジスタの復帰
   136                              <1>         ;-------------------------------
   137 00001B17 5E                  <1>         pop esi
   138 00001B18 5A                  <1>         pop edx
   139 00001B19 59                  <1>         pop ecx
   140 00001B1A 5B                  <1>         pop ebx
   141 00001B1B 58                  <1>         pop eax
   142                              <1> 
   143 00001B1C C3                  <1>         ret
   144                              <1> 
   145 00001B1D 20506F776572206F66- <1> .s0:    db " Power off...   ", 0
   145 00001B26 662E2E2E20202000    <1>
   146 00001B2E 203100              <1> .s1:    db " 1", 0
   147 00001B31 203200              <1> .s2:    db " 2", 0
   148 00001B34 203300              <1> .s3:    db " 3", 0
   149 00001B37 4E4700              <1> .s4:    db "NG", 0
   150                              <1> 
   151 00001B3A 00<rept>            <1> ALIGN 4, db 0
   152 00001B3C 00000000            <1> PM1a_CNT_BLK: dd 0
   153 00001B40 00000000            <1> PM1b_CNT_BLK: dd 0
   154                              <1> S5_PACKAGE:
   155 00001B44 00                  <1> .0:     db 0
   156 00001B45 00                  <1> .1:     db 0
   157 00001B46 00                  <1> .2:     db 0
   158 00001B47 00                  <1> .3:     db 0
   225                                  %include "../modules/protect/acpi_find.s"
     1                              <1> acpi_find:
     2                              <1>         ;-----------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;-----------------------------
     5 00001B48 55                  <1>         push ebp
     6 00001B49 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;-----------------------------
     9                              <1>         ; レジスタの保存
    10                              <1>         ;-----------------------------
    11 00001B4B 50                  <1>         push eax
    12 00001B4C 51                  <1>         push ecx
    13 00001B4D 57                  <1>         push edi
    14                              <1> 
    15                              <1>         ;-----------------------------
    16                              <1>         ; 引数を取得
    17                              <1>         ;-----------------------------
    18 00001B4E 8B7D08              <1>         mov edi, [ebp + 8]
    19 00001B51 8B4D0C              <1>         mov ecx, [ebp + 12]
    20 00001B54 8B4510              <1>         mov eax, [ebp + 16]
    21                              <1> 
    22                              <1>         ;-----------------------------
    23                              <1>         ; 名前の検索
    24                              <1>         ;-----------------------------
    25 00001B57 FC                  <1>         cld
    26                              <1> .10L:
    27 00001B58 F2AE                <1>         repne scasb
    28                              <1> 
    29 00001B5A 83F900              <1>         cmp ecx, 0
    30 00001B5D 7507                <1>         jnz .11E
    31 00001B5F B800000000          <1>         mov eax, 0
    32 00001B64 EB09                <1>         jmp .10E
    33                              <1> .11E:
    34                              <1> 
    35 00001B66 263B47FF            <1>         cmp eax, [es:edi - 1]
    36 00001B6A 75EC                <1>         jne .10L
    37                              <1> 
    38 00001B6C 4F                  <1>         dec edi
    39 00001B6D 89F8                <1>         mov eax, edi
    40                              <1> .10E:
    41                              <1> 
    42                              <1>         ;------------------------------
    43                              <1>         ; レジスタの復帰
    44                              <1>         ;------------------------------
    45 00001B6F 5F                  <1>         pop edi
    46 00001B70 59                  <1>         pop ecx
    47 00001B71 5B                  <1>         pop ebx
    48                              <1> 
    49                              <1>         ;-----------------------------
    50                              <1>         ; スタックフレームの破棄
    51                              <1>         ;-----------------------------
    52 00001B72 89EC                <1>         mov esp, ebp
    53 00001B74 5D                  <1>         pop ebp
    54                              <1> 
    55 00001B75 C3                  <1>         ret
   226                                  %include "../modules/protect/find_rsdt_entry.s"
     1                              <1> find_rsdt_entry:
     2                              <1>         ;--------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;--------------------------
     5 00001B76 55                  <1>         push ebp
     6 00001B77 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;--------------------------
     9                              <1>         ; レジスタの保存
    10                              <1>         ;--------------------------
    11 00001B79 53                  <1>         push ebx
    12 00001B7A 51                  <1>         push ecx
    13 00001B7B 56                  <1>         push esi
    14 00001B7C 57                  <1>         push edi
    15                              <1> 
    16                              <1>         ;--------------------------
    17                              <1>         ; 引数の所得
    18                              <1>         ;--------------------------
    19 00001B7D 8B7508              <1>         mov esi, [ebp + 8]
    20 00001B80 8B4D0C              <1>         mov ecx, [ebp + 12]
    21                              <1> 
    22 00001B83 BB00000000          <1>         mov ebx, 0
    23                              <1> 
    24                              <1>         ;--------------------------
    25                              <1>         ; ACPIテーブル検索処理
    26                              <1>         ;--------------------------
    27 00001B88 89F7                <1>         mov edi, esi
    28 00001B8A 037E04              <1>         add edi, [esi + 4]
    29 00001B8D 83C624              <1>         add esi, 36
    30                              <1> .10L:
    31 00001B90 39FE                <1>         cmp esi, edi
    32 00001B92 7D0B                <1>         jge .10E
    33                              <1> 
    34 00001B94 AD                  <1>         lodsd
    35                              <1> 
    36 00001B95 3908                <1>         cmp [eax], ecx
    37 00001B97 7504                <1>         jne .12E
    38 00001B99 89C3                <1>         mov ebx, eax
    39 00001B9B EB02                <1>         jmp .10E
    40 00001B9D EBF1                <1> .12E:   jmp .10L
    41                              <1> .10E:
    42                              <1> 
    43 00001B9F 89D8                <1>         mov eax, ebx
    44                              <1> 
    45                              <1>         ;--------------------------
    46                              <1>         ; レジスタの復帰
    47                              <1>         ;--------------------------
    48 00001BA1 5F                  <1>         pop edi
    49 00001BA2 5E                  <1>         pop esi
    50 00001BA3 59                  <1>         pop ecx
    51 00001BA4 5B                  <1>         pop ebx
    52                              <1> 
    53                              <1>         ;--------------------------
    54                              <1>         ; スタックフレームの破棄
    55                              <1>         ;--------------------------
    56 00001BA5 89EC                <1>         mov esp, ebp
    57 00001BA7 5D                  <1>         pop ebp
    58                              <1> 
    59 00001BA8 C3                  <1>         ret
   227                                  %include "../modules/protect/acpi_package_value.s"
     1                              <1> acpi_package_value:
     2                              <1>         ;------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;------------------------
     5 00001BA9 55                  <1>         push ebp
     6 00001BAA 89E5                <1>         mov ebp, esp
     7                              <1> 
     8                              <1>         ;------------------------
     9                              <1>         ; レジスタの保存
    10                              <1>         ;------------------------
    11 00001BAC 56                  <1>         push esi
    12                              <1> 
    13                              <1>         ;------------------------
    14                              <1>         ; 引数を取得
    15                              <1>         ;------------------------
    16 00001BAD 8B7508              <1>         mov esi, [ebp + 8]
    17                              <1> 
    18                              <1>         ;------------------------
    19                              <1>         ; パケットのヘッダをスキップ
    20                              <1>         ;------------------------
    21 00001BB0 46                  <1>         inc esi
    22 00001BB1 46                  <1>         inc esi
    23 00001BB2 46                  <1>         inc esi
    24                              <1> 
    25                              <1>         ;------------------------
    26                              <1>         ; 2バイトのみを取得
    27                              <1>         ;------------------------
    28 00001BB3 8A06                <1>         mov al, [esi]
    29 00001BB5 3C0B                <1>         cmp al, 0x0B
    30 00001BB7 740A                <1>         je .C0B
    31 00001BB9 3C0C                <1>         cmp al, 0x0C
    32 00001BBB 7406                <1>         je .C0C
    33 00001BBD 3C0E                <1>         cmp al, 0x0E
    34 00001BBF 7402                <1>         je .C0E
    35 00001BC1 EB08                <1>         jmp .C0A
    36                              <1> .C0B:
    37                              <1> .C0C:
    38                              <1> .C0E:
    39 00001BC3 8A4601              <1>         mov al, [esi + 1]
    40 00001BC6 8A6602              <1>         mov ah, [esi + 2]
    41 00001BC9 EB13                <1>         jmp .10E
    42                              <1> 
    43                              <1> .C0A:
    44 00001BCB 3C0A                <1>         cmp al, 0x0A
    45 00001BCD 7504                <1>         jne .11E
    46 00001BCF 8A4601              <1>         mov al, [esi + 1]
    47 00001BD2 46                  <1>         inc esi
    48                              <1> .11E:
    49 00001BD3 46                  <1>         inc esi
    50 00001BD4 8A26                <1>         mov ah, [esi]
    51 00001BD6 80FC0A              <1>         cmp ah, 0x0A
    52 00001BD9 7503                <1>         jne .12E
    53 00001BDB 8A6601              <1>         mov ah, [esi + 1]
    54                              <1> .12E:
    55                              <1> .10E:
    56                              <1> 
    57                              <1>         ;------------------------
    58                              <1>         ; レジスタの復帰
    59                              <1>         ;------------------------
    60 00001BDE 5E                  <1>         pop esi
    61                              <1> 
    62                              <1>         ;------------------------
    63                              <1>         ; スタックフレームの破棄
    64                              <1>         ;------------------------
    65 00001BDF 89EC                <1>         mov esp, ebp
    66 00001BE1 5D                  <1>         pop ebp
    67                              <1> 
    68 00001BE2 C3                  <1>         ret
   228                                  
   229                                  ;***********************************************************
   230                                  ;  パディング
   231                                  ;***********************************************************
   232 00001BE3 00<rept>                        times KERNEL_SIZE - ($ - $$) db 0
   233                                  
   234                                  ;***********************************************************
   235                                  ;  FAT
   236                                  ;***********************************************************
   237                                  %include "fat.s"
     1                              <1> ;***********************************************************
     2                              <1> ;  FAT:FAT-1
     3                              <1> ;***********************************************************
     4                              <1>         times (FAT1_START) - ($ - $$) db 0x00
     5                              <1> ;-----------------------------------------------------------
     6                              <1> FAT1:
     7 00002000 FFFF                <1>         db 0xFF, 0xFF
     8 00002002 FFFF                <1>         dw 0xFFFF
     9 00002004 FFFF                <1>         dw 0xFFFF
    10                              <1> 
    11                              <1> ;***********************************************************
    12                              <1> ;  FAT:FAT-2
    13                              <1> ;***********************************************************
    14 00002006 00<rept>            <1>         times (FAT2_START) - ($ - $$) db 0x00
    15                              <1> ;-----------------------------------------------------------
    16                              <1> FAT2:
    17 00022000 FFFF                <1>         db 0xFF, 0xFF
    18 00022002 FFFF                <1>         dw 0xFFFF
    19 00022004 FFFF                <1>         dw 0xFFFF
    20                              <1> 
    21                              <1> ;***********************************************************
    22                              <1> ;  FAT:ルートディレクトリ領域
    23                              <1> ;***********************************************************
    24 00022006 00<rept>            <1>         times (ROOT_START) - ($ - $$) db 0x00
    25                              <1> ;-----------------------------------------------------------
    26                              <1> FAT_ROOT:
    27 00042000 424F4F5441424C4544- <1>         db 'BOOTABLE', 'DSK'
    27 00042009 534B                <1>
    28 0004200B 28                  <1>         db ATTR_ARCHIVE | ATTR_VOLUME_ID
    29 0004200C 00                  <1>         db 0x00
    30 0004200D 00                  <1>         db 0x00
    31 0004200E 0000                <1>         dw (0 << 11) | (0 << 5) | (0 / 2)
    32 00042010 0100                <1>         dw (0 << 9) | (0 << 5) | (1)
    33 00042012 0100                <1>         dw (0 << 9) | (0 << 5) | (1)
    34 00042014 0000                <1>         dw 0x0000
    35 00042016 0000                <1>         dw (0 << 11) | (0 << 5) | (0 / 2)
    36 00042018 0100                <1>         dw (0 << 9) | (0 << 5) | (1)
    37 0004201A 0000                <1>         dw 0
    38 0004201C 00000000            <1>         dd 0
    39                              <1> 
    40 00042020 5350454349414C2054- <1>         db 'SPECIAL ', 'TXT'
    40 00042029 5854                <1>
    41 0004202B 20                  <1>         db ATTR_ARCHIVE
    42 0004202C 00                  <1>         db 0x00
    43 0004202D 00                  <1>         db 0
    44 0004202E 0000                <1>         dw (0 << 11) | (0 << 5) | (0 / 2)
    45 00042030 2100                <1>         dw (0 << 9) | (1 << 5) | (1)
    46 00042032 2100                <1>         dw (0 << 9) | (1 << 5) | (1)
    47 00042034 0000                <1>         dw 0x0000
    48 00042036 0000                <1>         dw (0 << 11) | (0 << 5) | (0 / 2)
    49 00042038 2100                <1>         dw (0 << 9) | (1 << 5) | (1)
    50 0004203A 0200                <1>         dw 2
    51 0004203C 0B000000            <1>         dd FILE.end - FILE
    52                              <1> 
    53                              <1> ;***********************************************************
    54                              <1> ;  FAT:データ領域
    55                              <1> ;***********************************************************
    56 00042040 00<rept>            <1>         times FILE_START - ($ - $$) db 0x00
    57                              <1> ;-----------------------------------------------------------
    58 00046000 68656C6C6F2C204641- <1> FILE:   db 'hello, FAT!'
    58 00046009 5421                <1>
    59 0004600B 00                  <1> .end:   db 0
    60                              <1> 
    61 0004600C 00<rept>            <1> ALIGN 512, db 0x00
    62 00046200 00<rept>            <1>         times (512 * 63) db 0x00
